'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports CodeFluent.Runtime
Imports CodeFluent.Runtime.Utilities

Namespace S5T
    
    'CodeFluent Entities generated (http://www.softfluent.com). Date: .
    <System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DataObjectAttribute(),  _
     System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey}, pNome={pNome}, pCodigo={pCodigo}"),  _
     System.ComponentModel.TypeConverterAttribute(GetType(CodeFluent.Runtime.Design.NameTypeConverter))>  _
    Partial Public Class Cadastro
        Implements System.ICloneable, System.IComparable, System.IComparable(Of S5T.Cadastro), CodeFluent.Runtime.ICodeFluentCollectionEntity(Of Integer), System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable(Of S5T.Cadastro)
        
        Private _raisePropertyChangedEvents As Boolean = true
        
        Private _entityState As CodeFluent.Runtime.CodeFluentEntityState
        
        Private _pId As Long = -1
        
        Private _pNome As String = CType(Nothing, String)
        
        Private _pCodigo As Integer = CodeFluentPersistence.DefaultInt32Value
        
        <System.NonSerializedAttribute()>  _
        Private _oEmpresas As S5T.EmpresaCollection
        
        Private _pPFPJ As String = CType(Nothing, String)
        
        Private _pEndereco As String = CType(Nothing, String)
        
        Private _oCidadepId As Long = -1
        
        <System.NonSerializedAttribute()>  _
        Private _oCidade As S5T.Cidade = Nothing
        
        Private _pEnderLogradouro As String = CType(Nothing, String)
        
        Private _pEnderComplemento As String = CType(Nothing, String)
        
        Private _pEnderBairro As String = CType(Nothing, String)
        
        Private _pEnderNumero As String = CType(Nothing, String)
        
        Private _pEnderAuxLogradouro As String = CType(Nothing, String)
        
        Private _pEnderAuxNumero As String = CType(Nothing, String)
        
        Private _pEnderAuxBairro As String = CType(Nothing, String)
        
        Private _pEnderAuxComplemento As String = CType(Nothing, String)
        
        Private _pEnderecoAux As String = CType(Nothing, String)
        
        Private _pEmail As String = CType(Nothing, String)
        
        Private _oCidadeAuxpId As Long = -1
        
        <System.NonSerializedAttribute()>  _
        Private _oCidadeAux As S5T.Cidade = Nothing
        
        Private _pCpfCnpj As String = CType(Nothing, String)
        
        Private _pDataNascimento As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pRgIe As String = CType(Nothing, String)
        
        Private _pNomeFantasia As String = CType(Nothing, String)
        
        Private _pFlgSexo As String = CType(Nothing, String)
        
        Private _pDataCadastro As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pDataBaixa As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pTelefone As String = CType(Nothing, String)
        
        Private _pTelefoneAux As String = CType(Nothing, String)
        
        Private _pCelular As String = CType(Nothing, String)
        
        Private _pFax As String = CType(Nothing, String)
        
        Private _xDataHoraReg As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _xLoginReg As String = CType(Nothing, String)
        
        Private _oUsuariopId As Long = -1
        
        <System.NonSerializedAttribute()>  _
        Private _oUsuario As S5T.Usuario = Nothing
        
        Private _pCep As String = CType(Nothing, String)
        
        Private _pCepAux As String = CType(Nothing, String)
        
        <System.NonSerializedAttribute()>  _
        Private _oCadastrosTipo As S5T.CadastroTipoCollection
        
        Private _pcCadastroTipoLista As String = CType(Nothing, String)
        
        Private _pFlgPreCadastro As String = CType(Nothing, String)
        
        Private _oCadastroFilialpId As Long = -1
        
        <System.NonSerializedAttribute()>  _
        Private _oCadastroFilial As S5T.Filial = Nothing
        
        <System.NonSerializedAttribute()>  _
        Private Shared _pEmailValidator0 As CodeFluent.Runtime.Rules.EmailValidator = New CodeFluent.Runtime.Rules.EmailValidator(S5T.Resources.ValueValidationFailureHandler.Current, CType(Nothing, String), Nothing, System.Text.RegularExpressions.RegexOptions.IgnoreCase, CType(Nothing, CodeFluent.Runtime.Rules.StringValidatorOptions))
        
        <System.NonSerializedAttribute()>  _
        Private Shared _pCepValidator0 As CodeFluent.Runtime.Rules.RegularExpressionValidator = New CodeFluent.Runtime.Rules.RegularExpressionValidator(S5T.Resources.ValueValidationFailureHandler.Current, "[0-9]{5}-[0-9]{3}", CType(Nothing, System.Text.RegularExpressions.RegexOptions), (CodeFluent.Runtime.Rules.StringValidatorOptions.NullDisallowed Or CodeFluent.Runtime.Rules.StringValidatorOptions.EmptyDisallowed))
        
        'Snippet method 'OnGetpcCadastroTipoLista'
Private Sub OnGetpcCadastroTipoLista()
            Dim primeiroTipo As Boolean = True
            _pcCadastroTipoLista = String.Empty
            For Each cadastroTipo As CadastroTipo In Me.oCadastrosTipo
                If Not primeiroTipo Then
                    _pcCadastroTipoLista += ", "
                End If
                _pcCadastroTipoLista += cadastroTipo.pFlgCadastro
                primeiroTipo = False
            Next
        End Sub
        
        Public Sub New()
            MyBase.New
            Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created
        End Sub
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Overridable Property RaisePropertyChangedEvents() As Boolean
            Get
                Return Me._raisePropertyChangedEvents
            End Get
            Set
                Me._raisePropertyChangedEvents = value
            End Set
        End Property
        
        Public Overridable Property EntityKey() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityKey
            Get
                Return Me.pId.ToString
            End Get
            Set
                Me.pId = CType(ConvertUtilities.ChangeType(value, GetType(Long), -1),Long)
            End Set
        End Property
        
        Public Overridable ReadOnly Property EntityDisplayName() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityDisplayName
            Get
                Return Me.pNome
            End Get
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(-1,Long)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Long)),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property pId() As Long
            Get
                Return Me._pId
            End Get
            Set
                Me._pId = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNome() As String
            Get
                Return Me._pNome
            End Get
            Set
                Me._pNome = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNome"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property pCodigo() As Integer
            Get
                Return Me._pCodigo
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Integer).Default.Equals(value, Me._pCodigo) = true) Then
                    Return
                End If
                Dim oldKey As Integer = Me._pCodigo
                Me._pCodigo = value
                Try 
                    Me.OnCollectionKeyChanged(oldKey)
                Catch __exception As System.ArgumentException
                    Me._pCodigo = oldKey
                    Return
                End Try
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCodigo"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public ReadOnly Property oEmpresas() As S5T.EmpresaCollection
            Get
                If (Me._oEmpresas Is Nothing) Then
                    If ((Me.pId = -1)  _
                                OrElse (Me.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) = true)) Then
                        Me._oEmpresas = New S5T.EmpresaCollection(Me, Nothing)
                        Return Me._oEmpresas
                    End If
                    Me._oEmpresas = S5T.EmpresaCollection.LoadoEmpresasoCadastrosByCadastro(Me)
                End If
                Return Me._oEmpresas
            End Get
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPFPJ() As String
            Get
                Return Me._pPFPJ
            End Get
            Set
                Me._pPFPJ = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPFPJ"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEndereco() As String
            Get
                Return Me._pEndereco
            End Get
            Set
                Me._pEndereco = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEndereco"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property oCidadepId() As Long
            Get
                If ((Me._oCidadepId = -1)  _
                            AndAlso (Not (Me._oCidade) Is Nothing)) Then
                    Me._oCidadepId = Me._oCidade.pId
                End If
                Return Me._oCidadepId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me.oCidadepId) = true) Then
                    Return
                End If
                Me._oCidade = Nothing
                Me._oCidadepId = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCidade"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCidadepId"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property oCidade() As S5T.Cidade
            Get
                If (Me._oCidade Is Nothing) Then
                    Me._oCidade = S5T.Cidade.Load(Me._oCidadepId)
                End If
                Return Me._oCidade
            End Get
            Set
                Me._oCidadepId = -1
                Me._oCidade = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCidade"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCidadepId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEnderLogradouro() As String
            Get
                Return Me._pEnderLogradouro
            End Get
            Set
                Me._pEnderLogradouro = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEnderLogradouro"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEnderComplemento() As String
            Get
                Return Me._pEnderComplemento
            End Get
            Set
                Me._pEnderComplemento = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEnderComplemento"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEnderBairro() As String
            Get
                Return Me._pEnderBairro
            End Get
            Set
                Me._pEnderBairro = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEnderBairro"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEnderNumero() As String
            Get
                Return Me._pEnderNumero
            End Get
            Set
                Me._pEnderNumero = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEnderNumero"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEnderAuxLogradouro() As String
            Get
                Return Me._pEnderAuxLogradouro
            End Get
            Set
                Me._pEnderAuxLogradouro = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEnderAuxLogradouro"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEnderAuxNumero() As String
            Get
                Return Me._pEnderAuxNumero
            End Get
            Set
                Me._pEnderAuxNumero = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEnderAuxNumero"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEnderAuxBairro() As String
            Get
                Return Me._pEnderAuxBairro
            End Get
            Set
                Me._pEnderAuxBairro = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEnderAuxBairro"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEnderAuxComplemento() As String
            Get
                Return Me._pEnderAuxComplemento
            End Get
            Set
                Me._pEnderAuxComplemento = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEnderAuxComplemento"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEnderecoAux() As String
            Get
                Return Me._pEnderecoAux
            End Get
            Set
                Me._pEnderecoAux = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEnderecoAux"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pEmail() As String
            Get
                Return Me._pEmail
            End Get
            Set
                Me._pEmail = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pEmail"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property oCidadeAuxpId() As Long
            Get
                If ((Me._oCidadeAuxpId = -1)  _
                            AndAlso (Not (Me._oCidadeAux) Is Nothing)) Then
                    Me._oCidadeAuxpId = Me._oCidadeAux.pId
                End If
                Return Me._oCidadeAuxpId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me.oCidadeAuxpId) = true) Then
                    Return
                End If
                Me._oCidadeAux = Nothing
                Me._oCidadeAuxpId = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCidadeAux"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCidadeAuxpId"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property oCidadeAux() As S5T.Cidade
            Get
                If (Me._oCidadeAux Is Nothing) Then
                    Me._oCidadeAux = S5T.Cidade.Load(Me._oCidadeAuxpId)
                End If
                Return Me._oCidadeAux
            End Get
            Set
                Me._oCidadeAuxpId = -1
                Me._oCidadeAux = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCidadeAux"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCidadeAuxpId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCpfCnpj() As String
            Get
                Return Me._pCpfCnpj
            End Get
            Set
                Me._pCpfCnpj = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCpfCnpj"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pDataNascimento() As Date
            Get
                Return Me._pDataNascimento
            End Get
            Set
                Me._pDataNascimento = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDataNascimento"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pRgIe() As String
            Get
                Return Me._pRgIe
            End Get
            Set
                Me._pRgIe = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pRgIe"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNomeFantasia() As String
            Get
                Return Me._pNomeFantasia
            End Get
            Set
                Me._pNomeFantasia = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNomeFantasia"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pFlgSexo() As String
            Get
                Return Me._pFlgSexo
            End Get
            Set
                Me._pFlgSexo = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pFlgSexo"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pDataCadastro() As Date
            Get
                Return Me._pDataCadastro
            End Get
            Set
                Me._pDataCadastro = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDataCadastro"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pDataBaixa() As Date
            Get
                Return Me._pDataBaixa
            End Get
            Set
                Me._pDataBaixa = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDataBaixa"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pTelefone() As String
            Get
                Return Me._pTelefone
            End Get
            Set
                Me._pTelefone = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pTelefone"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pTelefoneAux() As String
            Get
                Return Me._pTelefoneAux
            End Get
            Set
                Me._pTelefoneAux = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pTelefoneAux"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCelular() As String
            Get
                Return Me._pCelular
            End Get
            Set
                Me._pCelular = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCelular"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pFax() As String
            Get
                Return Me._pFax
            End Get
            Set
                Me._pFax = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pFax"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property xDataHoraReg() As Date
            Get
                Return Me._xDataHoraReg
            End Get
            Set
                Me._xDataHoraReg = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("xDataHoraReg"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property xLoginReg() As String
            Get
                Return Me._xLoginReg
            End Get
            Set
                Me._xLoginReg = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("xLoginReg"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property oUsuariopId() As Long
            Get
                If ((Me._oUsuariopId = -1)  _
                            AndAlso (Not (Me._oUsuario) Is Nothing)) Then
                    Me._oUsuariopId = Me._oUsuario.pId
                End If
                Return Me._oUsuariopId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me.oUsuariopId) = true) Then
                    Return
                End If
                Me._oUsuario = Nothing
                Me._oUsuariopId = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oUsuario"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oUsuariopId"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property oUsuario() As S5T.Usuario
            Get
                If (Me._oUsuario Is Nothing) Then
                    Me._oUsuario = S5T.Usuario.Load(Me._oUsuariopId)
                End If
                Return Me._oUsuario
            End Get
            Set
                If (Not (value) Is Nothing) Then
                    value.oCadastropId = Me.pId
                End If
                Me._oUsuariopId = -1
                Me._oUsuario = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oUsuario"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oUsuariopId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCep() As String
            Get
                Return Me._pCep
            End Get
            Set
                Me._pCep = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCep"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCepAux() As String
            Get
                Return Me._pCepAux
            End Get
            Set
                Me._pCepAux = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCepAux"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public ReadOnly Property oCadastrosTipo() As S5T.CadastroTipoCollection
            Get
                If (Me._oCadastrosTipo Is Nothing) Then
                    If ((Me.pId = -1)  _
                                OrElse (Me.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) = true)) Then
                        Me._oCadastrosTipo = New S5T.CadastroTipoCollection(Me)
                        Return Me._oCadastrosTipo
                    End If
                    Me._oCadastrosTipo = S5T.CadastroTipoCollection.LoadoCadastrosTipooCadastrosByCadastro(Me)
                End If
                Return Me._oCadastrosTipo
            End Get
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pcCadastroTipoLista() As String
            Get
                Me.OnGetpcCadastroTipoLista
                Return Me._pcCadastroTipoLista
            End Get
            Set
                Me._pcCadastroTipoLista = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pcCadastroTipoLista"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pFlgPreCadastro() As String
            Get
                Return Me._pFlgPreCadastro
            End Get
            Set
                Me._pFlgPreCadastro = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pFlgPreCadastro"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property oCadastroFilialpId() As Long
            Get
                If ((Me._oCadastroFilialpId = -1)  _
                            AndAlso (Not (Me._oCadastroFilial) Is Nothing)) Then
                    Me._oCadastroFilialpId = Me._oCadastroFilial.pId
                End If
                Return Me._oCadastroFilialpId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me.oCadastroFilialpId) = true) Then
                    Return
                End If
                Me._oCadastroFilial = Nothing
                Me._oCadastroFilialpId = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCadastroFilial"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCadastroFilialpId"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property oCadastroFilial() As S5T.Filial
            Get
                If (Me._oCadastroFilial Is Nothing) Then
                    Me._oCadastroFilial = S5T.Filial.Load(Me._oCadastroFilialpId)
                End If
                Return Me._oCadastroFilial
            End Get
            Set
                If (Not (value) Is Nothing) Then
                    value.oCadastropId = Me.pId
                End If
                Me._oCadastroFilialpId = -1
                Me._oCadastroFilial = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCadastroFilial"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCadastroFilialpId"))
            End Set
        End Property
        
        Protected Shared ReadOnly Property pEmailValidator0() As CodeFluent.Runtime.Rules.EmailValidator
            Get
                Return S5T.Cadastro._pEmailValidator0
            End Get
        End Property
        
        Protected Shared ReadOnly Property pCepValidator0() As CodeFluent.Runtime.Rules.RegularExpressionValidator
            Get
                Return S5T.Cadastro._pCepValidator0
            End Get
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Error() As String Implements System.ComponentModel.IDataErrorInfo.[Error]
            Get
                Return Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            End Get
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Item(ByVal columnName As String) As String Implements System.ComponentModel.IDataErrorInfo.Item
            Get
                Return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, Me, columnName, Nothing)
            End Get
        End Property
        
        ReadOnly Property CodeFluent_Runtime_Utilities_IKeyable_System_Int32__Key() As Integer Implements CodeFluent.Runtime.Utilities.IKeyable(Of Integer).Key
            Get
                Return Me.pCodigo
            End Get
        End Property
        
        Public Overridable Property EntityState() As CodeFluent.Runtime.CodeFluentEntityState Implements CodeFluent.Runtime.ICodeFluentEntity.EntityState
            Get
                Return Me._entityState
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of CodeFluent.Runtime.CodeFluentEntityState).Default.Equals(value, Me.EntityState) = true) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                Me._entityState = value
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("EntityState"))
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Public Event EntityAction As CodeFluent.Runtime.CodeFluentEntityActionEventHandler Implements CodeFluent.Runtime.ICodeFluentEntity.EntityAction
        
        Public Event KeyChanged As System.EventHandler(Of CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Integer)) Implements CodeFluent.Runtime.Utilities.IKeyable(Of Integer).KeyChanged
        
        Protected Overridable Sub OnPropertyChanged(ByVal e As System.ComponentModel.PropertyChangedEventArgs)
            If (Me.RaisePropertyChangedEvents = false) Then
                Return
            End If
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, e)
            End If
        End Sub
        
        Protected Overridable Sub OnEntityAction(ByVal e As CodeFluent.Runtime.CodeFluentEntityActionEventArgs)
            If (Not (Me.EntityActionEvent) Is Nothing) Then
                RaiseEvent EntityAction(Me, e)
            End If
        End Sub
        
        Public Overloads Overridable Function Equals(ByVal cadastro As S5T.Cadastro) As Boolean Implements System.IEquatable(Of S5T.Cadastro).Equals
            If (cadastro Is Nothing) Then
                Return false
            End If
            If (Me.pId = -1) Then
                Return MyBase.Equals(cadastro)
            End If
            Return (Me.pId.Equals(cadastro.pId) = true)
        End Function
        
        Public Overloads Overrides Function GetHashCode() As Integer
            Return Me.pId.GetHashCode
        End Function
        
        Public Overloads Overrides Function Equals(ByVal obj As Object) As Boolean
            Dim cadastro As S5T.Cadastro = Nothing
            Try 
                cadastro = CType(obj,S5T.Cadastro)
            Catch icex As System.InvalidCastException
                cadastro = Nothing
            End Try
            Return Me.Equals(cadastro)
        End Function
        
        Friend Sub SaveoEmpresasRelations()
            If (Me._oEmpresas Is Nothing) Then
                Return
            End If
            Dim enumerator As System.Collections.IEnumerator = CType(Me._oEmpresas,CodeFluent.Runtime.ICodeFluentSet).Relations.GetEnumerator
            Dim b As Boolean
            b = enumerator.MoveNext
            Do While b
                Dim entry As System.Collections.DictionaryEntry = CType(enumerator.Current,System.Collections.DictionaryEntry)
                Dim empresa As S5T.Empresa = CType(entry.Key,S5T.Empresa)
                Dim relationType As CodeFluent.Runtime.CodeFluentRelationType = CType(entry.Value,CodeFluent.Runtime.CodeFluentRelationType)
                If ((relationType = CodeFluent.Runtime.CodeFluentRelationType.Added)  _
                            AndAlso ((empresa.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeUnlinked)  _
                            = false)) Then
                    Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
                    persistence.CreateStoredProcedureCommand(Nothing, "empresa", "Savecadastrooempresas")
                    persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
                    persistence.AddParameter("@pId2", empresa.pId, CType(-1,Long))
                    persistence.ExecuteNonQuery
                Else
                    Dim persistence1 As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
                    persistence1.CreateStoredProcedureCommand(Nothing, "empresa", "Deletecadastrooempresas")
                    persistence1.AddParameter("@pId", Me.pId, CType(-1,Long))
                    persistence1.AddParameter("@pId2", empresa.pId, CType(-1,Long))
                    persistence1.ExecuteNonQuery
                End If
                If (empresa.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeUnlinked) Then
                    empresa.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                End If
                b = enumerator.MoveNext
            Loop
            CType(Me._oEmpresas,CodeFluent.Runtime.ICodeFluentSet).Relations.Clear
        End Sub
        
        Friend Sub SaveoCadastrosTipoRelations()
            If (Me._oCadastrosTipo Is Nothing) Then
                Return
            End If
            Dim enumerator As System.Collections.IEnumerator = CType(Me._oCadastrosTipo,CodeFluent.Runtime.ICodeFluentSet).Relations.GetEnumerator
            Dim b As Boolean
            b = enumerator.MoveNext
            Do While b
                Dim entry As System.Collections.DictionaryEntry = CType(enumerator.Current,System.Collections.DictionaryEntry)
                Dim cadastroTipo As S5T.CadastroTipo = CType(entry.Key,S5T.CadastroTipo)
                Dim relationType As CodeFluent.Runtime.CodeFluentRelationType = CType(entry.Value,CodeFluent.Runtime.CodeFluentRelationType)
                If ((relationType = CodeFluent.Runtime.CodeFluentRelationType.Added)  _
                            AndAlso ((cadastroTipo.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeUnlinked)  _
                            = false)) Then
                    Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
                    persistence.CreateStoredProcedureCommand(Nothing, "cadastrotipo", "Savecadastroocadastrostipo")
                    persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
                    persistence.AddParameter("@pId2", cadastroTipo.pId, CType(-1,Long))
                    persistence.ExecuteNonQuery
                Else
                    Dim persistence1 As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
                    persistence1.CreateStoredProcedureCommand(Nothing, "cadastrotipo", "Deletecadastroocadastrostipo")
                    persistence1.AddParameter("@pId", Me.pId, CType(-1,Long))
                    persistence1.AddParameter("@pId2", cadastroTipo.pId, CType(-1,Long))
                    persistence1.ExecuteNonQuery
                End If
                If (cadastroTipo.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeUnlinked) Then
                    cadastroTipo.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                End If
                b = enumerator.MoveNext
            Loop
            CType(Me._oCadastrosTipo,CodeFluent.Runtime.ICodeFluentSet).Relations.Clear
        End Sub
        
        Overridable Function System_IComparable_CompareTo(ByVal value As Object) As Integer Implements System.IComparable.CompareTo
            Dim cadastro As S5T.Cadastro = Nothing
            Try 
                cadastro = CType(value,S5T.Cadastro)
            Catch icex As System.InvalidCastException
                cadastro = Nothing
            End Try
            If (cadastro Is Nothing) Then
                Throw New System.ArgumentException("value")
            End If
            Dim localCompareTo As Integer = Me.CompareTo(cadastro)
            Return localCompareTo
        End Function
        
        Public Overridable Function CompareTo(ByVal cadastro As S5T.Cadastro) As Integer Implements System.IComparable(Of S5T.Cadastro).CompareTo
            If (cadastro Is Nothing) Then
                Throw New System.ArgumentNullException("cadastro")
            End If
            Dim localCompareTo As Integer = Me.pCodigo.CompareTo(cadastro.pCodigo)
            Return localCompareTo
        End Function
        
        Public Overloads Overridable Function Validate(ByVal culture As System.Globalization.CultureInfo) As String
            Return CodeFluentPersistence.Validate(culture, Me, Nothing)
        End Function
        
        Public Overloads Overridable Sub Validate(ByVal culture As System.Globalization.CultureInfo, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentSummaryValidator.Validate
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results)
            evt.Culture = culture
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Dim externalValidate As String
                If (Not (evt.Argument) Is Nothing) Then
                    externalValidate = evt.Argument.ToString
                Else
                    externalValidate = S5T.Resources.Manager.GetStringWithDefault(culture, "S5T.Cadastro.ExternalValidate", "Type 'S5T.Cadastro' cannot be validated.", Nothing)
                End If
                CodeFluentPersistence.AddValidationError(results, externalValidate)
            End If
            CodeFluentPersistence.ValidateMember(culture, results, Me, Nothing)
            If (Me.pCodigo = CodeFluentPersistence.DefaultInt32Value) Then
                Dim localValidate As String = S5T.Resources.Manager.GetStringWithDefault(culture, "S5T.Cadastro.pCodigo.NullException", "'pCodigo' property cannot be set to '0' for type 'S5T.Cadastro'", Nothing)
                CodeFluentPersistence.AddValidationError(results, localValidate)
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results))
        End Sub
        
        Public Overloads Sub Validate()
            Dim var As String = Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            If (Not (var) Is Nothing) Then
                Throw New CodeFluent.Runtime.CodeFluentValidationException(var)
            End If
        End Sub
        
        Function CodeFluent_Runtime_ICodeFluentValidator_Validate(ByVal culture As System.Globalization.CultureInfo) As String Implements CodeFluent.Runtime.ICodeFluentValidator.Validate
            Dim localValidate As String = Me.Validate(culture)
            Return localValidate
        End Function
        
        Sub CodeFluent_Runtime_ICodeFluentMemberValidator_Validate(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentMemberValidator.Validate
            Me.ValidateMember(culture, memberName, results)
        End Sub
        
        Public Overloads Overridable Function Delete() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Delete
            Dim scope As System.Transactions.TransactionScope = Nothing
            Try 
                Dim options As System.Transactions.TransactionOptions = New System.Transactions.TransactionOptions()
                scope = New System.Transactions.TransactionScope(System.Transactions.TransactionScopeOption.Required, options)
                Dim ret As Boolean = false
                Me.OnBeforeDelete
                Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true)
                Me.OnEntityAction(evt)
                If (evt.Cancel = true) Then
                    scope.Complete
                    Return ret
                End If
                If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted) Then
                    scope.Complete
                    Return ret
                End If
                Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
                persistence.CreateStoredProcedureCommand(Nothing, "cadastro", "Delete")
                persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
                persistence.ExecuteNonQuery
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
                Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false))
                ret = true
                scope.Complete
                Return ret
            Finally
                If (Not (scope) Is Nothing) Then
                    scope.Dispose
                End If
            End Try
        End Function
        
        Protected Overridable Sub ReadRecord(ByVal reader As System.Data.IDataReader, ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            If (((options And CodeFluent.Runtime.CodeFluentReloadOptions.Properties)  _
                        = 0)  _
                        = false) Then
                Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
                Me._pNome = CodeFluentPersistence.GetReaderValue(reader, "pNome", CType(CType(Nothing, String),String))
                Me._pCodigo = CodeFluentPersistence.GetReaderValue(reader, "pCodigo", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._pPFPJ = CodeFluentPersistence.GetReaderValue(reader, "pPFPJ", CType(CType(Nothing, String),String))
                Me._pEndereco = CodeFluentPersistence.GetReaderValue(reader, "pEndereco", CType(CType(Nothing, String),String))
                Me.oCidadepId = CodeFluentPersistence.GetReaderValue(reader, "oCidade_pId", CType(-1,Long))
                Me._pEnderLogradouro = CodeFluentPersistence.GetReaderValue(reader, "pEnderLogradouro", CType(CType(Nothing, String),String))
                Me._pEnderComplemento = CodeFluentPersistence.GetReaderValue(reader, "pEnderComplemento", CType(CType(Nothing, String),String))
                Me._pEnderBairro = CodeFluentPersistence.GetReaderValue(reader, "pEnderBairro", CType(CType(Nothing, String),String))
                Me._pEnderNumero = CodeFluentPersistence.GetReaderValue(reader, "pEnderNumero", CType(CType(Nothing, String),String))
                Me._pEnderAuxLogradouro = CodeFluentPersistence.GetReaderValue(reader, "pEnderAuxLogradouro", CType(CType(Nothing, String),String))
                Me._pEnderAuxNumero = CodeFluentPersistence.GetReaderValue(reader, "pEnderAuxNumero", CType(CType(Nothing, String),String))
                Me._pEnderAuxBairro = CodeFluentPersistence.GetReaderValue(reader, "pEnderAuxBairro", CType(CType(Nothing, String),String))
                Me._pEnderAuxComplemento = CodeFluentPersistence.GetReaderValue(reader, "pEnderAuxComplemento", CType(CType(Nothing, String),String))
                Me._pEnderecoAux = CodeFluentPersistence.GetReaderValue(reader, "pEnderecoAux", CType(CType(Nothing, String),String))
                Me._pEmail = CodeFluentPersistence.GetReaderValue(reader, "pEmail", CType(CType(Nothing, String),String))
                Me.oCidadeAuxpId = CodeFluentPersistence.GetReaderValue(reader, "oCidadeAux_pId", CType(-1,Long))
                Me._pCpfCnpj = CodeFluentPersistence.GetReaderValue(reader, "pCpfCnpj", CType(CType(Nothing, String),String))
                Me._pDataNascimento = CodeFluentPersistence.GetReaderValue(reader, "pDataNascimento", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pRgIe = CodeFluentPersistence.GetReaderValue(reader, "pRgIe", CType(CType(Nothing, String),String))
                Me._pNomeFantasia = CodeFluentPersistence.GetReaderValue(reader, "pNomeFantasia", CType(CType(Nothing, String),String))
                Me._pFlgSexo = CodeFluentPersistence.GetReaderValue(reader, "pFlgSexo", CType(CType(Nothing, String),String))
                Me._pDataCadastro = CodeFluentPersistence.GetReaderValue(reader, "pDataCadastro", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pDataBaixa = CodeFluentPersistence.GetReaderValue(reader, "pDataBaixa", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pTelefone = CodeFluentPersistence.GetReaderValue(reader, "pTelefone", CType(CType(Nothing, String),String))
                Me._pTelefoneAux = CodeFluentPersistence.GetReaderValue(reader, "pTelefoneAux", CType(CType(Nothing, String),String))
                Me._pCelular = CodeFluentPersistence.GetReaderValue(reader, "pCelular", CType(CType(Nothing, String),String))
                Me._pFax = CodeFluentPersistence.GetReaderValue(reader, "pFax", CType(CType(Nothing, String),String))
                Me._xDataHoraReg = CodeFluentPersistence.GetReaderValue(reader, "xDataHoraReg", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._xLoginReg = CodeFluentPersistence.GetReaderValue(reader, "xLoginReg", CType(CType(Nothing, String),String))
                Me.oUsuariopId = CodeFluentPersistence.GetReaderValue(reader, "oUsuario_pId", CType(-1,Long))
                Me._pCep = CodeFluentPersistence.GetReaderValue(reader, "pCep", CType(CType(Nothing, String),String))
                Me._pCepAux = CodeFluentPersistence.GetReaderValue(reader, "pCepAux", CType(CType(Nothing, String),String))
                Me._pFlgPreCadastro = CodeFluentPersistence.GetReaderValue(reader, "pFlgPreCadastro", CType(CType(Nothing, String),String))
                Me.oCadastroFilialpId = CodeFluentPersistence.GetReaderValue(reader, "oCadastroFilial_pId", CType(-1,Long))
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecord(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecord
            Me.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
        End Sub
        
        Protected Overridable Sub ReadRecordOnSave(ByVal reader As System.Data.IDataReader)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecordOnSave(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave
            Me.ReadRecordOnSave(reader)
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function Load(ByVal pId As Long) As S5T.Cadastro
            If (pId = -1) Then
                Return Nothing
            End If
            Dim cadastro As S5T.Cadastro = New S5T.Cadastro()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "cadastro", "Load")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    cadastro.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    cadastro.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return cadastro
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadBypCodigo(ByVal pCodigo As Integer) As S5T.Cadastro
            If (pCodigo = CodeFluentPersistence.DefaultInt32Value) Then
                Return Nothing
            End If
            Dim cadastro As S5T.Cadastro = New S5T.Cadastro()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "cadastro", "LoadBypCodigo")
            persistence.AddParameter("@pCodigo", pCodigo, CodeFluentPersistence.DefaultInt32Value)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    cadastro.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    cadastro.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return cadastro
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadByoUsuario(ByVal oUsuariopId As Long) As S5T.Cadastro
            If (oUsuariopId = -1) Then
                Return Nothing
            End If
            Dim cadastro As S5T.Cadastro = New S5T.Cadastro()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "cadastro", "LoadByoUsuario")
            persistence.AddParameter("@oUsuariopId", oUsuariopId)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    cadastro.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    cadastro.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return cadastro
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadByoCadastroFilial(ByVal oCadastroFilialpId As Long) As S5T.Cadastro
            If (oCadastroFilialpId = -1) Then
                Return Nothing
            End If
            Dim cadastro As S5T.Cadastro = New S5T.Cadastro()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "cadastro", "LoadByoCadastroFilial")
            persistence.AddParameter("@oCadastroFilialpId", oCadastroFilialpId)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    cadastro.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    cadastro.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return cadastro
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadMaxCodigo() As S5T.Cadastro
            Dim cadastro As S5T.Cadastro = New S5T.Cadastro()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "cadastro", "LoadMaxCodigo")
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    cadastro.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    cadastro.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return cadastro
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        Public Shared Function LoadByParametros(ByVal parcodigo As Integer, ByVal parnome As String, ByVal parfj As String, ByVal parcpfcnpj As String, ByVal parnomecidade As String, ByVal parufcidade As String, ByVal parflgcadastro As String) As System.Collections.Generic.List(Of S5T.CadastroViewGeralTipo)
            Dim ret As System.Collections.Generic.List(Of S5T.CadastroViewGeralTipo) = CType(Nothing, System.Collections.Generic.List(Of S5T.CadastroViewGeralTipo))
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "cadastro", "LoadByParametros")
            persistence.AddParameter("@parcodigo", parcodigo)
            persistence.AddParameter("@parnome", parnome)
            persistence.AddParameter("@parfj", parfj)
            persistence.AddParameter("@parcpfcnpj", parcpfcnpj)
            persistence.AddParameter("@parnomecidade", parnomecidade)
            persistence.AddParameter("@parufcidade", parufcidade)
            persistence.AddParameter("@parflgcadastro", parflgcadastro)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    ret = New System.Collections.Generic.List(Of S5T.CadastroViewGeralTipo)()
                    CodeFluent.Runtime.CodeFluentLightWeightPersistence.ReadList(reader, ret, GetType(S5T.CadastroViewGeralTipo))
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return ret
        End Function
        
        Public Overridable Function Reload(ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions) As Boolean
            Dim ret As Boolean = false
            If (Me.pId = -1) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "cadastro", "Load")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecord(reader, options)
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    ret = true
                Else
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return ret
        End Function
        
        Protected Overridable Function BaseSave(ByVal force As Boolean) As Boolean
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted) Then
                S5T.Cadastro.Delete(Me)
                Return false
            End If
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return false
            End If
            CodeFluentPersistence.ThrowIfDeleted(Me)
            Me.Validate
            If ((force = false)  _
                        AndAlso (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged)) Then
                Return false
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "cadastro", "Save")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.AddParameter("@pNome", Me.pNome, CType(Nothing, String))
            persistence.AddParameter("@pCodigo", Me.pCodigo, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@pPFPJ", Me.pPFPJ, CType(Nothing, String))
            persistence.AddParameter("@pEndereco", Me.pEndereco, CType(Nothing, String))
            persistence.AddParameter("@oCidade_pId", Me.oCidadepId, CType(-1,Long))
            persistence.AddParameter("@pEnderLogradouro", Me.pEnderLogradouro, CType(Nothing, String))
            persistence.AddParameter("@pEnderComplemento", Me.pEnderComplemento, CType(Nothing, String))
            persistence.AddParameter("@pEnderBairro", Me.pEnderBairro, CType(Nothing, String))
            persistence.AddParameter("@pEnderNumero", Me.pEnderNumero, CType(Nothing, String))
            persistence.AddParameter("@pEnderAuxLogradouro", Me.pEnderAuxLogradouro, CType(Nothing, String))
            persistence.AddParameter("@pEnderAuxNumero", Me.pEnderAuxNumero, CType(Nothing, String))
            persistence.AddParameter("@pEnderAuxBairro", Me.pEnderAuxBairro, CType(Nothing, String))
            persistence.AddParameter("@pEnderAuxComplemento", Me.pEnderAuxComplemento, CType(Nothing, String))
            persistence.AddParameter("@pEnderecoAux", Me.pEnderecoAux, CType(Nothing, String))
            persistence.AddParameter("@pEmail", Me.pEmail, CType(Nothing, String))
            persistence.AddParameter("@oCidadeAux_pId", Me.oCidadeAuxpId, CType(-1,Long))
            persistence.AddParameter("@pCpfCnpj", Me.pCpfCnpj, CType(Nothing, String))
            persistence.AddParameter("@pDataNascimento", Me.pDataNascimento, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pRgIe", Me.pRgIe, CType(Nothing, String))
            persistence.AddParameter("@pNomeFantasia", Me.pNomeFantasia, CType(Nothing, String))
            persistence.AddParameter("@pFlgSexo", Me.pFlgSexo, CType(Nothing, String))
            persistence.AddParameter("@pDataCadastro", Me.pDataCadastro, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pDataBaixa", Me.pDataBaixa, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pTelefone", Me.pTelefone, CType(Nothing, String))
            persistence.AddParameter("@pTelefoneAux", Me.pTelefoneAux, CType(Nothing, String))
            persistence.AddParameter("@pCelular", Me.pCelular, CType(Nothing, String))
            persistence.AddParameter("@pFax", Me.pFax, CType(Nothing, String))
            persistence.AddParameter("@xDataHoraReg", Me.xDataHoraReg, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@xLoginReg", Me.xLoginReg, CType(Nothing, String))
            persistence.AddParameter("@oUsuario_pId", Me.oUsuariopId, CType(-1,Long))
            persistence.AddParameter("@pCep", Me.pCep, CType(Nothing, String))
            persistence.AddParameter("@pCepAux", Me.pCepAux, CType(Nothing, String))
            persistence.AddParameter("@pFlgPreCadastro", Me.pFlgPreCadastro, CType(Nothing, String))
            persistence.AddParameter("@oCadastroFilial_pId", Me.oCadastroFilialpId, CType(-1,Long))
            persistence.AddParameter("@_trackLastWriteUser", persistence.Context.User.Name)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecordOnSave(reader)
                End If
                CodeFluentPersistence.NextResults(reader)
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Me.SaveoEmpresasRelations
            Me.SaveoCadastrosTipoRelations
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false))
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
            Return true
        End Function
        
        Public Overloads Overridable Function Save() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Save
            Me.OnBeforeSave
            Dim localSave As Boolean = Me.BaseSave(false)
            Return localSave
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Shared Function Save(ByVal cadastro As S5T.Cadastro) As Boolean
            If (cadastro Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = cadastro.Save
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Shared Function Insert(ByVal cadastro As S5T.Cadastro) As Boolean
            Dim ret As Boolean = S5T.Cadastro.Save(cadastro)
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Shared Function Delete(ByVal cadastro As S5T.Cadastro) As Boolean
            If (cadastro Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = cadastro.Delete
            Return ret
        End Function
        
        Public Function Trace() As String
            Dim stringBuilder As System.Text.StringBuilder = New System.Text.StringBuilder()
            Dim stringWriter As System.IO.StringWriter = New System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture)
            Dim writer As System.CodeDom.Compiler.IndentedTextWriter = New System.CodeDom.Compiler.IndentedTextWriter(stringWriter)
            Me.BaseTrace(writer)
            writer.Flush
            CType(writer,System.IDisposable).Dispose
            CType(stringWriter,System.IDisposable).Dispose
            Dim sr As String = stringBuilder.ToString
            Return sr
        End Function
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)>  _
        Sub CodeFluent_Runtime_ICodeFluentObject_Trace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter) Implements CodeFluent.Runtime.ICodeFluentObject.Trace
            Me.BaseTrace(writer)
        End Sub
        
        Protected Overridable Sub BaseTrace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter)
            writer.Write("[")
            writer.Write("pId=")
            writer.Write(Me.pId)
            writer.Write(",")
            writer.Write("pNome=")
            writer.Write(Me.pNome)
            writer.Write(",")
            writer.Write("pCodigo=")
            writer.Write(Me.pCodigo)
            writer.Write(",")
            writer.Write("oEmpresas=")
            If (Not (Me._oEmpresas) Is Nothing) Then
                CType(Me._oEmpresas,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("pPFPJ=")
            writer.Write(Me.pPFPJ)
            writer.Write(",")
            writer.Write("pEndereco=")
            writer.Write(Me.pEndereco)
            writer.Write(",")
            writer.Write("oCidade=")
            If (Not (Me._oCidade) Is Nothing) Then
                CType(Me._oCidade,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("_oCidadepId=")
            writer.Write(Me._oCidadepId)
            writer.Write(",")
            writer.Write("pEnderLogradouro=")
            writer.Write(Me.pEnderLogradouro)
            writer.Write(",")
            writer.Write("pEnderComplemento=")
            writer.Write(Me.pEnderComplemento)
            writer.Write(",")
            writer.Write("pEnderBairro=")
            writer.Write(Me.pEnderBairro)
            writer.Write(",")
            writer.Write("pEnderNumero=")
            writer.Write(Me.pEnderNumero)
            writer.Write(",")
            writer.Write("pEnderAuxLogradouro=")
            writer.Write(Me.pEnderAuxLogradouro)
            writer.Write(",")
            writer.Write("pEnderAuxNumero=")
            writer.Write(Me.pEnderAuxNumero)
            writer.Write(",")
            writer.Write("pEnderAuxBairro=")
            writer.Write(Me.pEnderAuxBairro)
            writer.Write(",")
            writer.Write("pEnderAuxComplemento=")
            writer.Write(Me.pEnderAuxComplemento)
            writer.Write(",")
            writer.Write("pEnderecoAux=")
            writer.Write(Me.pEnderecoAux)
            writer.Write(",")
            writer.Write("pEmail=")
            writer.Write(Me.pEmail)
            writer.Write(",")
            writer.Write("oCidadeAux=")
            If (Not (Me._oCidadeAux) Is Nothing) Then
                CType(Me._oCidadeAux,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("_oCidadeAuxpId=")
            writer.Write(Me._oCidadeAuxpId)
            writer.Write(",")
            writer.Write("pCpfCnpj=")
            writer.Write(Me.pCpfCnpj)
            writer.Write(",")
            writer.Write("pDataNascimento=")
            writer.Write(Me.pDataNascimento)
            writer.Write(",")
            writer.Write("pRgIe=")
            writer.Write(Me.pRgIe)
            writer.Write(",")
            writer.Write("pNomeFantasia=")
            writer.Write(Me.pNomeFantasia)
            writer.Write(",")
            writer.Write("pFlgSexo=")
            writer.Write(Me.pFlgSexo)
            writer.Write(",")
            writer.Write("pDataCadastro=")
            writer.Write(Me.pDataCadastro)
            writer.Write(",")
            writer.Write("pDataBaixa=")
            writer.Write(Me.pDataBaixa)
            writer.Write(",")
            writer.Write("pTelefone=")
            writer.Write(Me.pTelefone)
            writer.Write(",")
            writer.Write("pTelefoneAux=")
            writer.Write(Me.pTelefoneAux)
            writer.Write(",")
            writer.Write("pCelular=")
            writer.Write(Me.pCelular)
            writer.Write(",")
            writer.Write("pFax=")
            writer.Write(Me.pFax)
            writer.Write(",")
            writer.Write("xDataHoraReg=")
            writer.Write(Me.xDataHoraReg)
            writer.Write(",")
            writer.Write("xLoginReg=")
            writer.Write(Me.xLoginReg)
            writer.Write(",")
            writer.Write("oUsuario=")
            If (Not (Me._oUsuario) Is Nothing) Then
                CType(Me._oUsuario,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("_oUsuariopId=")
            writer.Write(Me._oUsuariopId)
            writer.Write(",")
            writer.Write("pCep=")
            writer.Write(Me.pCep)
            writer.Write(",")
            writer.Write("pCepAux=")
            writer.Write(Me.pCepAux)
            writer.Write(",")
            writer.Write("oCadastrosTipo=")
            If (Not (Me._oCadastrosTipo) Is Nothing) Then
                CType(Me._oCadastrosTipo,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("pcCadastroTipoLista=")
            writer.Write(Me.pcCadastroTipoLista)
            writer.Write(",")
            writer.Write("pFlgPreCadastro=")
            writer.Write(Me.pFlgPreCadastro)
            writer.Write(",")
            writer.Write("oCadastroFilial=")
            If (Not (Me._oCadastroFilial) Is Nothing) Then
                CType(Me._oCadastroFilial,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("_oCadastroFilialpId=")
            writer.Write(Me._oCadastroFilialpId)
            writer.Write(", EntityState=")
            writer.Write(Me.EntityState)
            writer.Write("]")
        End Sub
        
        Public Overloads Overridable Sub SetoEmpresas(ByVal values As System.Collections.IDictionary)
            If (values Is Nothing) Then
                Throw New System.ArgumentNullException("values")
            End If
            Me.oEmpresas.Clear
            Dim enumerator As System.Collections.IEnumerator = values.GetEnumerator
            Dim b As Boolean
            b = enumerator.MoveNext
            Do While b
                Dim entry As System.Collections.DictionaryEntry = CType(enumerator.Current,System.Collections.DictionaryEntry)
                If (Not (entry.Key) Is Nothing) Then
                    Me.oEmpresas.AddByEntityKey(entry.Key.ToString)
                End If
                b = enumerator.MoveNext
            Loop
        End Sub
        
        Public Overloads Overridable Sub SetoEmpresas(ByVal values As Object)
            If (values Is Nothing) Then
                Return
            End If
            Dim dictionary As System.Collections.IDictionary = Nothing
            Try 
                dictionary = CType(values,System.Collections.IDictionary)
            Catch icex As System.InvalidCastException
                dictionary = Nothing
            End Try
            If (Not (dictionary) Is Nothing) Then
                Me.SetoEmpresas(dictionary)
                Return
            End If
            Dim oEmpresas As S5T.EmpresaCollection = Nothing
            Try 
                oEmpresas = CType(values,S5T.EmpresaCollection)
            Catch icex1 As System.InvalidCastException
                oEmpresas = Nothing
            End Try
            If (Not (oEmpresas) Is Nothing) Then
                Me._oEmpresas = oEmpresas
                Return
            End If
        End Sub
        
        Public Overloads Overridable Sub SetoCadastrosTipo(ByVal values As System.Collections.IDictionary)
            If (values Is Nothing) Then
                Throw New System.ArgumentNullException("values")
            End If
            Me.oCadastrosTipo.Clear
            Dim enumerator As System.Collections.IEnumerator = values.GetEnumerator
            Dim b As Boolean
            b = enumerator.MoveNext
            Do While b
                Dim entry As System.Collections.DictionaryEntry = CType(enumerator.Current,System.Collections.DictionaryEntry)
                If (Not (entry.Key) Is Nothing) Then
                    Me.oCadastrosTipo.AddByEntityKey(entry.Key.ToString)
                End If
                b = enumerator.MoveNext
            Loop
        End Sub
        
        Public Overloads Overridable Sub SetoCadastrosTipo(ByVal values As Object)
            If (values Is Nothing) Then
                Return
            End If
            Dim dictionary As System.Collections.IDictionary = Nothing
            Try 
                dictionary = CType(values,System.Collections.IDictionary)
            Catch icex As System.InvalidCastException
                dictionary = Nothing
            End Try
            If (Not (dictionary) Is Nothing) Then
                Me.SetoCadastrosTipo(dictionary)
                Return
            End If
            Dim oCadastrosTipo As S5T.CadastroTipoCollection = Nothing
            Try 
                oCadastrosTipo = CType(values,S5T.CadastroTipoCollection)
            Catch icex1 As System.InvalidCastException
                oCadastrosTipo = Nothing
            End Try
            If (Not (oCadastrosTipo) Is Nothing) Then
                Me._oCadastrosTipo = oCadastrosTipo
                Return
            End If
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function LoadByEntityKey(ByVal key As String) As S5T.Cadastro
            If (key Is String.Empty) Then
                Return Nothing
            End If
            Dim cadastro As S5T.Cadastro
            Dim var As Long = CType(ConvertUtilities.ChangeType(key, GetType(Long), -1),Long)
            cadastro = S5T.Cadastro.Load(var)
            Return cadastro
        End Function
        
        Protected Overridable Sub ValidateMember(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException))
            If ((memberName = "pEmail")  _
                        OrElse (memberName Is Nothing)) Then
                CodeFluent.Runtime.Rules.ValueValidator.Validate(Me, culture, "pEmail", results, S5T.Cadastro.pEmailValidator0, Me.pEmail)
            End If
            If ((memberName = "pCep")  _
                        OrElse (memberName Is Nothing)) Then
                CodeFluent.Runtime.Rules.ValueValidator.Validate(Me, culture, "pCep", results, S5T.Cadastro.pCepValidator0, Me.pCep)
            End If
        End Sub
        
        Public Overloads Function Clone(ByVal deep As Boolean) As S5T.Cadastro
            Dim cadastro As S5T.Cadastro = New S5T.Cadastro()
            Me.CopyTo(cadastro, deep)
            Return cadastro
        End Function
        
        Public Overloads Function Clone() As S5T.Cadastro
            Dim localClone As S5T.Cadastro = Me.Clone(true)
            Return localClone
        End Function
        
        Function System_ICloneable_Clone() As Object Implements System.ICloneable.Clone
            Dim localClone As Object = Me.Clone
            Return localClone
        End Function
        
        Public Overridable Sub CopyFrom(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            If (dict.Contains("pId") = true) Then
                Me.pId = CType(ConvertUtilities.ChangeType(dict("pId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("pCodigo") = true) Then
                Me.pCodigo = CType(ConvertUtilities.ChangeType(dict("pCodigo"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("pDataBaixa") = true) Then
                Me.pDataBaixa = CType(ConvertUtilities.ChangeType(dict("pDataBaixa"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pDataCadastro") = true) Then
                Me.pDataCadastro = CType(ConvertUtilities.ChangeType(dict("pDataCadastro"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pTelefoneAux") = true) Then
                Me.pTelefoneAux = CType(ConvertUtilities.ChangeType(dict("pTelefoneAux"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pTelefone") = true) Then
                Me.pTelefone = CType(ConvertUtilities.ChangeType(dict("pTelefone"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pRgIe") = true) Then
                Me.pRgIe = CType(ConvertUtilities.ChangeType(dict("pRgIe"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDataNascimento") = true) Then
                Me.pDataNascimento = CType(ConvertUtilities.ChangeType(dict("pDataNascimento"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pFlgSexo") = true) Then
                Me.pFlgSexo = CType(ConvertUtilities.ChangeType(dict("pFlgSexo"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNomeFantasia") = true) Then
                Me.pNomeFantasia = CType(ConvertUtilities.ChangeType(dict("pNomeFantasia"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCepAux") = true) Then
                Me.pCepAux = CType(ConvertUtilities.ChangeType(dict("pCepAux"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCep") = true) Then
                Me.pCep = CType(ConvertUtilities.ChangeType(dict("pCep"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pFlgPreCadastro") = true) Then
                Me.pFlgPreCadastro = CType(ConvertUtilities.ChangeType(dict("pFlgPreCadastro"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pFax") = true) Then
                Me.pFax = CType(ConvertUtilities.ChangeType(dict("pFax"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCelular") = true) Then
                Me.pCelular = CType(ConvertUtilities.ChangeType(dict("pCelular"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("xLoginReg") = true) Then
                Me.xLoginReg = CType(ConvertUtilities.ChangeType(dict("xLoginReg"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("xDataHoraReg") = true) Then
                Me.xDataHoraReg = CType(ConvertUtilities.ChangeType(dict("xDataHoraReg"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pCpfCnpj") = true) Then
                Me.pCpfCnpj = CType(ConvertUtilities.ChangeType(dict("pCpfCnpj"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEnderLogradouro") = true) Then
                Me.pEnderLogradouro = CType(ConvertUtilities.ChangeType(dict("pEnderLogradouro"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEnderBairro") = true) Then
                Me.pEnderBairro = CType(ConvertUtilities.ChangeType(dict("pEnderBairro"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEnderNumero") = true) Then
                Me.pEnderNumero = CType(ConvertUtilities.ChangeType(dict("pEnderNumero"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEndereco") = true) Then
                Me.pEndereco = CType(ConvertUtilities.ChangeType(dict("pEndereco"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPFPJ") = true) Then
                Me.pPFPJ = CType(ConvertUtilities.ChangeType(dict("pPFPJ"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNome") = true) Then
                Me.pNome = CType(ConvertUtilities.ChangeType(dict("pNome"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEnderAuxLogradouro") = true) Then
                Me.pEnderAuxLogradouro = CType(ConvertUtilities.ChangeType(dict("pEnderAuxLogradouro"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEnderecoAux") = true) Then
                Me.pEnderecoAux = CType(ConvertUtilities.ChangeType(dict("pEnderecoAux"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEmail") = true) Then
                Me.pEmail = CType(ConvertUtilities.ChangeType(dict("pEmail"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEnderComplemento") = true) Then
                Me.pEnderComplemento = CType(ConvertUtilities.ChangeType(dict("pEnderComplemento"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEnderAuxComplemento") = true) Then
                Me.pEnderAuxComplemento = CType(ConvertUtilities.ChangeType(dict("pEnderAuxComplemento"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEnderAuxNumero") = true) Then
                Me.pEnderAuxNumero = CType(ConvertUtilities.ChangeType(dict("pEnderAuxNumero"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pEnderAuxBairro") = true) Then
                Me.pEnderAuxBairro = CType(ConvertUtilities.ChangeType(dict("pEnderAuxBairro"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("oCadastroFilialpId") = true) Then
                Me.oCadastroFilialpId = CType(ConvertUtilities.ChangeType(dict("oCadastroFilialpId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("oCidadeAuxpId") = true) Then
                Me.oCidadeAuxpId = CType(ConvertUtilities.ChangeType(dict("oCidadeAuxpId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("oCidadepId") = true) Then
                Me.oCidadepId = CType(ConvertUtilities.ChangeType(dict("oCidadepId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("oUsuariopId") = true) Then
                Me.oUsuariopId = CType(ConvertUtilities.ChangeType(dict("oUsuariopId"), GetType(Long), -1),Long)
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal cadastro As S5T.Cadastro, ByVal deep As Boolean)
            If (cadastro Is Nothing) Then
                Throw New System.ArgumentNullException("cadastro")
            End If
            cadastro.pId = Me.pId
            cadastro.pCodigo = Me.pCodigo
            cadastro.pDataBaixa = Me.pDataBaixa
            cadastro.pDataCadastro = Me.pDataCadastro
            cadastro.pTelefoneAux = Me.pTelefoneAux
            cadastro.pTelefone = Me.pTelefone
            cadastro.pRgIe = Me.pRgIe
            cadastro.pDataNascimento = Me.pDataNascimento
            cadastro.pFlgSexo = Me.pFlgSexo
            cadastro.pNomeFantasia = Me.pNomeFantasia
            cadastro.pCepAux = Me.pCepAux
            cadastro.pCep = Me.pCep
            cadastro.pFlgPreCadastro = Me.pFlgPreCadastro
            cadastro.pFax = Me.pFax
            cadastro.pCelular = Me.pCelular
            cadastro.xLoginReg = Me.xLoginReg
            cadastro.xDataHoraReg = Me.xDataHoraReg
            cadastro.pCpfCnpj = Me.pCpfCnpj
            cadastro.pEnderLogradouro = Me.pEnderLogradouro
            cadastro.pEnderBairro = Me.pEnderBairro
            cadastro.pEnderNumero = Me.pEnderNumero
            cadastro.pEndereco = Me.pEndereco
            cadastro.pPFPJ = Me.pPFPJ
            cadastro.pNome = Me.pNome
            cadastro.pEnderAuxLogradouro = Me.pEnderAuxLogradouro
            cadastro.pEnderecoAux = Me.pEnderecoAux
            cadastro.pEmail = Me.pEmail
            cadastro.pEnderComplemento = Me.pEnderComplemento
            cadastro.pEnderAuxComplemento = Me.pEnderAuxComplemento
            cadastro.pEnderAuxNumero = Me.pEnderAuxNumero
            cadastro.pEnderAuxBairro = Me.pEnderAuxBairro
            cadastro.oCadastroFilialpId = Me.oCadastroFilialpId
            cadastro.oCidadeAuxpId = Me.oCidadeAuxpId
            cadastro.oCidadepId = Me.oCidadepId
            cadastro.oUsuariopId = Me.oUsuariopId
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, cadastro))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            dict("pId") = Me.pId
            dict("pCodigo") = Me.pCodigo
            dict("pDataBaixa") = Me.pDataBaixa
            dict("pDataCadastro") = Me.pDataCadastro
            dict("pTelefoneAux") = Me.pTelefoneAux
            dict("pTelefone") = Me.pTelefone
            dict("pRgIe") = Me.pRgIe
            dict("pDataNascimento") = Me.pDataNascimento
            dict("pFlgSexo") = Me.pFlgSexo
            dict("pNomeFantasia") = Me.pNomeFantasia
            dict("pCepAux") = Me.pCepAux
            dict("pCep") = Me.pCep
            dict("pFlgPreCadastro") = Me.pFlgPreCadastro
            dict("pFax") = Me.pFax
            dict("pCelular") = Me.pCelular
            dict("xLoginReg") = Me.xLoginReg
            dict("xDataHoraReg") = Me.xDataHoraReg
            dict("pCpfCnpj") = Me.pCpfCnpj
            dict("pEnderLogradouro") = Me.pEnderLogradouro
            dict("pEnderBairro") = Me.pEnderBairro
            dict("pEnderNumero") = Me.pEnderNumero
            dict("pEndereco") = Me.pEndereco
            dict("pPFPJ") = Me.pPFPJ
            dict("pNome") = Me.pNome
            dict("pEnderAuxLogradouro") = Me.pEnderAuxLogradouro
            dict("pEnderecoAux") = Me.pEnderecoAux
            dict("pEmail") = Me.pEmail
            dict("pEnderComplemento") = Me.pEnderComplemento
            dict("pEnderAuxComplemento") = Me.pEnderAuxComplemento
            dict("pEnderAuxNumero") = Me.pEnderAuxNumero
            dict("pEnderAuxBairro") = Me.pEnderAuxBairro
            dict("oCadastroFilialpId") = Me.oCadastroFilialpId
            dict("oCidadeAuxpId") = Me.oCidadeAuxpId
            dict("oCidadepId") = Me.oCidadepId
            dict("oUsuariopId") = Me.oUsuariopId
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, dict))
        End Sub
        
        Protected Sub OnCollectionKeyChanged(ByVal key As Integer)
            If (Not (Me.KeyChangedEvent) Is Nothing) Then
                RaiseEvent KeyChanged(Me, New CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Integer)(key))
            End If
        End Sub
    End Class
End Namespace
