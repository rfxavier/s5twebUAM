'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports CodeFluent.Runtime
Imports CodeFluent.Runtime.Utilities

Namespace S5TUam
    
    'CodeFluent Entities generated (http://www.softfluent.com). Date: .
    <System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DataObjectAttribute(),  _
     System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey}, DS_NOME_PROPRIEDADE={DS_NOME_PROPRIEDADE}, pId={pId}"),  _
     System.ComponentModel.TypeConverterAttribute(GetType(CodeFluent.Runtime.Design.NameTypeConverter))>  _
    Partial Public Class ACOMP_PROD_1CORTE
        Implements System.ICloneable, System.IComparable, System.IComparable(Of S5TUam.ACOMP_PROD_1CORTE), CodeFluent.Runtime.ICodeFluentCollectionEntity(Of Long), System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable(Of S5TUam.ACOMP_PROD_1CORTE)
        
        Private _raisePropertyChangedEvents As Boolean = true
        
        Private _entityState As CodeFluent.Runtime.CodeFluentEntityState
        
        Private _pId As Long = -1
        
        Private _rOWNUM As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _pROP_CODIGO As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _dS_NOME_PROPRIEDADE As String = CType(Nothing, String)
        
        Private _nRO_CORTE As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _qT_AREA_COLHIDA As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _iDADE As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _tIPO_PROPRIEDADE As String = CType(Nothing, String)
        
        Private _qT_TON_ENTREGUE As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _rENDIMENTO_PLAN As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _rENDIMENTO_REAL As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _dESVIO As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _pORC_BROCA As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pERDAS As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _iNCENDIO As String = CType(Nothing, String)
        
        Private _dATA_INCENDIO As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _dT_DESSECACAO As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _dT_CALAGEM As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _dT_PLANTIO As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _tIPO_PLANTIO As String = CType(Nothing, String)
        
        Private _eMPRESA_PLANTIO As String = CType(Nothing, String)
        
        Private _sTAND As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _tIPO_ADUBACAO As String = CType(Nothing, String)
        
        Private _tRAT_TOLETES As String = CType(Nothing, String)
        
        Private _dT_HERB_CANA_PLANTA As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _sEMANA_ENCERRAMENTO As String = CType(Nothing, String)
        
        Public Sub New()
            MyBase.New
            Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created
        End Sub
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Overridable Property RaisePropertyChangedEvents() As Boolean
            Get
                Return Me._raisePropertyChangedEvents
            End Get
            Set
                Me._raisePropertyChangedEvents = value
            End Set
        End Property
        
        Public Overridable Property EntityKey() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityKey
            Get
                Return Me.pId.ToString
            End Get
            Set
                Me.pId = CType(ConvertUtilities.ChangeType(value, GetType(Long), -1),Long)
            End Set
        End Property
        
        Public Overridable ReadOnly Property EntityDisplayName() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityDisplayName
            Get
                Return Me.DS_NOME_PROPRIEDADE
            End Get
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(-1,Long)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Long)),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property pId() As Long
            Get
                Return Me._pId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me._pId) = true) Then
                    Return
                End If
                Dim oldKey As Long = Me._pId
                Me._pId = value
                Try 
                    Me.OnCollectionKeyChanged(oldKey)
                Catch __exception As System.ArgumentException
                    Me._pId = oldKey
                    Return
                End Try
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property ROWNUM() As Integer
            Get
                Return Me._rOWNUM
            End Get
            Set
                Me._rOWNUM = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("ROWNUM"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property PROP_CODIGO() As Integer
            Get
                Return Me._pROP_CODIGO
            End Get
            Set
                Me._pROP_CODIGO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("PROP_CODIGO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property DS_NOME_PROPRIEDADE() As String
            Get
                Return Me._dS_NOME_PROPRIEDADE
            End Get
            Set
                Me._dS_NOME_PROPRIEDADE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("DS_NOME_PROPRIEDADE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property NRO_CORTE() As Integer
            Get
                Return Me._nRO_CORTE
            End Get
            Set
                Me._nRO_CORTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("NRO_CORTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property QT_AREA_COLHIDA() As Double
            Get
                Return Me._qT_AREA_COLHIDA
            End Get
            Set
                Me._qT_AREA_COLHIDA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("QT_AREA_COLHIDA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property IDADE() As Integer
            Get
                Return Me._iDADE
            End Get
            Set
                Me._iDADE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("IDADE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property TIPO_PROPRIEDADE() As String
            Get
                Return Me._tIPO_PROPRIEDADE
            End Get
            Set
                Me._tIPO_PROPRIEDADE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("TIPO_PROPRIEDADE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property QT_TON_ENTREGUE() As Double
            Get
                Return Me._qT_TON_ENTREGUE
            End Get
            Set
                Me._qT_TON_ENTREGUE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("QT_TON_ENTREGUE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property RENDIMENTO_PLAN() As Integer
            Get
                Return Me._rENDIMENTO_PLAN
            End Get
            Set
                Me._rENDIMENTO_PLAN = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("RENDIMENTO_PLAN"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property RENDIMENTO_REAL() As Integer
            Get
                Return Me._rENDIMENTO_REAL
            End Get
            Set
                Me._rENDIMENTO_REAL = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("RENDIMENTO_REAL"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property DESVIO() As Integer
            Get
                Return Me._dESVIO
            End Get
            Set
                Me._dESVIO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("DESVIO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property PORC_BROCA() As Double
            Get
                Return Me._pORC_BROCA
            End Get
            Set
                Me._pORC_BROCA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("PORC_BROCA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property PERDAS() As Double
            Get
                Return Me._pERDAS
            End Get
            Set
                Me._pERDAS = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("PERDAS"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property INCENDIO() As String
            Get
                Return Me._iNCENDIO
            End Get
            Set
                Me._iNCENDIO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("INCENDIO"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property DATA_INCENDIO() As Date
            Get
                Return Me._dATA_INCENDIO
            End Get
            Set
                Me._dATA_INCENDIO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("DATA_INCENDIO"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property DT_DESSECACAO() As Date
            Get
                Return Me._dT_DESSECACAO
            End Get
            Set
                Me._dT_DESSECACAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("DT_DESSECACAO"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property DT_CALAGEM() As Date
            Get
                Return Me._dT_CALAGEM
            End Get
            Set
                Me._dT_CALAGEM = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("DT_CALAGEM"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property DT_PLANTIO() As Date
            Get
                Return Me._dT_PLANTIO
            End Get
            Set
                Me._dT_PLANTIO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("DT_PLANTIO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property TIPO_PLANTIO() As String
            Get
                Return Me._tIPO_PLANTIO
            End Get
            Set
                Me._tIPO_PLANTIO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("TIPO_PLANTIO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property EMPRESA_PLANTIO() As String
            Get
                Return Me._eMPRESA_PLANTIO
            End Get
            Set
                Me._eMPRESA_PLANTIO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("EMPRESA_PLANTIO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property STAND() As Integer
            Get
                Return Me._sTAND
            End Get
            Set
                Me._sTAND = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("STAND"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property TIPO_ADUBACAO() As String
            Get
                Return Me._tIPO_ADUBACAO
            End Get
            Set
                Me._tIPO_ADUBACAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("TIPO_ADUBACAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property TRAT_TOLETES() As String
            Get
                Return Me._tRAT_TOLETES
            End Get
            Set
                Me._tRAT_TOLETES = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("TRAT_TOLETES"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property DT_HERB_CANA_PLANTA() As Date
            Get
                Return Me._dT_HERB_CANA_PLANTA
            End Get
            Set
                Me._dT_HERB_CANA_PLANTA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("DT_HERB_CANA_PLANTA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property SEMANA_ENCERRAMENTO() As String
            Get
                Return Me._sEMANA_ENCERRAMENTO
            End Get
            Set
                Me._sEMANA_ENCERRAMENTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("SEMANA_ENCERRAMENTO"))
            End Set
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Error() As String Implements System.ComponentModel.IDataErrorInfo.[Error]
            Get
                Return Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            End Get
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Item(ByVal columnName As String) As String Implements System.ComponentModel.IDataErrorInfo.Item
            Get
                Return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, Me, columnName, Nothing)
            End Get
        End Property
        
        ReadOnly Property CodeFluent_Runtime_Utilities_IKeyable_System_Int64__Key() As Long Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).Key
            Get
                Return Me.pId
            End Get
        End Property
        
        Public Overridable Property EntityState() As CodeFluent.Runtime.CodeFluentEntityState Implements CodeFluent.Runtime.ICodeFluentEntity.EntityState
            Get
                Return Me._entityState
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of CodeFluent.Runtime.CodeFluentEntityState).Default.Equals(value, Me.EntityState) = true) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                Me._entityState = value
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("EntityState"))
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Public Event EntityAction As CodeFluent.Runtime.CodeFluentEntityActionEventHandler Implements CodeFluent.Runtime.ICodeFluentEntity.EntityAction
        
        Public Event KeyChanged As System.EventHandler(Of CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)) Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).KeyChanged
        
        Protected Overridable Sub OnPropertyChanged(ByVal e As System.ComponentModel.PropertyChangedEventArgs)
            If (Me.RaisePropertyChangedEvents = false) Then
                Return
            End If
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, e)
            End If
        End Sub
        
        Protected Overridable Sub OnEntityAction(ByVal e As CodeFluent.Runtime.CodeFluentEntityActionEventArgs)
            If (Not (Me.EntityActionEvent) Is Nothing) Then
                RaiseEvent EntityAction(Me, e)
            End If
        End Sub
        
        Public Overloads Overridable Function Equals(ByVal aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE) As Boolean Implements System.IEquatable(Of S5TUam.ACOMP_PROD_1CORTE).Equals
            If (aCOMP_PROD_1CORTE Is Nothing) Then
                Return false
            End If
            If (Me.pId = -1) Then
                Return MyBase.Equals(aCOMP_PROD_1CORTE)
            End If
            Return (Me.pId.Equals(aCOMP_PROD_1CORTE.pId) = true)
        End Function
        
        Public Overloads Overrides Function GetHashCode() As Integer
            Return Me.pId.GetHashCode
        End Function
        
        Public Overloads Overrides Function Equals(ByVal obj As Object) As Boolean
            Dim aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE = Nothing
            Try 
                aCOMP_PROD_1CORTE = CType(obj,S5TUam.ACOMP_PROD_1CORTE)
            Catch icex As System.InvalidCastException
                aCOMP_PROD_1CORTE = Nothing
            End Try
            Return Me.Equals(aCOMP_PROD_1CORTE)
        End Function
        
        Overridable Function System_IComparable_CompareTo(ByVal value As Object) As Integer Implements System.IComparable.CompareTo
            Dim aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE = Nothing
            Try 
                aCOMP_PROD_1CORTE = CType(value,S5TUam.ACOMP_PROD_1CORTE)
            Catch icex As System.InvalidCastException
                aCOMP_PROD_1CORTE = Nothing
            End Try
            If (aCOMP_PROD_1CORTE Is Nothing) Then
                Throw New System.ArgumentException("value")
            End If
            Dim localCompareTo As Integer = Me.CompareTo(aCOMP_PROD_1CORTE)
            Return localCompareTo
        End Function
        
        Public Overridable Function CompareTo(ByVal aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE) As Integer Implements System.IComparable(Of S5TUam.ACOMP_PROD_1CORTE).CompareTo
            If (aCOMP_PROD_1CORTE Is Nothing) Then
                Throw New System.ArgumentNullException("aCOMP_PROD_1CORTE")
            End If
            Dim localCompareTo As Integer = Me.pId.CompareTo(aCOMP_PROD_1CORTE.pId)
            Return localCompareTo
        End Function
        
        Public Overloads Overridable Function Validate(ByVal culture As System.Globalization.CultureInfo) As String
            Return CodeFluentPersistence.Validate(culture, Me, Nothing)
        End Function
        
        Public Overloads Overridable Sub Validate(ByVal culture As System.Globalization.CultureInfo, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentSummaryValidator.Validate
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results)
            evt.Culture = culture
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Dim externalValidate As String
                If (Not (evt.Argument) Is Nothing) Then
                    externalValidate = evt.Argument.ToString
                Else
                    externalValidate = S5T.Resources.Manager.GetStringWithDefault(culture, "S5TUam.ACOMP_PROD_1CORTE.ExternalValidate", "Type 'S5TUam.ACOMP_PROD_1CORTE' cannot be validated.", Nothing)
                End If
                CodeFluentPersistence.AddValidationError(results, externalValidate)
            End If
            CodeFluentPersistence.ValidateMember(culture, results, Me, Nothing)
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results))
        End Sub
        
        Public Overloads Sub Validate()
            Dim var As String = Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            If (Not (var) Is Nothing) Then
                Throw New CodeFluent.Runtime.CodeFluentValidationException(var)
            End If
        End Sub
        
        Function CodeFluent_Runtime_ICodeFluentValidator_Validate(ByVal culture As System.Globalization.CultureInfo) As String Implements CodeFluent.Runtime.ICodeFluentValidator.Validate
            Dim localValidate As String = Me.Validate(culture)
            Return localValidate
        End Function
        
        Sub CodeFluent_Runtime_ICodeFluentMemberValidator_Validate(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentMemberValidator.Validate
            Me.ValidateMember(culture, memberName, results)
        End Sub
        
        Public Overloads Overridable Function Delete() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Delete
            Dim ret As Boolean = false
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return ret
            End If
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "ACOMP_PROD_1CORTE", "Delete")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.ExecuteNonQuery
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false))
            ret = true
            Return ret
        End Function
        
        Protected Overridable Sub ReadRecord(ByVal reader As System.Data.IDataReader, ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            If (((options And CodeFluent.Runtime.CodeFluentReloadOptions.Properties)  _
                        = 0)  _
                        = false) Then
                Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
                Me._rOWNUM = CodeFluentPersistence.GetReaderValue(reader, "ROWNUM", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._pROP_CODIGO = CodeFluentPersistence.GetReaderValue(reader, "PROP_CODIGO", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._dS_NOME_PROPRIEDADE = CodeFluentPersistence.GetReaderValue(reader, "DS_NOME_PROPRIEDADE", CType(CType(Nothing, String),String))
                Me._nRO_CORTE = CodeFluentPersistence.GetReaderValue(reader, "NRO_CORTE", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._qT_AREA_COLHIDA = CodeFluentPersistence.GetReaderValue(reader, "QT_AREA_COLHIDA", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._iDADE = CodeFluentPersistence.GetReaderValue(reader, "IDADE", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._tIPO_PROPRIEDADE = CodeFluentPersistence.GetReaderValue(reader, "TIPO_PROPRIEDADE", CType(CType(Nothing, String),String))
                Me._qT_TON_ENTREGUE = CodeFluentPersistence.GetReaderValue(reader, "QT_TON_ENTREGUE", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._rENDIMENTO_PLAN = CodeFluentPersistence.GetReaderValue(reader, "RENDIMENTO_PLAN", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._rENDIMENTO_REAL = CodeFluentPersistence.GetReaderValue(reader, "RENDIMENTO_REAL", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._dESVIO = CodeFluentPersistence.GetReaderValue(reader, "DESVIO", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._pORC_BROCA = CodeFluentPersistence.GetReaderValue(reader, "PORC_BROCA", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pERDAS = CodeFluentPersistence.GetReaderValue(reader, "PERDAS", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._iNCENDIO = CodeFluentPersistence.GetReaderValue(reader, "INCENDIO", CType(CType(Nothing, String),String))
                Me._dATA_INCENDIO = CodeFluentPersistence.GetReaderValue(reader, "DATA_INCENDIO", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._dT_DESSECACAO = CodeFluentPersistence.GetReaderValue(reader, "DT_DESSECACAO", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._dT_CALAGEM = CodeFluentPersistence.GetReaderValue(reader, "DT_CALAGEM", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._dT_PLANTIO = CodeFluentPersistence.GetReaderValue(reader, "DT_PLANTIO", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._tIPO_PLANTIO = CodeFluentPersistence.GetReaderValue(reader, "TIPO_PLANTIO", CType(CType(Nothing, String),String))
                Me._eMPRESA_PLANTIO = CodeFluentPersistence.GetReaderValue(reader, "EMPRESA_PLANTIO", CType(CType(Nothing, String),String))
                Me._sTAND = CodeFluentPersistence.GetReaderValue(reader, "STAND", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._tIPO_ADUBACAO = CodeFluentPersistence.GetReaderValue(reader, "TIPO_ADUBACAO", CType(CType(Nothing, String),String))
                Me._tRAT_TOLETES = CodeFluentPersistence.GetReaderValue(reader, "TRAT_TOLETES", CType(CType(Nothing, String),String))
                Me._dT_HERB_CANA_PLANTA = CodeFluentPersistence.GetReaderValue(reader, "DT_HERB_CANA_PLANTA", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._sEMANA_ENCERRAMENTO = CodeFluentPersistence.GetReaderValue(reader, "SEMANA_ENCERRAMENTO", CType(CType(Nothing, String),String))
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecord(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecord
            Me.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
        End Sub
        
        Protected Overridable Sub ReadRecordOnSave(ByVal reader As System.Data.IDataReader)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecordOnSave(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave
            Me.ReadRecordOnSave(reader)
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function Load(ByVal pId As Long) As S5TUam.ACOMP_PROD_1CORTE
            If (pId = -1) Then
                Return Nothing
            End If
            Dim aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE = New S5TUam.ACOMP_PROD_1CORTE()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "ACOMP_PROD_1CORTE", "Load")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    aCOMP_PROD_1CORTE.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    aCOMP_PROD_1CORTE.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return aCOMP_PROD_1CORTE
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadBypId(ByVal pId As Long) As S5TUam.ACOMP_PROD_1CORTE
            If (pId = -1) Then
                Return Nothing
            End If
            Dim aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE = New S5TUam.ACOMP_PROD_1CORTE()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "ACOMP_PROD_1CORTE", "LoadBypId")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    aCOMP_PROD_1CORTE.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    aCOMP_PROD_1CORTE.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return aCOMP_PROD_1CORTE
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        Public Overridable Function Reload(ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions) As Boolean
            Dim ret As Boolean = false
            If (Me.pId = -1) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "ACOMP_PROD_1CORTE", "Load")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecord(reader, options)
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    ret = true
                Else
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return ret
        End Function
        
        Protected Overridable Function BaseSave(ByVal force As Boolean) As Boolean
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted) Then
                S5TUam.ACOMP_PROD_1CORTE.Delete(Me)
                Return false
            End If
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return false
            End If
            CodeFluentPersistence.ThrowIfDeleted(Me)
            Me.Validate
            If ((force = false)  _
                        AndAlso (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged)) Then
                Return false
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "ACOMP_PROD_1CORTE", "Save")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.AddParameter("@ROWNUM", Me.ROWNUM, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@PROP_CODIGO", Me.PROP_CODIGO, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@DS_NOME_PROPRIEDADE", Me.DS_NOME_PROPRIEDADE, CType(Nothing, String))
            persistence.AddParameter("@NRO_CORTE", Me.NRO_CORTE, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@QT_AREA_COLHIDA", Me.QT_AREA_COLHIDA, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@IDADE", Me.IDADE, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@TIPO_PROPRIEDADE", Me.TIPO_PROPRIEDADE, CType(Nothing, String))
            persistence.AddParameter("@QT_TON_ENTREGUE", Me.QT_TON_ENTREGUE, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@RENDIMENTO_PLAN", Me.RENDIMENTO_PLAN, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@RENDIMENTO_REAL", Me.RENDIMENTO_REAL, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@DESVIO", Me.DESVIO, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@PORC_BROCA", Me.PORC_BROCA, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@PERDAS", Me.PERDAS, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@INCENDIO", Me.INCENDIO, CType(Nothing, String))
            persistence.AddParameter("@DATA_INCENDIO", Me.DATA_INCENDIO, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@DT_DESSECACAO", Me.DT_DESSECACAO, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@DT_CALAGEM", Me.DT_CALAGEM, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@DT_PLANTIO", Me.DT_PLANTIO, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@TIPO_PLANTIO", Me.TIPO_PLANTIO, CType(Nothing, String))
            persistence.AddParameter("@EMPRESA_PLANTIO", Me.EMPRESA_PLANTIO, CType(Nothing, String))
            persistence.AddParameter("@STAND", Me.STAND, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@TIPO_ADUBACAO", Me.TIPO_ADUBACAO, CType(Nothing, String))
            persistence.AddParameter("@TRAT_TOLETES", Me.TRAT_TOLETES, CType(Nothing, String))
            persistence.AddParameter("@DT_HERB_CANA_PLANTA", Me.DT_HERB_CANA_PLANTA, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@SEMANA_ENCERRAMENTO", Me.SEMANA_ENCERRAMENTO, CType(Nothing, String))
            persistence.AddParameter("@_trackLastWriteUser", persistence.Context.User.Name)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecordOnSave(reader)
                End If
                CodeFluentPersistence.NextResults(reader)
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false))
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
            Return true
        End Function
        
        Public Overloads Overridable Function Save() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Save
            Dim localSave As Boolean = Me.BaseSave(false)
            Return localSave
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Shared Function Save(ByVal aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE) As Boolean
            If (aCOMP_PROD_1CORTE Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = aCOMP_PROD_1CORTE.Save
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Shared Function Insert(ByVal aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE) As Boolean
            Dim ret As Boolean = S5TUam.ACOMP_PROD_1CORTE.Save(aCOMP_PROD_1CORTE)
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Shared Function Delete(ByVal aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE) As Boolean
            If (aCOMP_PROD_1CORTE Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = aCOMP_PROD_1CORTE.Delete
            Return ret
        End Function
        
        Public Function Trace() As String
            Dim stringBuilder As System.Text.StringBuilder = New System.Text.StringBuilder()
            Dim stringWriter As System.IO.StringWriter = New System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture)
            Dim writer As System.CodeDom.Compiler.IndentedTextWriter = New System.CodeDom.Compiler.IndentedTextWriter(stringWriter)
            Me.BaseTrace(writer)
            writer.Flush
            CType(writer,System.IDisposable).Dispose
            CType(stringWriter,System.IDisposable).Dispose
            Dim sr As String = stringBuilder.ToString
            Return sr
        End Function
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)>  _
        Sub CodeFluent_Runtime_ICodeFluentObject_Trace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter) Implements CodeFluent.Runtime.ICodeFluentObject.Trace
            Me.BaseTrace(writer)
        End Sub
        
        Protected Overridable Sub BaseTrace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter)
            writer.Write("[")
            writer.Write("pId=")
            writer.Write(Me.pId)
            writer.Write(",")
            writer.Write("ROWNUM=")
            writer.Write(Me.ROWNUM)
            writer.Write(",")
            writer.Write("PROP_CODIGO=")
            writer.Write(Me.PROP_CODIGO)
            writer.Write(",")
            writer.Write("DS_NOME_PROPRIEDADE=")
            writer.Write(Me.DS_NOME_PROPRIEDADE)
            writer.Write(",")
            writer.Write("NRO_CORTE=")
            writer.Write(Me.NRO_CORTE)
            writer.Write(",")
            writer.Write("QT_AREA_COLHIDA=")
            writer.Write(Me.QT_AREA_COLHIDA)
            writer.Write(",")
            writer.Write("IDADE=")
            writer.Write(Me.IDADE)
            writer.Write(",")
            writer.Write("TIPO_PROPRIEDADE=")
            writer.Write(Me.TIPO_PROPRIEDADE)
            writer.Write(",")
            writer.Write("QT_TON_ENTREGUE=")
            writer.Write(Me.QT_TON_ENTREGUE)
            writer.Write(",")
            writer.Write("RENDIMENTO_PLAN=")
            writer.Write(Me.RENDIMENTO_PLAN)
            writer.Write(",")
            writer.Write("RENDIMENTO_REAL=")
            writer.Write(Me.RENDIMENTO_REAL)
            writer.Write(",")
            writer.Write("DESVIO=")
            writer.Write(Me.DESVIO)
            writer.Write(",")
            writer.Write("PORC_BROCA=")
            writer.Write(Me.PORC_BROCA)
            writer.Write(",")
            writer.Write("PERDAS=")
            writer.Write(Me.PERDAS)
            writer.Write(",")
            writer.Write("INCENDIO=")
            writer.Write(Me.INCENDIO)
            writer.Write(",")
            writer.Write("DATA_INCENDIO=")
            writer.Write(Me.DATA_INCENDIO)
            writer.Write(",")
            writer.Write("DT_DESSECACAO=")
            writer.Write(Me.DT_DESSECACAO)
            writer.Write(",")
            writer.Write("DT_CALAGEM=")
            writer.Write(Me.DT_CALAGEM)
            writer.Write(",")
            writer.Write("DT_PLANTIO=")
            writer.Write(Me.DT_PLANTIO)
            writer.Write(",")
            writer.Write("TIPO_PLANTIO=")
            writer.Write(Me.TIPO_PLANTIO)
            writer.Write(",")
            writer.Write("EMPRESA_PLANTIO=")
            writer.Write(Me.EMPRESA_PLANTIO)
            writer.Write(",")
            writer.Write("STAND=")
            writer.Write(Me.STAND)
            writer.Write(",")
            writer.Write("TIPO_ADUBACAO=")
            writer.Write(Me.TIPO_ADUBACAO)
            writer.Write(",")
            writer.Write("TRAT_TOLETES=")
            writer.Write(Me.TRAT_TOLETES)
            writer.Write(",")
            writer.Write("DT_HERB_CANA_PLANTA=")
            writer.Write(Me.DT_HERB_CANA_PLANTA)
            writer.Write(",")
            writer.Write("SEMANA_ENCERRAMENTO=")
            writer.Write(Me.SEMANA_ENCERRAMENTO)
            writer.Write(", EntityState=")
            writer.Write(Me.EntityState)
            writer.Write("]")
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function LoadByEntityKey(ByVal key As String) As S5TUam.ACOMP_PROD_1CORTE
            If (key Is String.Empty) Then
                Return Nothing
            End If
            Dim aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE
            Dim var As Long = CType(ConvertUtilities.ChangeType(key, GetType(Long), -1),Long)
            aCOMP_PROD_1CORTE = S5TUam.ACOMP_PROD_1CORTE.Load(var)
            Return aCOMP_PROD_1CORTE
        End Function
        
        Protected Overridable Sub ValidateMember(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException))
        End Sub
        
        Public Overloads Function Clone(ByVal deep As Boolean) As S5TUam.ACOMP_PROD_1CORTE
            Dim aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE = New S5TUam.ACOMP_PROD_1CORTE()
            Me.CopyTo(aCOMP_PROD_1CORTE, deep)
            Return aCOMP_PROD_1CORTE
        End Function
        
        Public Overloads Function Clone() As S5TUam.ACOMP_PROD_1CORTE
            Dim localClone As S5TUam.ACOMP_PROD_1CORTE = Me.Clone(true)
            Return localClone
        End Function
        
        Function System_ICloneable_Clone() As Object Implements System.ICloneable.Clone
            Dim localClone As Object = Me.Clone
            Return localClone
        End Function
        
        Public Overridable Sub CopyFrom(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            If (dict.Contains("pId") = true) Then
                Me.pId = CType(ConvertUtilities.ChangeType(dict("pId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("DT_CALAGEM") = true) Then
                Me.DT_CALAGEM = CType(ConvertUtilities.ChangeType(dict("DT_CALAGEM"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("DT_PLANTIO") = true) Then
                Me.DT_PLANTIO = CType(ConvertUtilities.ChangeType(dict("DT_PLANTIO"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("TIPO_PLANTIO") = true) Then
                Me.TIPO_PLANTIO = CType(ConvertUtilities.ChangeType(dict("TIPO_PLANTIO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("INCENDIO") = true) Then
                Me.INCENDIO = CType(ConvertUtilities.ChangeType(dict("INCENDIO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("DATA_INCENDIO") = true) Then
                Me.DATA_INCENDIO = CType(ConvertUtilities.ChangeType(dict("DATA_INCENDIO"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("DT_DESSECACAO") = true) Then
                Me.DT_DESSECACAO = CType(ConvertUtilities.ChangeType(dict("DT_DESSECACAO"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("TRAT_TOLETES") = true) Then
                Me.TRAT_TOLETES = CType(ConvertUtilities.ChangeType(dict("TRAT_TOLETES"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("DT_HERB_CANA_PLANTA") = true) Then
                Me.DT_HERB_CANA_PLANTA = CType(ConvertUtilities.ChangeType(dict("DT_HERB_CANA_PLANTA"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("SEMANA_ENCERRAMENTO") = true) Then
                Me.SEMANA_ENCERRAMENTO = CType(ConvertUtilities.ChangeType(dict("SEMANA_ENCERRAMENTO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("EMPRESA_PLANTIO") = true) Then
                Me.EMPRESA_PLANTIO = CType(ConvertUtilities.ChangeType(dict("EMPRESA_PLANTIO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("STAND") = true) Then
                Me.STAND = CType(ConvertUtilities.ChangeType(dict("STAND"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("TIPO_ADUBACAO") = true) Then
                Me.TIPO_ADUBACAO = CType(ConvertUtilities.ChangeType(dict("TIPO_ADUBACAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("PERDAS") = true) Then
                Me.PERDAS = CType(ConvertUtilities.ChangeType(dict("PERDAS"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("NRO_CORTE") = true) Then
                Me.NRO_CORTE = CType(ConvertUtilities.ChangeType(dict("NRO_CORTE"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("QT_AREA_COLHIDA") = true) Then
                Me.QT_AREA_COLHIDA = CType(ConvertUtilities.ChangeType(dict("QT_AREA_COLHIDA"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("IDADE") = true) Then
                Me.IDADE = CType(ConvertUtilities.ChangeType(dict("IDADE"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("ROWNUM") = true) Then
                Me.ROWNUM = CType(ConvertUtilities.ChangeType(dict("ROWNUM"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("PROP_CODIGO") = true) Then
                Me.PROP_CODIGO = CType(ConvertUtilities.ChangeType(dict("PROP_CODIGO"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("DS_NOME_PROPRIEDADE") = true) Then
                Me.DS_NOME_PROPRIEDADE = CType(ConvertUtilities.ChangeType(dict("DS_NOME_PROPRIEDADE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("RENDIMENTO_REAL") = true) Then
                Me.RENDIMENTO_REAL = CType(ConvertUtilities.ChangeType(dict("RENDIMENTO_REAL"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("DESVIO") = true) Then
                Me.DESVIO = CType(ConvertUtilities.ChangeType(dict("DESVIO"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("PORC_BROCA") = true) Then
                Me.PORC_BROCA = CType(ConvertUtilities.ChangeType(dict("PORC_BROCA"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("TIPO_PROPRIEDADE") = true) Then
                Me.TIPO_PROPRIEDADE = CType(ConvertUtilities.ChangeType(dict("TIPO_PROPRIEDADE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("QT_TON_ENTREGUE") = true) Then
                Me.QT_TON_ENTREGUE = CType(ConvertUtilities.ChangeType(dict("QT_TON_ENTREGUE"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("RENDIMENTO_PLAN") = true) Then
                Me.RENDIMENTO_PLAN = CType(ConvertUtilities.ChangeType(dict("RENDIMENTO_PLAN"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal aCOMP_PROD_1CORTE As S5TUam.ACOMP_PROD_1CORTE, ByVal deep As Boolean)
            If (aCOMP_PROD_1CORTE Is Nothing) Then
                Throw New System.ArgumentNullException("aCOMP_PROD_1CORTE")
            End If
            aCOMP_PROD_1CORTE.pId = Me.pId
            aCOMP_PROD_1CORTE.DT_CALAGEM = Me.DT_CALAGEM
            aCOMP_PROD_1CORTE.DT_PLANTIO = Me.DT_PLANTIO
            aCOMP_PROD_1CORTE.TIPO_PLANTIO = Me.TIPO_PLANTIO
            aCOMP_PROD_1CORTE.INCENDIO = Me.INCENDIO
            aCOMP_PROD_1CORTE.DATA_INCENDIO = Me.DATA_INCENDIO
            aCOMP_PROD_1CORTE.DT_DESSECACAO = Me.DT_DESSECACAO
            aCOMP_PROD_1CORTE.TRAT_TOLETES = Me.TRAT_TOLETES
            aCOMP_PROD_1CORTE.DT_HERB_CANA_PLANTA = Me.DT_HERB_CANA_PLANTA
            aCOMP_PROD_1CORTE.SEMANA_ENCERRAMENTO = Me.SEMANA_ENCERRAMENTO
            aCOMP_PROD_1CORTE.EMPRESA_PLANTIO = Me.EMPRESA_PLANTIO
            aCOMP_PROD_1CORTE.STAND = Me.STAND
            aCOMP_PROD_1CORTE.TIPO_ADUBACAO = Me.TIPO_ADUBACAO
            aCOMP_PROD_1CORTE.PERDAS = Me.PERDAS
            aCOMP_PROD_1CORTE.NRO_CORTE = Me.NRO_CORTE
            aCOMP_PROD_1CORTE.QT_AREA_COLHIDA = Me.QT_AREA_COLHIDA
            aCOMP_PROD_1CORTE.IDADE = Me.IDADE
            aCOMP_PROD_1CORTE.ROWNUM = Me.ROWNUM
            aCOMP_PROD_1CORTE.PROP_CODIGO = Me.PROP_CODIGO
            aCOMP_PROD_1CORTE.DS_NOME_PROPRIEDADE = Me.DS_NOME_PROPRIEDADE
            aCOMP_PROD_1CORTE.RENDIMENTO_REAL = Me.RENDIMENTO_REAL
            aCOMP_PROD_1CORTE.DESVIO = Me.DESVIO
            aCOMP_PROD_1CORTE.PORC_BROCA = Me.PORC_BROCA
            aCOMP_PROD_1CORTE.TIPO_PROPRIEDADE = Me.TIPO_PROPRIEDADE
            aCOMP_PROD_1CORTE.QT_TON_ENTREGUE = Me.QT_TON_ENTREGUE
            aCOMP_PROD_1CORTE.RENDIMENTO_PLAN = Me.RENDIMENTO_PLAN
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, aCOMP_PROD_1CORTE))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            dict("pId") = Me.pId
            dict("DT_CALAGEM") = Me.DT_CALAGEM
            dict("DT_PLANTIO") = Me.DT_PLANTIO
            dict("TIPO_PLANTIO") = Me.TIPO_PLANTIO
            dict("INCENDIO") = Me.INCENDIO
            dict("DATA_INCENDIO") = Me.DATA_INCENDIO
            dict("DT_DESSECACAO") = Me.DT_DESSECACAO
            dict("TRAT_TOLETES") = Me.TRAT_TOLETES
            dict("DT_HERB_CANA_PLANTA") = Me.DT_HERB_CANA_PLANTA
            dict("SEMANA_ENCERRAMENTO") = Me.SEMANA_ENCERRAMENTO
            dict("EMPRESA_PLANTIO") = Me.EMPRESA_PLANTIO
            dict("STAND") = Me.STAND
            dict("TIPO_ADUBACAO") = Me.TIPO_ADUBACAO
            dict("PERDAS") = Me.PERDAS
            dict("NRO_CORTE") = Me.NRO_CORTE
            dict("QT_AREA_COLHIDA") = Me.QT_AREA_COLHIDA
            dict("IDADE") = Me.IDADE
            dict("ROWNUM") = Me.ROWNUM
            dict("PROP_CODIGO") = Me.PROP_CODIGO
            dict("DS_NOME_PROPRIEDADE") = Me.DS_NOME_PROPRIEDADE
            dict("RENDIMENTO_REAL") = Me.RENDIMENTO_REAL
            dict("DESVIO") = Me.DESVIO
            dict("PORC_BROCA") = Me.PORC_BROCA
            dict("TIPO_PROPRIEDADE") = Me.TIPO_PROPRIEDADE
            dict("QT_TON_ENTREGUE") = Me.QT_TON_ENTREGUE
            dict("RENDIMENTO_PLAN") = Me.RENDIMENTO_PLAN
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, dict))
        End Sub
        
        Protected Sub OnCollectionKeyChanged(ByVal key As Long)
            If (Not (Me.KeyChangedEvent) Is Nothing) Then
                RaiseEvent KeyChanged(Me, New CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)(key))
            End If
        End Sub
    End Class
End Namespace
