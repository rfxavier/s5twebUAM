'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports CodeFluent.Runtime
Imports CodeFluent.Runtime.Utilities

Namespace S5T
    
    'CodeFluent Entities generated (http://www.softfluent.com). Date: .
    <System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DataObjectAttribute(),  _
     System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey}, pLogin={pLogin}"),  _
     System.ComponentModel.TypeConverterAttribute(GetType(CodeFluent.Runtime.Design.NameTypeConverter))>  _
    Partial Public Class Usuario
        Implements System.ICloneable, System.IComparable, System.IComparable(Of S5T.Usuario), CodeFluent.Runtime.ICodeFluentCollectionEntity(Of String), System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable(Of S5T.Usuario)
        
        Private _raisePropertyChangedEvents As Boolean = true
        
        Private _entityState As CodeFluent.Runtime.CodeFluentEntityState
        
        Private _pId As Long = -1
        
        Private _pCodigo As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _pLogin As String = CType(Nothing, String)
        
        Private _pSenha As String = CType(Nothing, String)
        
        Private _pFlgAdmin As String = CType(Nothing, String)
        
        Private _sStatus As S5T.UsuarioStatus = S5T.UsuarioStatus.Ativo
        
        Private _xDataHoraReg As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _xLoginReg As String = CType(Nothing, String)
        
        <System.NonSerializedAttribute()>  _
        Private _oFiliais As S5T.FilialCollection
        
        Private _oCadastropId As Long = -1
        
        <System.NonSerializedAttribute()>  _
        Private _oCadastro As S5T.Cadastro = Nothing
        
        <System.NonSerializedAttribute()>  _
        Private _oAppRelatorios As S5T.AppRelatorioCollection
        
        <System.NonSerializedAttribute()>  _
        Private _oMenuPermissoes As S5T.MenuPermissaoCollection
        
        Private _oIdUserId As Long = -1
        
        <System.NonSerializedAttribute()>  _
        Private _oIdUser As S5T.IdUser = Nothing
        
        Public Sub New()
            MyBase.New
            Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created
        End Sub
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Overridable Property RaisePropertyChangedEvents() As Boolean
            Get
                Return Me._raisePropertyChangedEvents
            End Get
            Set
                Me._raisePropertyChangedEvents = value
            End Set
        End Property
        
        Public Overridable Property EntityKey() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityKey
            Get
                Return Me.pId.ToString
            End Get
            Set
                Me.pId = CType(ConvertUtilities.ChangeType(value, GetType(Long), -1),Long)
            End Set
        End Property
        
        Public Overridable ReadOnly Property EntityDisplayName() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityDisplayName
            Get
                Return Me.pLogin
            End Get
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(-1,Long)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Long)),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property pId() As Long
            Get
                Return Me._pId
            End Get
            Set
                Me._pId = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property pCodigo() As Integer
            Get
                Return Me._pCodigo
            End Get
            Set
                Me._pCodigo = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCodigo"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pLogin() As String
            Get
                Return Me._pLogin
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of String).Default.Equals(value, Me._pLogin) = true) Then
                    Return
                End If
                Dim oldKey As String = Me._pLogin
                Me._pLogin = value
                Try 
                    Me.OnCollectionKeyChanged(oldKey)
                Catch __exception As System.ArgumentException
                    Me._pLogin = oldKey
                    Return
                End Try
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pLogin"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pSenha() As String
            Get
                Return Me._pSenha
            End Get
            Set
                Me._pSenha = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pSenha"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pFlgAdmin() As String
            Get
                Return Me._pFlgAdmin
            End Get
            Set
                Me._pFlgAdmin = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pFlgAdmin"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(S5T.UsuarioStatus))>  _
        Public Property sStatus() As S5T.UsuarioStatus
            Get
                Return Me._sStatus
            End Get
            Set
                Me._sStatus = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("sStatus"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property xDataHoraReg() As Date
            Get
                Return Me._xDataHoraReg
            End Get
            Set
                Me._xDataHoraReg = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("xDataHoraReg"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property xLoginReg() As String
            Get
                Return Me._xLoginReg
            End Get
            Set
                Me._xLoginReg = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("xLoginReg"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public ReadOnly Property oFiliais() As S5T.FilialCollection
            Get
                If (Me._oFiliais Is Nothing) Then
                    If ((Me.pId = -1)  _
                                OrElse (Me.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) = true)) Then
                        Me._oFiliais = New S5T.FilialCollection(Me, Nothing)
                        Return Me._oFiliais
                    End If
                    Me._oFiliais = S5T.FilialCollection.LoadoFiliaisoUsuariosByUsuario(Me)
                End If
                Return Me._oFiliais
            End Get
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property oCadastropId() As Long
            Get
                If ((Me._oCadastropId = -1)  _
                            AndAlso (Not (Me._oCadastro) Is Nothing)) Then
                    Me._oCadastropId = Me._oCadastro.pId
                End If
                Return Me._oCadastropId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me.oCadastropId) = true) Then
                    Return
                End If
                Me._oCadastro = Nothing
                Me._oCadastropId = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCadastro"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCadastropId"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property oCadastro() As S5T.Cadastro
            Get
                If (Me._oCadastro Is Nothing) Then
                    Me._oCadastro = S5T.Cadastro.Load(Me._oCadastropId)
                End If
                Return Me._oCadastro
            End Get
            Set
                If (Not (value) Is Nothing) Then
                    value.oUsuariopId = Me.pId
                End If
                Me._oCadastropId = -1
                Me._oCadastro = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCadastro"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oCadastropId"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public ReadOnly Property oAppRelatorios() As S5T.AppRelatorioCollection
            Get
                If (Me._oAppRelatorios Is Nothing) Then
                    If ((Me.pId = -1)  _
                                OrElse (Me.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) = true)) Then
                        Me._oAppRelatorios = New S5T.AppRelatorioCollection(Me)
                        Return Me._oAppRelatorios
                    End If
                    Me._oAppRelatorios = S5T.AppRelatorioCollection.LoadoAppRelatoriosoUsuariosByUsuario(Me)
                End If
                Return Me._oAppRelatorios
            End Get
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public ReadOnly Property oMenuPermissoes() As S5T.MenuPermissaoCollection
            Get
                If (Me._oMenuPermissoes Is Nothing) Then
                    If ((Me.pId = -1)  _
                                OrElse (Me.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) = true)) Then
                        Me._oMenuPermissoes = New S5T.MenuPermissaoCollection(Me, Nothing)
                        Return Me._oMenuPermissoes
                    End If
                    Me._oMenuPermissoes = S5T.MenuPermissaoCollection.LoadByoUsuario(Me)
                End If
                Return Me._oMenuPermissoes
            End Get
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property oIdUserId() As Long
            Get
                If ((Me._oIdUserId = -1)  _
                            AndAlso (Not (Me._oIdUser) Is Nothing)) Then
                    Me._oIdUserId = Me._oIdUser.Id
                End If
                Return Me._oIdUserId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me.oIdUserId) = true) Then
                    Return
                End If
                Me._oIdUser = Nothing
                Me._oIdUserId = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oIdUser"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oIdUserId"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property oIdUser() As S5T.IdUser
            Get
                If (Me._oIdUser Is Nothing) Then
                    Me._oIdUser = S5T.IdUser.Load(Me._oIdUserId)
                End If
                Return Me._oIdUser
            End Get
            Set
                If (Not (value) Is Nothing) Then
                    value.oUsuariopId = Me.pId
                End If
                Me._oIdUserId = -1
                Me._oIdUser = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oIdUser"))
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("oIdUserId"))
            End Set
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Error() As String Implements System.ComponentModel.IDataErrorInfo.[Error]
            Get
                Return Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            End Get
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Item(ByVal columnName As String) As String Implements System.ComponentModel.IDataErrorInfo.Item
            Get
                Return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, Me, columnName, Nothing)
            End Get
        End Property
        
        ReadOnly Property CodeFluent_Runtime_Utilities_IKeyable_System_String__Key() As String Implements CodeFluent.Runtime.Utilities.IKeyable(Of String).Key
            Get
                Return Me.pLogin
            End Get
        End Property
        
        Public Overridable Property EntityState() As CodeFluent.Runtime.CodeFluentEntityState Implements CodeFluent.Runtime.ICodeFluentEntity.EntityState
            Get
                Return Me._entityState
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of CodeFluent.Runtime.CodeFluentEntityState).Default.Equals(value, Me.EntityState) = true) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                Me._entityState = value
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("EntityState"))
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Public Event EntityAction As CodeFluent.Runtime.CodeFluentEntityActionEventHandler Implements CodeFluent.Runtime.ICodeFluentEntity.EntityAction
        
        Public Event KeyChanged As System.EventHandler(Of CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of String)) Implements CodeFluent.Runtime.Utilities.IKeyable(Of String).KeyChanged
        
        Protected Overridable Sub OnPropertyChanged(ByVal e As System.ComponentModel.PropertyChangedEventArgs)
            If (Me.RaisePropertyChangedEvents = false) Then
                Return
            End If
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, e)
            End If
        End Sub
        
        Protected Overridable Sub OnEntityAction(ByVal e As CodeFluent.Runtime.CodeFluentEntityActionEventArgs)
            If (Not (Me.EntityActionEvent) Is Nothing) Then
                RaiseEvent EntityAction(Me, e)
            End If
        End Sub
        
        Public Overloads Overridable Function Equals(ByVal usuario As S5T.Usuario) As Boolean Implements System.IEquatable(Of S5T.Usuario).Equals
            If (usuario Is Nothing) Then
                Return false
            End If
            If (Me.pId = -1) Then
                Return MyBase.Equals(usuario)
            End If
            Return (Me.pId.Equals(usuario.pId) = true)
        End Function
        
        Public Overloads Overrides Function GetHashCode() As Integer
            Return Me.pId.GetHashCode
        End Function
        
        Public Overloads Overrides Function Equals(ByVal obj As Object) As Boolean
            Dim usuario As S5T.Usuario = Nothing
            Try 
                usuario = CType(obj,S5T.Usuario)
            Catch icex As System.InvalidCastException
                usuario = Nothing
            End Try
            Return Me.Equals(usuario)
        End Function
        
        Friend Sub SaveoFiliaisRelations()
            If (Me._oFiliais Is Nothing) Then
                Return
            End If
            Dim enumerator As System.Collections.IEnumerator = CType(Me._oFiliais,CodeFluent.Runtime.ICodeFluentSet).Relations.GetEnumerator
            Dim b As Boolean
            b = enumerator.MoveNext
            Do While b
                Dim entry As System.Collections.DictionaryEntry = CType(enumerator.Current,System.Collections.DictionaryEntry)
                Dim filial As S5T.Filial = CType(entry.Key,S5T.Filial)
                Dim relationType As CodeFluent.Runtime.CodeFluentRelationType = CType(entry.Value,CodeFluent.Runtime.CodeFluentRelationType)
                If ((relationType = CodeFluent.Runtime.CodeFluentRelationType.Added)  _
                            AndAlso ((filial.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeUnlinked)  _
                            = false)) Then
                    Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
                    persistence.CreateStoredProcedureCommand(Nothing, "usuario", "Savefilialousuarios")
                    persistence.AddParameter("@pId", filial.pId, CType(-1,Long))
                    persistence.AddParameter("@pId2", Me.pId, CType(-1,Long))
                    persistence.ExecuteNonQuery
                Else
                    Dim persistence1 As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
                    persistence1.CreateStoredProcedureCommand(Nothing, "usuario", "Deletefilialousuarios")
                    persistence1.AddParameter("@pId", filial.pId, CType(-1,Long))
                    persistence1.AddParameter("@pId2", Me.pId, CType(-1,Long))
                    persistence1.ExecuteNonQuery
                End If
                If (filial.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeUnlinked) Then
                    filial.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                End If
                b = enumerator.MoveNext
            Loop
            CType(Me._oFiliais,CodeFluent.Runtime.ICodeFluentSet).Relations.Clear
        End Sub
        
        Friend Sub SaveoAppRelatoriosRelations()
            If (Me._oAppRelatorios Is Nothing) Then
                Return
            End If
            Dim enumerator As System.Collections.IEnumerator = CType(Me._oAppRelatorios,CodeFluent.Runtime.ICodeFluentSet).Relations.GetEnumerator
            Dim b As Boolean
            b = enumerator.MoveNext
            Do While b
                Dim entry As System.Collections.DictionaryEntry = CType(enumerator.Current,System.Collections.DictionaryEntry)
                Dim appRelatorio As S5T.AppRelatorio = CType(entry.Key,S5T.AppRelatorio)
                Dim relationType As CodeFluent.Runtime.CodeFluentRelationType = CType(entry.Value,CodeFluent.Runtime.CodeFluentRelationType)
                If ((relationType = CodeFluent.Runtime.CodeFluentRelationType.Added)  _
                            AndAlso ((appRelatorio.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeUnlinked)  _
                            = false)) Then
                    Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
                    persistence.CreateStoredProcedureCommand(Nothing, "usuario", "SaveapprelatoriooUsuarios")
                    persistence.AddParameter("@pId", appRelatorio.pId, CType(-1,Long))
                    persistence.AddParameter("@pId2", Me.pId, CType(-1,Long))
                    persistence.ExecuteNonQuery
                Else
                    Dim persistence1 As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
                    persistence1.CreateStoredProcedureCommand(Nothing, "usuario", "DeleteapprelatoriooUsuarios")
                    persistence1.AddParameter("@pId", appRelatorio.pId, CType(-1,Long))
                    persistence1.AddParameter("@pId2", Me.pId, CType(-1,Long))
                    persistence1.ExecuteNonQuery
                End If
                If (appRelatorio.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeUnlinked) Then
                    appRelatorio.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                End If
                b = enumerator.MoveNext
            Loop
            CType(Me._oAppRelatorios,CodeFluent.Runtime.ICodeFluentSet).Relations.Clear
        End Sub
        
        Overridable Function System_IComparable_CompareTo(ByVal value As Object) As Integer Implements System.IComparable.CompareTo
            Dim usuario As S5T.Usuario = Nothing
            Try 
                usuario = CType(value,S5T.Usuario)
            Catch icex As System.InvalidCastException
                usuario = Nothing
            End Try
            If (usuario Is Nothing) Then
                Throw New System.ArgumentException("value")
            End If
            Dim localCompareTo As Integer = Me.CompareTo(usuario)
            Return localCompareTo
        End Function
        
        Public Overridable Function CompareTo(ByVal usuario As S5T.Usuario) As Integer Implements System.IComparable(Of S5T.Usuario).CompareTo
            If (usuario Is Nothing) Then
                Throw New System.ArgumentNullException("usuario")
            End If
            Dim localCompareTo As Integer = Me.pLogin.CompareTo(usuario.pLogin)
            Return localCompareTo
        End Function
        
        Public Overloads Overridable Function Validate(ByVal culture As System.Globalization.CultureInfo) As String
            Return CodeFluentPersistence.Validate(culture, Me, Nothing)
        End Function
        
        Public Overloads Overridable Sub Validate(ByVal culture As System.Globalization.CultureInfo, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentSummaryValidator.Validate
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results)
            evt.Culture = culture
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Dim externalValidate As String
                If (Not (evt.Argument) Is Nothing) Then
                    externalValidate = evt.Argument.ToString
                Else
                    externalValidate = S5T.Resources.Manager.GetStringWithDefault(culture, "S5T.Usuario.ExternalValidate", "Type 'S5T.Usuario' cannot be validated.", Nothing)
                End If
                CodeFluentPersistence.AddValidationError(results, externalValidate)
            End If
            CodeFluentPersistence.ValidateMember(culture, results, Me, Nothing)
            If (Me.pCodigo = CodeFluentPersistence.DefaultInt32Value) Then
                Dim localValidate As String = S5T.Resources.Manager.GetStringWithDefault(culture, "S5T.Usuario.pCodigo.NullException", "'pCodigo' property cannot be set to '0' for type 'S5T.Usuario'", Nothing)
                CodeFluentPersistence.AddValidationError(results, localValidate)
            End If
            If (Me.pLogin Is CType(Nothing, String)) Then
                Dim localValidate1 As String = S5T.Resources.Manager.GetStringWithDefault(culture, "S5T.Usuario.pLogin.NullException", "'pLogin' property cannot be set to '' for type 'S5T.Usuario'", Nothing)
                CodeFluentPersistence.AddValidationError(results, localValidate1)
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results))
        End Sub
        
        Public Overloads Sub Validate()
            Dim var As String = Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            If (Not (var) Is Nothing) Then
                Throw New CodeFluent.Runtime.CodeFluentValidationException(var)
            End If
        End Sub
        
        Function CodeFluent_Runtime_ICodeFluentValidator_Validate(ByVal culture As System.Globalization.CultureInfo) As String Implements CodeFluent.Runtime.ICodeFluentValidator.Validate
            Dim localValidate As String = Me.Validate(culture)
            Return localValidate
        End Function
        
        Sub CodeFluent_Runtime_ICodeFluentMemberValidator_Validate(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentMemberValidator.Validate
            Me.ValidateMember(culture, memberName, results)
        End Sub
        
        Public Overloads Overridable Function Delete() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Delete
            Dim ret As Boolean = false
            Me.OnBeforeDelete
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return ret
            End If
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "usuario", "Delete")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.ExecuteNonQuery
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false))
            ret = true
            Return ret
        End Function
        
        Protected Overridable Sub ReadRecord(ByVal reader As System.Data.IDataReader, ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            If (((options And CodeFluent.Runtime.CodeFluentReloadOptions.Properties)  _
                        = 0)  _
                        = false) Then
                Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
                Me._pCodigo = CodeFluentPersistence.GetReaderValue(reader, "pCodigo", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._pLogin = CodeFluentPersistence.GetReaderValue(reader, "pLogin", CType(CType(Nothing, String),String))
                Me._pSenha = CodeFluentPersistence.GetReaderValue(reader, "pSenha", CType(CType(Nothing, String),String))
                Me._pFlgAdmin = CodeFluentPersistence.GetReaderValue(reader, "pFlgAdmin", CType(CType(Nothing, String),String))
                Me._sStatus = CType(CodeFluentPersistence.GetReaderValueEnum(reader, "sStatus", CType(S5T.UsuarioStatus.Ativo,S5T.UsuarioStatus)),S5T.UsuarioStatus)
                Me._xDataHoraReg = CodeFluentPersistence.GetReaderValue(reader, "xDataHoraReg", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._xLoginReg = CodeFluentPersistence.GetReaderValue(reader, "xLoginReg", CType(CType(Nothing, String),String))
                Me.oCadastropId = CodeFluentPersistence.GetReaderValue(reader, "oCadastro_pId", CType(-1,Long))
                Me.oIdUserId = CodeFluentPersistence.GetReaderValue(reader, "oIdUser_Id", CType(-1,Long))
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecord(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecord
            Me.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
        End Sub
        
        Protected Overridable Sub ReadRecordOnSave(ByVal reader As System.Data.IDataReader)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecordOnSave(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave
            Me.ReadRecordOnSave(reader)
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function Load(ByVal pId As Long) As S5T.Usuario
            If (pId = -1) Then
                Return Nothing
            End If
            Dim usuario As S5T.Usuario = New S5T.Usuario()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "usuario", "Load")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    usuario.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    usuario.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return usuario
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadBypLogin(ByVal pLogin As String) As S5T.Usuario
            If (pLogin Is CType(Nothing, String)) Then
                Return Nothing
            End If
            Dim usuario As S5T.Usuario = New S5T.Usuario()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "usuario", "LoadBypLogin")
            persistence.AddParameter("@pLogin", pLogin, CType(Nothing, String))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    usuario.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    usuario.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return usuario
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadByoCadastro(ByVal oCadastropId As Long) As S5T.Usuario
            If (oCadastropId = -1) Then
                Return Nothing
            End If
            Dim usuario As S5T.Usuario = New S5T.Usuario()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "usuario", "LoadByoCadastro")
            persistence.AddParameter("@oCadastropId", oCadastropId)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    usuario.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    usuario.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return usuario
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadByoIdUser(ByVal oIdUserId As Long) As S5T.Usuario
            If (oIdUserId = -1) Then
                Return Nothing
            End If
            Dim usuario As S5T.Usuario = New S5T.Usuario()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "usuario", "LoadByoIdUser")
            persistence.AddParameter("@oIdUserId", oIdUserId)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    usuario.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    usuario.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return usuario
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadByCodigo(ByVal parCodigo As Integer) As S5T.Usuario
            If (parCodigo = CodeFluentPersistence.DefaultInt32Value) Then
                Return Nothing
            End If
            Dim usuario As S5T.Usuario = New S5T.Usuario()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "usuario", "LoadByCodigo")
            persistence.AddParameter("@parCodigo", parCodigo)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    usuario.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    usuario.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return usuario
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadMaxCodigo() As S5T.Usuario
            Dim usuario As S5T.Usuario = New S5T.Usuario()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "usuario", "LoadMaxCodigo")
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    usuario.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    usuario.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return usuario
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        Public Shared Sub DeleteLinkCadastro(ByVal parUsuario As S5T.Usuario)
            Dim scope As System.Transactions.TransactionScope = Nothing
            Try 
                Dim options As System.Transactions.TransactionOptions = New System.Transactions.TransactionOptions()
                scope = New System.Transactions.TransactionScope(System.Transactions.TransactionScopeOption.Required, options)
DeleteLinkCadastroPartial(parUsuario)
                scope.Complete
            Finally
                If (Not (scope) Is Nothing) Then
                    scope.Dispose
                End If
            End Try
        End Sub
        
        Public Overridable Function Reload(ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions) As Boolean
            Dim ret As Boolean = false
            If (Me.pId = -1) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "usuario", "Load")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecord(reader, options)
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    ret = true
                Else
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return ret
        End Function
        
        Protected Overridable Function BaseSave(ByVal force As Boolean) As Boolean
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted) Then
                S5T.Usuario.Delete(Me)
                Return false
            End If
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return false
            End If
            CodeFluentPersistence.ThrowIfDeleted(Me)
            Me.Validate
            If ((force = false)  _
                        AndAlso (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged)) Then
                Return false
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "usuario", "Save")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.AddParameter("@pCodigo", Me.pCodigo, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@pLogin", Me.pLogin, CType(Nothing, String))
            persistence.AddParameter("@pSenha", Me.pSenha, CType(Nothing, String))
            persistence.AddParameter("@pFlgAdmin", Me.pFlgAdmin, CType(Nothing, String))
            persistence.AddParameterEnumInt32("@sStatus", Me.sStatus, S5T.UsuarioStatus.Ativo)
            persistence.AddParameter("@xDataHoraReg", Me.xDataHoraReg, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@xLoginReg", Me.xLoginReg, CType(Nothing, String))
            persistence.AddParameter("@oCadastro_pId", Me.oCadastropId, CType(-1,Long))
            persistence.AddParameter("@oIdUser_Id", Me.oIdUserId, CType(-1,Long))
            persistence.AddParameter("@_trackLastWriteUser", persistence.Context.User.Name)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecordOnSave(reader)
                End If
                CodeFluentPersistence.NextResults(reader)
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Me.SaveoFiliaisRelations
            Me.SaveoAppRelatoriosRelations
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false))
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
            Return true
        End Function
        
        Public Overloads Overridable Function Save() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Save
            Me.OnBeforeSave
            Dim localSave As Boolean = Me.BaseSave(false)
            Return localSave
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Shared Function Save(ByVal usuario As S5T.Usuario) As Boolean
            If (usuario Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = usuario.Save
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Shared Function Insert(ByVal usuario As S5T.Usuario) As Boolean
            Dim ret As Boolean = S5T.Usuario.Save(usuario)
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Shared Function Delete(ByVal usuario As S5T.Usuario) As Boolean
            If (usuario Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = usuario.Delete
            Return ret
        End Function
        
        Public Function Trace() As String
            Dim stringBuilder As System.Text.StringBuilder = New System.Text.StringBuilder()
            Dim stringWriter As System.IO.StringWriter = New System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture)
            Dim writer As System.CodeDom.Compiler.IndentedTextWriter = New System.CodeDom.Compiler.IndentedTextWriter(stringWriter)
            Me.BaseTrace(writer)
            writer.Flush
            CType(writer,System.IDisposable).Dispose
            CType(stringWriter,System.IDisposable).Dispose
            Dim sr As String = stringBuilder.ToString
            Return sr
        End Function
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)>  _
        Sub CodeFluent_Runtime_ICodeFluentObject_Trace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter) Implements CodeFluent.Runtime.ICodeFluentObject.Trace
            Me.BaseTrace(writer)
        End Sub
        
        Protected Overridable Sub BaseTrace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter)
            writer.Write("[")
            writer.Write("pId=")
            writer.Write(Me.pId)
            writer.Write(",")
            writer.Write("pCodigo=")
            writer.Write(Me.pCodigo)
            writer.Write(",")
            writer.Write("pLogin=")
            writer.Write(Me.pLogin)
            writer.Write(",")
            writer.Write("pSenha=")
            writer.Write(Me.pSenha)
            writer.Write(",")
            writer.Write("pFlgAdmin=")
            writer.Write(Me.pFlgAdmin)
            writer.Write(",")
            writer.Write("sStatus=")
            writer.Write(Me.sStatus)
            writer.Write(",")
            writer.Write("xDataHoraReg=")
            writer.Write(Me.xDataHoraReg)
            writer.Write(",")
            writer.Write("xLoginReg=")
            writer.Write(Me.xLoginReg)
            writer.Write(",")
            writer.Write("oFiliais=")
            If (Not (Me._oFiliais) Is Nothing) Then
                CType(Me._oFiliais,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("oCadastro=")
            If (Not (Me._oCadastro) Is Nothing) Then
                CType(Me._oCadastro,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("_oCadastropId=")
            writer.Write(Me._oCadastropId)
            writer.Write(",")
            writer.Write("oAppRelatorios=")
            If (Not (Me._oAppRelatorios) Is Nothing) Then
                CType(Me._oAppRelatorios,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("oMenuPermissoes=")
            If (Not (Me._oMenuPermissoes) Is Nothing) Then
                CType(Me._oMenuPermissoes,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("oIdUser=")
            If (Not (Me._oIdUser) Is Nothing) Then
                CType(Me._oIdUser,CodeFluent.Runtime.ICodeFluentObject).Trace(writer)
            Else
                writer.Write("<null>")
            End If
            writer.Write(",")
            writer.Write("_oIdUserId=")
            writer.Write(Me._oIdUserId)
            writer.Write(", EntityState=")
            writer.Write(Me.EntityState)
            writer.Write("]")
        End Sub
        
        Public Overloads Overridable Sub SetoFiliais(ByVal values As System.Collections.IDictionary)
            If (values Is Nothing) Then
                Throw New System.ArgumentNullException("values")
            End If
            Me.oFiliais.Clear
            Dim enumerator As System.Collections.IEnumerator = values.GetEnumerator
            Dim b As Boolean
            b = enumerator.MoveNext
            Do While b
                Dim entry As System.Collections.DictionaryEntry = CType(enumerator.Current,System.Collections.DictionaryEntry)
                If (Not (entry.Key) Is Nothing) Then
                    Me.oFiliais.AddByEntityKey(entry.Key.ToString)
                End If
                b = enumerator.MoveNext
            Loop
        End Sub
        
        Public Overloads Overridable Sub SetoFiliais(ByVal values As Object)
            If (values Is Nothing) Then
                Return
            End If
            Dim dictionary As System.Collections.IDictionary = Nothing
            Try 
                dictionary = CType(values,System.Collections.IDictionary)
            Catch icex As System.InvalidCastException
                dictionary = Nothing
            End Try
            If (Not (dictionary) Is Nothing) Then
                Me.SetoFiliais(dictionary)
                Return
            End If
            Dim oFiliais As S5T.FilialCollection = Nothing
            Try 
                oFiliais = CType(values,S5T.FilialCollection)
            Catch icex1 As System.InvalidCastException
                oFiliais = Nothing
            End Try
            If (Not (oFiliais) Is Nothing) Then
                Me._oFiliais = oFiliais
                Return
            End If
        End Sub
        
        Public Overloads Overridable Sub SetoAppRelatorios(ByVal values As System.Collections.IDictionary)
            If (values Is Nothing) Then
                Throw New System.ArgumentNullException("values")
            End If
            Me.oAppRelatorios.Clear
            Dim enumerator As System.Collections.IEnumerator = values.GetEnumerator
            Dim b As Boolean
            b = enumerator.MoveNext
            Do While b
                Dim entry As System.Collections.DictionaryEntry = CType(enumerator.Current,System.Collections.DictionaryEntry)
                If (Not (entry.Key) Is Nothing) Then
                    Me.oAppRelatorios.AddByEntityKey(entry.Key.ToString)
                End If
                b = enumerator.MoveNext
            Loop
        End Sub
        
        Public Overloads Overridable Sub SetoAppRelatorios(ByVal values As Object)
            If (values Is Nothing) Then
                Return
            End If
            Dim dictionary As System.Collections.IDictionary = Nothing
            Try 
                dictionary = CType(values,System.Collections.IDictionary)
            Catch icex As System.InvalidCastException
                dictionary = Nothing
            End Try
            If (Not (dictionary) Is Nothing) Then
                Me.SetoAppRelatorios(dictionary)
                Return
            End If
            Dim oAppRelatorios As S5T.AppRelatorioCollection = Nothing
            Try 
                oAppRelatorios = CType(values,S5T.AppRelatorioCollection)
            Catch icex1 As System.InvalidCastException
                oAppRelatorios = Nothing
            End Try
            If (Not (oAppRelatorios) Is Nothing) Then
                Me._oAppRelatorios = oAppRelatorios
                Return
            End If
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function LoadByEntityKey(ByVal key As String) As S5T.Usuario
            If (key Is String.Empty) Then
                Return Nothing
            End If
            Dim usuario As S5T.Usuario
            Dim var As Long = CType(ConvertUtilities.ChangeType(key, GetType(Long), -1),Long)
            usuario = S5T.Usuario.Load(var)
            Return usuario
        End Function
        
        Protected Overridable Sub ValidateMember(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException))
        End Sub
        
        Public Overloads Function Clone(ByVal deep As Boolean) As S5T.Usuario
            Dim usuario As S5T.Usuario = New S5T.Usuario()
            Me.CopyTo(usuario, deep)
            Return usuario
        End Function
        
        Public Overloads Function Clone() As S5T.Usuario
            Dim localClone As S5T.Usuario = Me.Clone(true)
            Return localClone
        End Function
        
        Function System_ICloneable_Clone() As Object Implements System.ICloneable.Clone
            Dim localClone As Object = Me.Clone
            Return localClone
        End Function
        
        Public Overridable Sub CopyFrom(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            If (dict.Contains("pId") = true) Then
                Me.pId = CType(ConvertUtilities.ChangeType(dict("pId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("pLogin") = true) Then
                Me.pLogin = CType(ConvertUtilities.ChangeType(dict("pLogin"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("sStatus") = true) Then
                Me.sStatus = CType(ConvertUtilities.ChangeType(dict("sStatus"), GetType(S5T.UsuarioStatus), S5T.UsuarioStatus.Ativo),S5T.UsuarioStatus)
            End If
            If (dict.Contains("xDataHoraReg") = true) Then
                Me.xDataHoraReg = CType(ConvertUtilities.ChangeType(dict("xDataHoraReg"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("xLoginReg") = true) Then
                Me.xLoginReg = CType(ConvertUtilities.ChangeType(dict("xLoginReg"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCodigo") = true) Then
                Me.pCodigo = CType(ConvertUtilities.ChangeType(dict("pCodigo"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("pSenha") = true) Then
                Me.pSenha = CType(ConvertUtilities.ChangeType(dict("pSenha"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pFlgAdmin") = true) Then
                Me.pFlgAdmin = CType(ConvertUtilities.ChangeType(dict("pFlgAdmin"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("oCadastropId") = true) Then
                Me.oCadastropId = CType(ConvertUtilities.ChangeType(dict("oCadastropId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("oIdUserId") = true) Then
                Me.oIdUserId = CType(ConvertUtilities.ChangeType(dict("oIdUserId"), GetType(Long), -1),Long)
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal usuario As S5T.Usuario, ByVal deep As Boolean)
            If (usuario Is Nothing) Then
                Throw New System.ArgumentNullException("usuario")
            End If
            usuario.pId = Me.pId
            usuario.pLogin = Me.pLogin
            usuario.sStatus = Me.sStatus
            usuario.xDataHoraReg = Me.xDataHoraReg
            usuario.xLoginReg = Me.xLoginReg
            usuario.pCodigo = Me.pCodigo
            usuario.pSenha = Me.pSenha
            usuario.pFlgAdmin = Me.pFlgAdmin
            usuario.oCadastropId = Me.oCadastropId
            usuario.oIdUserId = Me.oIdUserId
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, usuario))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            dict("pId") = Me.pId
            dict("pLogin") = Me.pLogin
            dict("sStatus") = Me.sStatus
            dict("xDataHoraReg") = Me.xDataHoraReg
            dict("xLoginReg") = Me.xLoginReg
            dict("pCodigo") = Me.pCodigo
            dict("pSenha") = Me.pSenha
            dict("pFlgAdmin") = Me.pFlgAdmin
            dict("oCadastropId") = Me.oCadastropId
            dict("oIdUserId") = Me.oIdUserId
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, dict))
        End Sub
        
        Protected Sub OnCollectionKeyChanged(ByVal key As String)
            If (Not (Me.KeyChangedEvent) Is Nothing) Then
                RaiseEvent KeyChanged(Me, New CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of String)(key))
            End If
        End Sub
    End Class
End Namespace
