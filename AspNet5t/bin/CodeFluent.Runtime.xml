<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeFluent.Runtime</name>
    </assembly>
    <members>
        <member name="T:CodeFluent.Runtime.BasePersistenceHook">
            <summary>
            Defines a base class for CodeFluent persistence hooks.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentPersistenceHook">
            <summary>
            Provides required functions and properties for a CodeFluent persistence hook class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.Invoke(System.Object[])">
            <summary>
            This is a generic method provided for future extensions.
            </summary>
            <param name="arguments">The arguments. May be null.</param>
            <returns>An object representing the return value of the invocation.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.HandleExecuteReaderException(System.Exception)">
            <summary>
            Handles an ExecuteReader exception.
            </summary>
            <param name="exception">The exception. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeOpenConnection(System.Data.IDbConnection)">
            <summary>
            Called before the connection is opened.
            </summary>
            <param name="connection">The connection instance. May be null.</param>
            true if the OpenConnection method must immediatly return, false otherwise.
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterOpenConnection(System.Data.IDbConnection)">
            <summary>
            Called after the connection is opened.
            </summary>
            <param name="connection">The connection instance. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeSetConnection(System.String,System.Data.IDbConnection)">
            <summary>
            Called befores the ADO.NET connection object is set.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="currentConnection">The current connection. May be null.</param>
            true if the calling method must immediatly return, false otherwise.
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterSetConnection(System.Data.IDbConnection)">
            <summary>
            Called after the ADO.NET connection object is set.
            </summary>
            <param name="connection">The connection instance. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeDispose(System.Boolean,System.Boolean)">
            <summary>
            Called at the beginning of the Dispose method execution.
            </summary>
            <param name="threadOwned">if set to <c>true</c> the thread is owned by the persistence instance.</param>
            <param name="throwOnError">if set to <c>true</c> errors can be thrown.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterDispose(System.Boolean,System.Boolean)">
            <summary>
            Called at the end of the Dispose method execution.
            </summary>
            <param name="threadOwned">if set to <c>true</c> the thread is owned by the persistence instance.</param>
            <param name="throwOnError">if set to <c>true</c> errors can be thrown.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeClone(CodeFluent.Runtime.CodeFluentPersistence)">
            <summary>
            Called at the beginning of the Clone method execution.
            </summary>
            <param name="persistence">The cloned persistence instance. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterClone(CodeFluent.Runtime.CodeFluentPersistence)">
            <summary>
            Called at the end of the Clone method execution.
            </summary>
            <param name="persistence">The cloned persistence instance. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeCloseReader(System.Data.IDataReader)">
            <summary>
            Called at the beginning of the CloseReader method execution.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterCloseReader">
            <summary>
            Called afters at the end of the CloseReader method execution. Current reader is closed at this time.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeClearPools(System.Data.IDbConnection)">
            <summary>
            Called at the beginning of the ClearPools method execution.
            </summary>
            <param name="connection">The connection. May be null.</param>
            <returns>
            true if the ClearPools method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterClearPools(System.Data.IDbConnection)">
            <summary>
            Called at the end of the ClearPools method execution.
            <param name="connection">The connection. May be null.</param>
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeBeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Called at the beginning of the BeginTransaction method execution.
            </summary>
            <param name="isolationLevel">The isolation level.</param>
            <returns>An instance of a transaction or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterBeginTransaction(System.Data.IDbTransaction)">
            <summary>
            Called at the end of the BeginTransaction method execution.
            </summary>
            <param name="transaction">The transaction. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeCommitTransaction(System.Data.IDbTransaction)">
            <summary>
            Called at the beginning of the CommitTransaction method execution.
            </summary>
            <param name="transaction">The transaction. May be null.</param>
            <returns>
            true if the CommitTransaction method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterCommitTransaction">
            <summary>
            Called at the end of the CommitTransaction method execution.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeRollbackTransaction(System.Data.IDbTransaction)">
            <summary>
            Called at the beginning of the RollbackTransaction method execution.
            </summary>
            <param name="transaction">The transaction. May be null.</param>
            <returns>
            true if the RollbackTransaction method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterRollbackTransaction">
            <summary>
            Called at the end of the RollbackTransaction method execution.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeExecuteNonQuery(System.Boolean)">
            <summary>
            Called at the beginning of the ExecuteNonQuery method execution.
            </summary>
            <param name="firstTry">if set to <c>true</c> this was the first execution.</param>
            <returns>The number of rows affected or -1.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterExecuteNonQuery(System.Int32,System.Boolean)">
            <summary>
            Called at the end of the ExecuteNonQuery method execution.
            </summary>
            <param name="rows">The number of rows affected.</param>
            <param name="firstTry">if set to <c>true</c> this was the first execution.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeExecuteReader(System.Data.CommandBehavior,System.Boolean)">
            <summary>
            Called at the beginning of the ExecuteReader method execution.
            </summary>
            <param name="behavior">The behavior.</param>
            <param name="firstTry">if set to <c>true</c> this was the first execution.</param>
            <returns>An instance of a data reader or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterExecuteReader(System.Data.CommandBehavior,System.Boolean,System.Data.IDataReader)">
            <summary>
            Called at the end of the ExecuteReader method execution.
            </summary>
            <param name="behavior">The behavior.</param>
            <param name="firstTry">if set to <c>true</c> this was the first execution.</param>
            <param name="reader">The reader. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeAddParameter(System.String,System.Object)">
            <summary>
            Called at the beginning of one of the AddParameter methods execution.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The value. May be null.</param>
            <returns>A parameter instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterAddParameter(System.String,System.Object,System.Data.IDbDataParameter)">
            <summary>
            Called at the end of one of the AddParameter methods execution.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeGetReaderValue(System.Data.IDataReader,System.String,System.Object,System.Object@)">
            <summary>
            Called at the beginning of one of the GetReaderValue methods execution.
            </summary>
            <param name="reader">The reader.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value. May be null.</param>
            <param name="value">The read value. May be null.</param>
            <returns>true if the calling GetReaderValue method must return immediatly; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterGetReaderValue(System.Data.IDataReader,System.String,System.Object,System.Object)">
            <summary>
            Called at the end of one of the GetReaderValue methods execution.
            </summary>
            <param name="reader">The reader.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value. May be null.</param>
            <param name="value">The read value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeGetReaderValueObject(System.Data.IDataReader,System.String,System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode,System.Object@)">
            <summary>
            Called at the beginning of the GetReaderValueObject method execution.
            </summary>
            <param name="reader">The reader.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value. May be null.</param>
            <param name="type">The type of the serialized object. May not be null.</param>
            <param name="serializationMode">The serialization mode.</param>
            <param name="value">The read value. May be null.</param>
            <returns>
            true if the calling GetReaderValue method must return immediatly; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterGetReaderValueObject(System.Data.IDataReader,System.String,System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode,System.Object)">
            <summary>
            Called at the end of the GetReaderValueObject method execution.
            </summary>
            <param name="reader">The reader.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value. May be null.</param>
            <param name="type">The type of the serialized object. May not be null.</param>
            <param name="serializationMode">The serialization mode.</param>
            <param name="value">The read value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeCreateTextCommand(System.String)">
            <summary>
            Called at the beginning of the CreateTextCommand method execution.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>
            true if the CreateTextCommand method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterCreateTextCommand(System.String)">
            <summary>
            Called at the end of the CreateTextCommand method execution.
            </summary>
            <param name="name">The name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeCreateStoredProcedureCommand(System.String,System.String,System.String,System.String)">
            <summary>
            Called at the beginning of the CreateStoredProcedureCommand method execution.
            </summary>
            <param name="schema">The schema name. May be null.</param>
            <param name="package">The package name. May be null.</param>
            <param name="intraPackageName">The intra package procedure name. May not be null.</param>
            <param name="name">The full name. May be null.</param>
            <returns>
            true if the CreateStoredProcedureCommand method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterCreateStoredProcedureCommand(System.String,System.String,System.String,System.String)">
            <summary>
            Called at the end of the CreateStoredProcedureCommand method execution.
            </summary>
            <param name="schema">The schema name. May be null.</param>
            <param name="package">The package name. May be null.</param>
            <param name="intraPackageName">The intra package procedure name. May not be null.</param>
            <param name="name">The full name. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.BeforeCompleteCommand">
            <summary>
            Called at the beginning of the CompleteCommand method execution.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentPersistenceHook.AfterCompleteCommand">
            <summary>
            Called at the end of the CompleteCommand method execution.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentPersistenceHook.Configuration">
            <summary>
            Gets or sets the CodeFluent runtime configuration instance.
            </summary>
            <value>The CodeFluent runtime configuration instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentPersistenceHook.Persistence">
            <summary>
            Gets or sets the CodeFluent runtime persistence instance.
            </summary>
            <value>The CodeFluent runtime persistence instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentPersistenceHook.BinaryLargeObjectTypeName">
            <summary>
            Gets the type name of the binary large object type.
            </summary>
            <value>The type name of the binary large object type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentPersistenceHook.ContextData">
            <summary>
            Gets the context data. Provides additional information.
            </summary>
            <value>The context data. May not be null.</value>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BasePersistenceHook"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.GetContextData``1(System.String,``0)">
            <summary>
            Gets context data.
            </summary>
            <typeparam name="T">The context data target type.</typeparam>
            <param name="name">The name. May not be null.</param>
            <param name="defaultValue">The default value to use if not found.</param>
            <returns>
            An object of type T representing context data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.TryGetContextData``1(System.String,``0@)">
            <summary>
            Gets context data.
            </summary>
            <typeparam name="T">The context data target type.</typeparam>
            <param name="name">The name. May not be null.</param>
            <param name="value">The value.</param>
            <returns>true if data was found; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.GetAttribute``1(System.String,``0)">
            <summary>
            Gets a configuration attribute.
            </summary>
            <typeparam name="T">The attribute value target type.</typeparam>
            <param name="name">The name. May not be null.</param>
            <param name="defaultValue">The default value to use if not found.</param>
            <returns>
            An object of type T representing the attribute value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.Invoke(System.Object[])">
            <summary>
            This is a generic method provided for future extensions.
            </summary>
            <param name="arguments">The arguments. May be null.</param>
            <returns>An object representing the return value of the invocation.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.HandleExecuteReaderException(System.Exception)">
            <summary>
            Handles an ExecuteReader exception.
            </summary>
            <param name="exception">The exception. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeOpenConnection(System.Data.IDbConnection)">
            <summary>
            Called before the connection is opened.
            </summary>
            <param name="connection">The connection instance. May be null.</param>
            <returns>
            true if the OpenConnection method must immediatly return, false otherwise.
            </returns>
            true if the OpenConnection method must immediatly return, false otherwise.
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterOpenConnection(System.Data.IDbConnection)">
            <summary>
            Called after the connection is opened.
            </summary>
            <param name="connection">The connection instance. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeSetConnection(System.String,System.Data.IDbConnection)">
            <summary>
            Called befores the ADO.NET connection object is set.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="currentConnection">The current connection. May be null.</param>
            <returns>true if the calling method must immediatly return, false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterSetConnection(System.Data.IDbConnection)">
            <summary>
            Called after the ADO.NET connection object is set.
            </summary>
            <param name="connection">The connection instance. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeDispose(System.Boolean,System.Boolean)">
            <summary>
            Called at the beginning of the Dispose method execution.
            </summary>
            <param name="threadOwned">if set to <c>true</c> the thread is owned by the persistence instance.</param>
            <param name="throwOnError">if set to <c>true</c> errors can be thrown.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterDispose(System.Boolean,System.Boolean)">
            <summary>
            Called at the end of the Dispose method execution.
            </summary>
            <param name="threadOwned">if set to <c>true</c> the thread is owned by the persistence instance.</param>
            <param name="throwOnError">if set to <c>true</c> errors can be thrown.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeClone(CodeFluent.Runtime.CodeFluentPersistence)">
            <summary>
            Called at the beginning of the Clone method execution.
            </summary>
            <param name="persistence">The cloned persistence instance. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterClone(CodeFluent.Runtime.CodeFluentPersistence)">
            <summary>
            Called at the end of the Clone method execution.
            </summary>
            <param name="persistence">The cloned persistence instance. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeCloseReader(System.Data.IDataReader)">
            <summary>
            Called at the beginning of the CloseReader method execution.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterCloseReader">
            <summary>
            Called afters at the end of the CloseReader method execution. Current reader is closed at this time.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeClearPools(System.Data.IDbConnection)">
            <summary>
            Called at the beginning of the ClearPools method execution.
            </summary>
            <param name="connection">The connection. May be null.</param>
            <returns>
            true if the ClearPools method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterClearPools(System.Data.IDbConnection)">
            <summary>
            Called at the end of the ClearPools method execution.
            </summary>
            <param name="connection">The connection. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeBeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Called at the beginning of the BeginTransaction method execution.
            </summary>
            <param name="isolationLevel">The isolation level.</param>
            <returns>An instance of a transaction or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterBeginTransaction(System.Data.IDbTransaction)">
            <summary>
            Called at the end of the BeginTransaction method execution.
            </summary>
            <param name="transaction">The transaction. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeCommitTransaction(System.Data.IDbTransaction)">
            <summary>
            Called at the beginning of the CommitTransaction method execution.
            </summary>
            <param name="transaction">The transaction. May be null.</param>
            <returns>
            true if the CommitTransaction method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterCommitTransaction">
            <summary>
            Called at the end of the CommitTransaction method execution.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeRollbackTransaction(System.Data.IDbTransaction)">
            <summary>
            Called at the beginning of the RollbackTransaction method execution.
            </summary>
            <param name="transaction">The transaction. May be null.</param>
            <returns>
            true if the RollbackTransaction method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterRollbackTransaction">
            <summary>
            Called at the end of the RollbackTransaction method execution.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeExecuteNonQuery(System.Boolean)">
            <summary>
            Called at the beginning of the ExecuteNonQuery method execution.
            </summary>
            <param name="firstTry">if set to <c>true</c> this was the first execution.</param>
            <returns>The number of rows affected or -1.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterExecuteNonQuery(System.Int32,System.Boolean)">
            <summary>
            Called at the end of the ExecuteNonQuery method execution.
            </summary>
            <param name="rows">The number of rows affected.</param>
            <param name="firstTry">if set to <c>true</c> this was the first execution.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeExecuteReader(System.Data.CommandBehavior,System.Boolean)">
            <summary>
            Called at the beginning of the ExecuteReader method execution.
            </summary>
            <param name="behavior">The behavior.</param>
            <param name="firstTry">if set to <c>true</c> this was the first execution.</param>
            <returns>An instance of a data reader or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterExecuteReader(System.Data.CommandBehavior,System.Boolean,System.Data.IDataReader)">
            <summary>
            Called at the end of the ExecuteReader method execution.
            </summary>
            <param name="behavior">The behavior.</param>
            <param name="firstTry">if set to <c>true</c> this was the first execution.</param>
            <param name="reader">The reader. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeAddParameter(System.String,System.Object)">
            <summary>
            Called at the beginning of one of the AddParameter methods execution.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The value. May be null.</param>
            <returns>A parameter instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterAddParameter(System.String,System.Object,System.Data.IDbDataParameter)">
            <summary>
            Called at the end of one of the AddParameter methods execution.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeGetReaderValue(System.Data.IDataReader,System.String,System.Object,System.Object@)">
            <summary>
            Called at the beginning of one of the GetReaderValue methods execution.
            </summary>
            <param name="reader">The reader.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value. May be null.</param>
            <param name="value">The read value. May be null.</param>
            <returns>
            true if the calling GetReaderValue method must return immediatly; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterGetReaderValue(System.Data.IDataReader,System.String,System.Object,System.Object)">
            <summary>
            Called at the end of one of the GetReaderValue methods execution.
            </summary>
            <param name="reader">The reader.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value. May be null.</param>
            <param name="value">The read value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeGetReaderValueObject(System.Data.IDataReader,System.String,System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode,System.Object@)">
            <summary>
            Called at the beginning of the GetReaderValueObject method execution.
            </summary>
            <param name="reader">The reader.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value. May be null.</param>
            <param name="type">The type of the serialized object. May not be null.</param>
            <param name="serializationMode">The serialization mode.</param>
            <param name="value">The read value. May be null.</param>
            <returns>
            true if the calling GetReaderValue method must return immediatly; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterGetReaderValueObject(System.Data.IDataReader,System.String,System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode,System.Object)">
            <summary>
            Called at the end of the GetReaderValueObject method execution.
            </summary>
            <param name="reader">The reader.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value. May be null.</param>
            <param name="type">The type of the serialized object. May not be null.</param>
            <param name="serializationMode">The serialization mode.</param>
            <param name="value">The read value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeCreateTextCommand(System.String)">
            <summary>
            Called at the beginning of the CreateTextCommand method execution.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>
            true if the ClearPools method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterCreateTextCommand(System.String)">
            <summary>
            Called at the end of the CreateTextCommand method execution.
            </summary>
            <param name="name">The name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeCreateStoredProcedureCommand(System.String,System.String,System.String,System.String)">
            <summary>
            Called at the beginning of the CreateStoredProcedureCommand method execution.
            </summary>
            <param name="schema">The schema name. May be null.</param>
            <param name="package">The package name. May be null.</param>
            <param name="intraPackageName">The intra package procedure name. May not be null.</param>
            <param name="name">The full name. May be null.</param>
            <returns>
            true if the ClearPools method must immediatly return, false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterCreateStoredProcedureCommand(System.String,System.String,System.String,System.String)">
            <summary>
            Called at the end of the CreateStoredProcedureCommand method execution.
            </summary>
            <param name="schema">The schema name. May be null.</param>
            <param name="package">The package name. May be null.</param>
            <param name="intraPackageName">The intra package procedure name. May not be null.</param>
            <param name="name">The full name. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.BeforeCompleteCommand">
            <summary>
            Called at the beginning of the CompleteCommand method execution.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BasePersistenceHook.AfterCompleteCommand">
            <summary>
            Called at the end of the CompleteCommand method execution.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.BasePersistenceHook.BinaryLargeObjectTypeName">
            <summary>
            Gets the type name of the binary large object type.
            </summary>
            <value>The type name of the binary large object type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BasePersistenceHook.Configuration">
            <summary>
            Gets or sets the CodeFluent runtime configuration instance.
            </summary>
            <value>The CodeFluent runtime configuration instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BasePersistenceHook.Persistence">
            <summary>
            Gets or sets the CodeFluent runtime persistence instance. Settings the persistence clears hook context data.
            </summary>
            <value>The CodeFluent runtime persistence instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BasePersistenceHook.ContextData">
            <summary>
            Gets the context data. Provides additional information.
            </summary>
            <value>The context data. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BasePersistenceHook.ConfigurationPrefix">
            <summary>
            Gets or sets the configuration prefix.
            </summary>
            <value>The configuration prefix.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject">
            <summary>
            Defines a base class to represent a large array of byte or BLOB (Binary Large OBject).
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.ITraceable">
            <summary>
            Defines a traceable object.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ITraceable.Trace(System.CodeDom.Compiler.IndentedTextWriter)">
            <summary>
            Traces the current object out to the specified writer.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.DeleteFileName">
            <summary>
            The token that identifies a file to be deleted.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.UrlPropertiesFormat">
            <summary>
            A utility format string to serialize the blob as a list of properties.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.HttpPostedFilePrefix">
            <summary>
            The token that identifies a file name in the collection of Http Posted Files.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.DefaultDateTime">
            <summary>
            The default to use.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.#ctor(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject"/> class.
            </summary>
            <param name="configurationContext">The configuration context. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.GetEntityClrFullTypeName">
            <summary>
            Gets the entity CLR full type name.
            </summary>
            <returns>The type name</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.GetPropertyName">
            <summary>
            Gets the property name.
            </summary>
            <returns>The property name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.ClearIdentifiersValues">
            <summary>
            Clears the array of identifiers values.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.AddIdentifierValue(System.Object)">
            <summary>
            Adds one identifier value to the array of identitiers values.
            </summary>
            <param name="identifierValue">The identifier value to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetFilePath(System.String)">
            <summary>
            Sets the file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetMetaDatas(System.String)">
            <summary>
            Sets the meta datas.
            </summary>
            <param name="path">The path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetMetaDatas(CodeFluent.Runtime.Utilities.LongFileInfo)">
            <summary>
            Sets the meta datas.
            </summary>
            <param name="fi">The file info. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetMetaDatas(System.IO.FileInfo)">
            <summary>
            Sets the meta datas.
            </summary>
            <param name="fi">The file info. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetMetaDataLoaded(System.Boolean)">
            <summary>
            Sets a value indicating whether the current blob meta data has been loaded.
            </summary>
            <param name="metaDataLoaded">if set to <c>true</c> the current blob meta data has been loaded.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetSize(System.Int64)">
            <summary>
            Sets the size of the blob.
            </summary>
            <param name="size">The size to set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetAttributes(System.IO.FileAttributes)">
            <summary>
            Sets the attributes of the blob.
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetContentType(System.String)">
            <summary>
            Sets the content type of the blob.
            </summary>
            <param name="contentType">The content type.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetLastWriteTimeUtc(System.DateTime)">
            <summary>
            Sets the creation time of the blob, in coordinated universal time (UTC).
            </summary>
            <param name="lastWriteTimeUtc">The last write time.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetLastAccessTimeUtc(System.DateTime)">
            <summary>
            Sets the creation time of the blob, in coordinated universal time (UTC).
            </summary>
            <param name="lastAccessTimeUtc">The last access time.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SetCreationTimeUtc(System.DateTime)">
            <summary>
            Sets the creation time of the blob, in coordinated universal time (UTC).
            </summary>
            <param name="creationTimeUtc">The creation time.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.ReadFromCacheBag``1(System.String,``0)">
            <summary>
            Reads an entry from the cache.
            </summary>
            <typeparam name="T">The expected value type.</typeparam>
            <param name="name">The entry name. May not be null.</param>
            <param name="defaultValue">The default value if the entry is not found.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.WriteToCacheBag(System.String,System.Object)">
            <summary>
            Write an entry to the cache.
            </summary>
            <param name="name">The entry name. May not be null.</param>
            <param name="value">The entry value. If null, the entry will be removed.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.DeleteCacheFile">
            <summary>
            Deletes the cache file. This function can safely assume the file CacheFilePath exists.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.DeleteCache">
            <summary>
            Deletes the blob file cache, if it exists.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Delete">
            <summary>
            Deletes this blob from the persistence layer.
            The current ConfigurationContext will be used.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Delete(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Deletes this blob from the persistence layer.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.DeleteMetaData">
            <summary>
            Deletes the current blob meta data.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.LoadRtf(System.IO.TextWriter)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an RTF output text writer.
            The current ConfigurationContext will be used.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.LoadRtf(CodeFluent.Runtime.CodeFluentContext,System.IO.TextWriter)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an RTF output text writer.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.LoadRtf(CodeFluent.Runtime.CodeFluentContext,System.IO.TextWriter,System.String)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an RTF output text writer.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="writer">The output writer. May not be null.</param>
            <param name="controlWords">A string representing custom control words. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.LoadRtf(CodeFluent.Runtime.CodeFluentContext,System.IO.TextWriter,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an RTF output text writer.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="writer">The output writer. May not be null.</param>
            <param name="horizontalScale">The horizontal scaling value. Pass a negative number if you do not want to use this.</param>
            <param name="verticalScale">The vertical scaling value. Pass a negative number if you do not want to use this.</param>
            <param name="widthGoal">The desired width of the picture in twips. Pass a negative number if you do not want to use this.</param>
            <param name="heightGoal">The desired height of the picture in twips. Pass a negative number if you do not want to use this.</param>
            <param name="controlWords">A string representing custom control words. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Load(System.String,System.Boolean)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an output file on the disk.
            The current ConfigurationContext will be used.
            </summary>
            <param name="outputFilePath">The output file path. May not be null</param>
            <param name="deleteIfEmpty">if set to <c>true</c> the output file will be deleted if it is empty after the operation.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Load(CodeFluent.Runtime.CodeFluentContext,System.String,System.Boolean)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an output file on the disk.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="outputFilePath">The output file path. May not be null</param>
            <param name="deleteIfEmpty">if set to <c>true</c> the output file will be deleted if it is empty after the operation.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Load(System.String)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an output file on the disk.
            The current ConfigurationContext will be used.
            </summary>
            <param name="outputFilePath">The output file path. May not be null</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Load(CodeFluent.Runtime.CodeFluentContext,System.String)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an output file on the disk.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="outputFilePath">The output file path. May not be null</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Load(System.IO.Stream)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an output stream.
            The current ConfigurationContext will be used.
            </summary>
            <param name="outputStream">The output stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Load(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an output stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="outputStream">The output stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.LoadCache(CodeFluent.Runtime.CodeFluentContext,System.Boolean,System.Boolean)">
            <summary>
            Loads the blob cache from the persistence layer. Caching must be enabled for this operation to succeed.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="refresh">if set to <c>true</c> the cache will always be refreshed from the persistence layer.</param>
            <param name="deleteIfEmpty">if set to <c>true</c> the output cache file will be deleted if it is empty after the operation.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.GetInputStream">
            <summary>
            Gets an input stream. The input stream can be read from.
            The current ConfigurationContext will be used.
            </summary>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.GetOutputStream">
            <summary>
            Gets an output stream. The output stream can be written to.
            The current ConfigurationContext will be used.
            </summary>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.GetOutputStream(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Gets an output stream. The output stream can be written to.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.GetInputStream(CodeFluent.Runtime.CodeFluentContext,System.Int64,System.Int64)">
            <summary>
            Gets an input stream. The input stream can be read from.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SaveMetaData(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Saves the blob meta data.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.LoadMetaData(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Loads the current blob meta data.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.LoadMetaData(CodeFluent.Runtime.CodeFluentContext,System.Boolean)">
            <summary>
            Loads the current blob meta data.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="refresh">if set to <c>true</c> meta data will be reloaded whatsoever.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Save(System.String)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input file path.
            The current ConfigurationContext will be used.
            </summary>
            <param name="inputFilePath">The input file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.EnforceFullPaths(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Determines if full paths must be enforced when manipulating files.
            </summary>
            <param name="context">The context. May not be null.</param>
            <returns>if <c>true</c> full paths will be enforced.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Save(CodeFluent.Runtime.CodeFluentContext,System.String)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input file path.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputFilePath">The input file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SavePostedFile(System.Object)">
            <summary>
            Saves the current blob to the persistence layer, from the specified posted file object.
            Supported input object types are: HttpPostedFile, BinaryLargeObject, XmlSerializableBinaryLargeObject, Array of bytes, Stream, and string (representing a file path).
            The current ConfigurationContext will be used.
            </summary>
            <param name="input">The input object. If null, the operation returns without doing nothing.</param>
            <returns>true if the object was handled; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SavePostedFile(CodeFluent.Runtime.CodeFluentContext,System.Object)">
            <summary>
            Saves the current blob to the persistence layer, from the specified posted file object.
            Supported input object types are: HttpPostedFile, BinaryLargeObject, XmlSerializableBinaryLargeObject, Array of bytes, Stream, and string (representing a file path).
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="input">The input object. If null, the operation returns without doing nothing.</param>
            <returns>true if the object was handled; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Save(System.Byte[])">
            <summary>
            Saves the current blob to the persistence layer, from the specified array of bytes.
            The current ConfigurationContext will be used.
            </summary>
            <param name="bytes">The input array of bytes. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Save(CodeFluent.Runtime.CodeFluentContext,System.Byte[])">
            <summary>
            Saves the current blob to the persistence layer, from the specified array of bytes.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="bytes">The input array of bytes. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Save(System.IO.Stream)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input stream.
            The current ConfigurationContext will be used.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Save(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Save(CodeFluent.Runtime.CodeFluentContext,System.Byte[],System.String,System.Int64,System.String,System.DateTime,System.DateTime,System.DateTime,System.IO.FileAttributes)">
            <summary>
            Saves the current blob to the persistence layer, from the specified array of bytes.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="bytes">The input array of bytes. May not be null.</param>
            <param name="fileName">The file name of the blob.</param>
            <param name="size">The blob size.</param>
            <param name="contentType">The MIME content type of the blob.</param>
            <param name="lastWriteTimeUtc">The time, in coordinated universal time (UTC), that the current blob was last written.</param>
            <param name="lastAccessTimeUtc">The time, in coordinated universal time (UTC), that the current blob was last accessed.</param>
            <param name="creationTimeUtc">The time, in coordinated universal time (UTC), that the current blob was last created.</param>
            <param name="attributes">The blob attributes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Save(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream,System.String,System.Int64,System.String,System.DateTime,System.DateTime,System.DateTime,System.IO.FileAttributes)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="fileName">The file name of the blob.</param>
            <param name="size">The blob size.</param>
            <param name="contentType">The MIME content type of the blob.</param>
            <param name="lastWriteTimeUtc">The time, in coordinated universal time (UTC), that the current blob was last written.</param>
            <param name="lastAccessTimeUtc">The time, in coordinated universal time (UTC), that the current blob was last accessed.</param>
            <param name="creationTimeUtc">The time, in coordinated universal time (UTC), that the current blob was last created.</param>
            <param name="attributes">The blob attributes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SaveContent">
            <summary>
            Saves the content property.
            </summary>
            <returns>
            true if the object was handled; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SaveContent(CodeFluent.Runtime.CodeFluentContext,System.Boolean)">
            <summary>
            Saves the content property.
            </summary>
            <param name="context">The context to us. May not be null..</param>
            <param name="loadMetaData">if set to <c>true</c> the blob meta data will be loaded first.</param>
            <returns>true if the object was handled; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.SavePostedFile(CodeFluent.Runtime.CodeFluentContext,System.Object,System.Boolean)">
            <summary>
            Saves the current blob to the persistence layer, from the specified posted file object.
            Supported input object types are: HttpPostedFile, BinaryLargeObject, XmlSerializableBinaryLargeObject, Array of bytes, Stream, and string (representing a file path).
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="input">The input object. If null, the operation returns without doing nothing.</param>
            <param name="loadMetaData">if set to <c>true</c> the blob meta data will be loaded first.</param>
            <returns>true if the object was handled; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Save(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage)">
            <summary>
            Saves the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.ToArray">
            <summary>
            Converts the blob to an array using the current CodeFluent runtime context.
            This method should not be used if the blob size is bigger than 80K approximatively.
            Prefer the streaming approach.
            </summary>
            <returns>An array of bytes containing the blob. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.ToArray(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Converts the blob to an array.
            This method should not be used if the blob size is bigger than 80K approximatively.
            Prefer the streaming approach.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <returns>An array of bytes containing the blob. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Trace">
            <summary>
            Traces this instance.
            </summary>
            <returns>A text representing this instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.BaseTrace(System.CodeDom.Compiler.IndentedTextWriter)">
            <summary>
            Traces the instance.
            </summary>
            <param name="writer">The input text writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.TraceContent(System.CodeDom.Compiler.IndentedTextWriter)">
            <summary>
            Traces the instance content.
            </summary>
            <param name="writer">The input text writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.OnStreaming(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs)">
            <summary>
            Raises the <see cref="E:Streaming"/> event.
            </summary>
            <param name="e">The <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.OnAction(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType,CodeFluent.Runtime.CodeFluentContext,System.Boolean,System.Object)">
            <summary>
            Raises the <see cref="E:Action"/> event.
            </summary>
            <param name="eventType">Type of the event.</param>
            <param name="context">The CodeFluenr runtime context.</param>
            <param name="isCancelable">if set to <c>true</c> the event is cancelable.</param>
            <param name="argument">The optional argument.</param>
            <returns>
            	<c>false</c> if the event has been canceled; otherwise <c>false</c>
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.BuildHttpHandlerUrl(CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType)">
            <summary>
            Builds the corresponding Http handler url.
            This methods just builds a string, it does not check if the handler is installed and operational.
            </summary>
            <param name="urlType">The target url type.</param>
            <returns>An url string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.BuildHttpHandlerUrl(System.String,CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Builds the corresponding Http handler url.
            This methods just builds a string, it does not check if the handler is installed and operational.
            </summary>
            <param name="handlerPath">The handler path. If null, 'blobhandler.ashx' will be used.</param>
            <param name="urlType">The target url type.</param>
            <param name="notFoundUrl">An url to use if an error occurs. May be null.</param>
            <param name="contentDisposition">The content disposition. Should be 'inline' or 'attachment'. May be null.</param>
            <param name="imageWidth">Width of the image for image url types. Use -1 to use implicit values.</param>
            <param name="imageHeight">Height of the image for image url types. Use -1 to use implicit values.</param>
            <returns>An url string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.OnAction(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs)">
            <summary>
            Raises the <see cref="E:Action"/> event.
            </summary>
            <param name="e">The <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.IsOfType(CodeFluent.Runtime.Utilities.PerceivedType)">
            <summary>
            Determines whether this instance represents a specified type of data.
            </summary>
            <returns>true if this instance represents the specified type of date; false if not; null if it cannot be determined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.IsOfType(System.String[],System.String[])">
            <summary>
            Determines whether this instance represents specific extensions or content types.
            </summary>
            <param name="exts">The list of extensions to compare.</param>
            <param name="contentTypes">The list of content types to compare.</param>
            <returns>
            	<c>true</c> if this instance represents one of the specified extensions or content types; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.-or- null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.</param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.-or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.GetExtension">
            <summary>
            Gets this instance file extension, if possible.
            </summary>
            <returns>An extension of null if it cannot be determined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.DebugTrace(System.Object)">
            <summary>
            Traces the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Microsoft#SqlServer#Server#IBinarySerialize#Read(System.IO.BinaryReader)">
            <summary>
            Reads blob content from specified binary reader.
            </summary>
            <param name="reader">The input reader.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Microsoft#SqlServer#Server#IBinarySerialize#Write(System.IO.BinaryWriter)">
            <summary>
            Writes blob content to specified writer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="E:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Streaming">
            <summary>
            Occurs when the blob instance is being streamed.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Action">
            <summary>
            Occurs when something happens to the blob instance.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.ConfigurationContext">
            <summary>
            Gets the configuration context.
            </summary>
            <value>The configuration context. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.EntityClrFullTypeName">
            <summary>
            Gets or sets the entity CLR full type name.
            </summary>
            <value>The entity CLR full type name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.MetaDatasMask">
            <summary>
            Gets or sets the meta datas stored along with the blob instance.
            </summary>
            <value>The meta datas mask.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.IdentifiersValues">
            <summary>
            Gets an array of identifiers values.
            </summary>
            <value>The array of identifiers values. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.PropertyName">
            <summary>
            Gets or sets the property name.
            </summary>
            <value>The property name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.CacheFilePath">
            <summary>
            Gets or sets the cache file path.
            If set to null, the blob content will not be cached on the disk.
            </summary>
            <value>The cache file path. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.FileExtension">
            <summary>
            Gets the file extension.
            </summary>
            <value>The file extension. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.FileName">
            <summary>
            Gets or sets the file name. Setting this property may update the ContentType property as well.
            </summary>
            <value>The file name. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.LastWriteTimeUtc">
            <summary>
            Gets the time, in coordinated universal time (UTC), when the current blob was last written to. 
            </summary>
            <value>The UTC time when the current blob was last written to.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.LastAccessTimeUtc">
            <summary>
            Gets the time, in coordinated universal time (UTC), that the current blob was last accessed. 
            </summary>
            <value>The UTC time that the current blob was last accessed.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.CreationTimeUtc">
            <summary>
            Gets the creation time, in coordinated universal time (UTC), of the current blob.
            </summary>
            <value>The creation date and time in UTC format of the current blob.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Content">
            <summary>
            Gets or sets a user defined content object.
            This is mostly used in WPF two-way binding scenarios.
            </summary>
            <value>The content object.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.ContentType">
            <summary>
            Gets or sets the MIME content type of the blob.
            </summary>
            <value>The MIME content type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Attributes">
            <summary>
            Gets the <see cref="T:System.IO.FileAttributes"/> of the current blob. 
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.MustCreateDirectory">
            <summary>
            Gets or sets a value indicating whether a target directory must be automatically created when writing the blob content.
            </summary>
            <value><c>true</c> if a directory must be created; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.MustOverwrite">
            <summary>
            Gets or sets a value indicating whether the blob content must be overwritten.
            </summary>
            <value><c>true</c> if the blob content must be overwritten; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.IsCacheEnabled">
            <summary>
            Gets or sets a value indicating whether the blob content can be cached on the disk.
            </summary>
            <value>
            	<c>true</c> if the blob content can be cached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.IsCacheInvalid">
            <summary>
            Gets or sets a value indicating whether the blob content cache is valid.
            </summary>
            <value>
            	<c>true</c> if the blob content cache is invalid or if the cache file path is null; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.IsMetaDataLoaded">
            <summary>
            Gets a value indicating whether the current blob meta data has been loaded.
            </summary>
            <value>
            	<c>true</c> if the current blob meta data has been loaded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.PostedFile">
            <summary>
            Gets or sets the posted file.
            </summary>
            <value>The posted file. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.Size">
            <summary>
            Gets the size of the blob.
            </summary>
            <value>The size of the blob.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject.DisplayName">
            <summary>
            Gets the display name of the blob.
            This is mostly used for debugging purposes.
            </summary>
            <value>The display name. May not be null.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObject">
            <summary>
            Represents a large array of byte or BLOB (Binary Large OBject).
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.IDisplayable">
            <summary>
            Defines classes that have a display name.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDisplayable.DisplayName">
            <summary>
            Gets the current instance display name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.#ctor(CodeFluent.Runtime.CodeFluentContext,CodeFluent.Runtime.ICodeFluentEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObject"/> class.
            </summary>
            <param name="configurationContext">The configuration context. May not be null.</param>
            <param name="entity">The entity. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.GetPropertyName">
            <summary>
            Gets the property name.
            </summary>
            <returns>The property name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.GetEntityClrFullTypeName">
            <summary>
            Gets the entity CLR full type name.
            </summary>
            <returns>The type name</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.SaveMetaData(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Saves the blob meta data.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.AddSaveParameters(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Adds the parameters for save operations.
            </summary>
            <param name="context">The context to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.AddLoadParameters(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Adds the parameters for load operations.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.AddLoadMetaDataParameters(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Adds the parameters for meta data load operations.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.LoadMetaData(CodeFluent.Runtime.CodeFluentContext,System.Boolean)">
            <summary>
            Loads the current blob meta data.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="refresh">if set to <c>true</c> meta data will be reloaded whatsoever.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.LoadMetaData(System.Data.IDataReader)">
            <summary>
            Loads the current blob meta data from the persistence layer.
            </summary>
            <param name="reader">The reader to use. May not be null;</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.Save(System.String,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input file path.
            </summary>
            <param name="inputFilePath">The input file path.</param>
            <param name="options">Options to configure blob instance save.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.Save(CodeFluent.Runtime.CodeFluentContext,System.String,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input file path.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputFilePath">The input file path.</param>
            <param name="options">Options to configure blob instance save.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.Save(System.IO.Stream,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input stream.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="options">Options to configure blob instance save.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.Save(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="options">Options to configure blob instance save.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.Save(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.ProtectedSave(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.Delete(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Deletes this blob from the persistence layer.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.LoadCache(CodeFluent.Runtime.CodeFluentContext,System.Boolean,System.Boolean)">
            <summary>
            Loads the blob cache from the persistence layer. Caching must be enabled for this operation to succeed.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="refresh">if set to <c>true</c> the cache will always be refreshed from the persistence layer.</param>
            <param name="deleteIfEmpty">if set to <c>true</c> the output cache file will be deleted if it is empty after the operation.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.GetOutputStream(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Gets an output stream. The output stream can be written to.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.GetOutputStream(CodeFluent.Runtime.CodeFluentContext,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions)">
            <summary>
            Gets an output stream. The output stream can be written to.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="options">Options to use when saving the blob instance.</param>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.GetInputStream(CodeFluent.Runtime.CodeFluentContext,System.Int64,System.Int64)">
            <summary>
            Gets an input stream. The input stream can be read from.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.Load(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an output stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="outputStream">The output stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.PersistenceDelete(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Implements blob deletion from the persistence layer.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <returns>An instance of the IDataReader resulting from the delete operation.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.PersistenceSave(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream,System.IO.Stream[])">
            <summary>
            Implements blob save to the persistence layer from an input stream.
            This method also saves to specified outputStreams if they are specified, for example to combine cache write.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="outputStreams">The output streams. May be null.</param>
            <returns>An instance of the IDataReader resulting from the save operation.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.PersistenceLoad(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream[])">
            <summary>
            Implements blob load from the persistence layer to output streams.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="outputStreams">An array of output streams. May not be null and must contain at least one item.</param>
            <returns>An IDataReader instance.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.MetaDatasMask">
            <summary>
            Gets or sets the meta datas stored along with the blob instance.
            </summary>
            <value>The meta datas mask.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.Entity">
            <summary>
            Gets the entity.
            </summary>
            <value>The entity. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObject.PersistenceOptions">
            <summary>
            Gets the persistence options.
            </summary>
            <value>The persistence options. May not be null.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer">
            <summary>
            A utility class to help chunked, asynchronous BLOB (Binary Large OBject) upload server implementation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer.SessionFileExtension">
            <summary>
            Defines the session files extension.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer.CleanExpiredFiles">
            <summary>
            Cleans expired files.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer.GetFilePath(System.Guid)">
            <summary>
            Gets a job file path.
            </summary>
            <param name="id">The job identifier.</param>
            <returns>The file path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer.StartUploadJob(System.String)">
            <summary>
            Resume an upload job.
            </summary>
            <param name="reference">The job reference. May not be null.</param>
            <returns>0 if the job is new, otherwise the number of bytes that has been uploaded so far.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer.ContinueUploadJob(System.String,System.Int64,System.Byte[])">
            <summary>
            Continues the upload job.
            </summary>
            <param name="reference">The job reference. May not be null.</param>
            <param name="offset">The offset.</param>
            <param name="bytes">A chunk of bytes. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer.EndUploadJob(System.String,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServerMetadata)">
            <summary>
            Ends the upload job.
            </summary>
            <param name="reference">The job reference. May not be null.</param>
            <param name="metadata">The metadata. May be null.</param>
            <returns>The saved file path.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer.MaximumJobDays">
            <summary>
            Gets or sets the maximum number of days a job can last.
            </summary>
            <value>The maximum number of days for a job.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServer.TempDirectoryPath">
            <summary>
            Gets or sets the temporary directory path for session files.
            </summary>
            <value>The temp directory path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServerMetadata">
            <summary>
            Defines metadata for the BinaryLargeObjectChunkServer class.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServerMetadata.FileName">
            <summary>
            Gets or sets the file name.
            </summary>
            <value>The file name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServerMetadata.Attributes">
            <summary>
            Gets or sets the file attributes.
            </summary>
            <value>The file attributes.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServerMetadata.CreationTimeUtc">
            <summary>
            Gets or sets the date and time, in coordinated universal time (UTC), that the file was created.
            </summary>
            <value>The UTC creation time.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServerMetadata.LastAccessTimeUtc">
            <summary>
            Gets or sets the date and time, in coordinated universal time (UTC), that the file was last accessed.
            </summary>
            <value>The UTC last access time.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectChunkServerMetadata.LastWriteTimeUtc">
            <summary>
            Gets or sets the date and time, in coordinated universal time (UTC), that the file was last written.
            </summary>
            <value>The UTC last write time.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectDataReaderEventType">
            <summary>
            Defines the type of reader event.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectDataReaderEventType.Undefined">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectDataReaderEventType.ReadingFromDataReader">
            <summary>
            The blob instance is being read from a data reader.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectDataReaderEventType.ReadFromDataReader">
            <summary>
            The blob instance has been read from a data reader.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectDataReaderEventType.SavingToOutputStream">
            <summary>
            The blob instance is being save to an output stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectDataReaderEventType.SavedToOutputStream">
            <summary>
            The blob instance has been saved to an output stream.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas">
            <summary>
            Defines a combination of meta data stored along with a blob instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas.None">
            <summary>
            No meta data is stored.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas.FileName">
            <summary>
            The blob original file name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas.Size">
            <summary>
            The blob size.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas.ContentType">
            <summary>
            The blob MIME content type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas.LastWriteTimeUtc">
            <summary>
            The UTC time when the blob was last written to.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas.LastAccessTimeUtc">
            <summary>
            The UTC time that the blob was last accessed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas.CreationTimeUtc">
            <summary>
            The creation date and time in UTC format of the blob.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas.Attributes">
            <summary>
            The <see cref="T:System.IO.FileAttributes"/> of the blob.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas.All">
            <summary>
            All is a combination of all other flags.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions">
            <summary>
            Represents persistence configuration for a blob instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.AddSaveParameterName(System.String)">
            <summary>
            Adds a name to the list of parameters used for the save operation.
            </summary>
            <param name="name">The name to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.AddLoadParameterName(System.String)">
            <summary>
            Adds a name to the list of parameters used for the load operation.
            </summary>
            <param name="name">The name to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.AddLoadMetaDataParameterName(System.String)">
            <summary>
            Adds a name to the list of parameters used for the meta data load operation.
            </summary>
            <param name="name">The name to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.AddIdentifierColumnName(System.String)">
            <summary>
            Adds a name to the list of columns used for identifiers.
            </summary>
            <param name="name">The name to add. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.DataColumnOrdinal">
            <summary>
            Gets or sets the index of the content data column.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.DataColumnName">
            <summary>
            Gets or sets the name of the content data column.
            </summary>
            <value>The data column name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.MetaDatasMask">
            <summary>
            Gets or sets the meta datas stored along with the blob instance.
            </summary>
            <value>The meta datas mask.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.SaveParameterNames">
            <summary>
            Gets the names of the parameters used for the save operation.
            </summary>
            <value>An array of names. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LoadParameterNames">
            <summary>
            Gets the names of the parameters used for the load operation.
            </summary>
            <value>An array of names. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LoadMetaDataParameterNames">
            <summary>
            Gets the names of the parameters used for the meta data load operation.
            </summary>
            <value>An array of names. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.IdentifiersColumnNames">
            <summary>
            Gets the names of the columns names used for identifiers.
            </summary>
            <value>An array of names. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.AttributesColumnName">
            <summary>
            Gets or sets the attributes column name.
            </summary>
            <value>The attributes column name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.SizeColumnName">
            <summary>
            Gets or sets the size column name.
            </summary>
            <value>The size column name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.FileNameColumnName">
            <summary>
            Gets or sets the file name column name.
            </summary>
            <value>The file name column name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.ContentTypeColumnName">
            <summary>
            Gets or sets the content type column name.
            </summary>
            <value>The content type column name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LastWriteTimeUtcColumnName">
            <summary>
            Gets or sets the last write time UTC column name.
            </summary>
            <value>The last write time UTC column name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LastAccessTimeUtcColumnName">
            <summary>
            Gets or sets the last access time UTC column name.
            </summary>
            <value>The last access time UTC column name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.CreationTimeUtcColumnName">
            <summary>
            Gets or sets the creation time UTC column name.
            </summary>
            <value>The creation time UTC column name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.SaveMetaDataProcedureName">
            <summary>
            Gets or sets the save meta data procedure name.
            </summary>
            <value>The save meta data procedure name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.SaveMetaDataProcedureFullName">
            <summary>
            Gets or sets the full name of the save meta data procedure.
            </summary>
            <value>The full name of the save meta data procedure.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LoadMetaDataProcedureName">
            <summary>
            Gets or sets the load meta data procedure name.
            </summary>
            <value>The load meta data procedure name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LoadMetaDataProcedureFullName">
            <summary>
            Gets or sets the full name of the load meta data procedure.
            </summary>
            <value>The full name of the load meta data procedure.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.Schema">
            <summary>
            Gets or sets the name of the persistence schema. May be null.
            </summary>
            <value>The name of the persistence package.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.PackageName">
            <summary>
            Gets or sets the name of the persistence package. May not null.
            </summary>
            <value>The name of the persistence package.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.SaveProcedureName">
            <summary>
            Gets or sets the save procedure name.
            </summary>
            <value>The save procedure name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.SaveProcedureFullName">
            <summary>
            Gets or sets the full name of the save procedure.
            </summary>
            <value>The full name of the save procedure.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LoadProcedureName">
            <summary>
            Gets or sets the load procedure name.
            </summary>
            <value>The load procedure name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LoadProcedureFullName">
            <summary>
            Gets or sets the full name of the load procedure.
            </summary>
            <value>The full name of the load procedure.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.SaveChunkProcedureName">
            <summary>
            Gets or sets the save chunk procedure name.
            </summary>
            <value>The save chunk procedure name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.SaveChunkProcedureFullName">
            <summary>
            Gets or sets the full name of the save chunk procedure.
            </summary>
            <value>The full name of the save chunk procedure.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LoadChunkProcedureName">
            <summary>
            Gets or sets the load chunk procedure name.
            </summary>
            <value>The load chunk procedure name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectPersistenceOptions.LoadChunkProcedureFullName">
            <summary>
            Gets or sets the full name of the load chunk procedure.
            </summary>
            <value>The full name of the load chunk procedure.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions">
            <summary>
            Defines a combination of blob instance save options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions.SaveEntityBefore">
            <summary>
            Entity instance will be saved before blob instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions.SaveEntityAfter">
            <summary>
            Entity instance will be saved after blob instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions.UpdateCache">
            <summary>
            Cache will be updated if configured.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions.ReadEntityOnSave">
            <summary>
            Read entity information on save.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions.OptimizeForTargetPlatform">
            <summary>
            Optimize save for the target platform.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions.Default">
            <summary>
            The default options.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage">
            <summary>
            Defines a WCF message for binary large object operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.MessageType">
            <summary>
            Gets or sets the message type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.SessionId">
            <summary>
            Gets or sets the session identifier for chunked transfers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.EntityKey">
            <summary>
            Gets or sets the binary large object entity key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.PropertyName">
            <summary>
            Gets or sets the binary large object property name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.EntityClrFullTypeName">
            <summary>
            Gets or sets the binary large object entity CLR type name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.ContextName">
            <summary>
            Gets or sets the CodeFluent runtime context name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.MetaDatasMask">
            <summary>
            Gets or sets the binary large object metadata mask.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.FileName">
            <summary>
            Gets or sets the binary large object file name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.LastWriteTimeUtc">
            <summary>
            Gets or sets the binary large object last write date.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.LastAccessTimeUtc">
            <summary>
            Gets or sets the binary large object last access date.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.CreationTimeUtc">
            <summary>
            Gets or sets the binary large object creation date.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.ContentType">
            <summary>
            Gets or sets the binary large object MIME content type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.Attributes">
            <summary>
            Gets or sets the binary large object file attributes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.RangeStart">
            <summary>
            Gets or sets the binary large object fragment start offset.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.RangeEnd">
            <summary>
            Gets or sets the binary large object fragment end offset.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.Size">
            <summary>
            Gets or sets the binary large object total size in bytes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.Stream">
            <summary>
            Gets or sets the binary large object input or output stream.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.#ctor(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType,CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage"/> class from an existing blob.
            </summary>
            <param name="messageType">Type of the message.</param>
            <param name="blob">The binary large object. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.#ctor(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage"/> class for a default response to a request.
            </summary>
            <param name="request">The request message. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs">
            <summary>
            Provides data for the Saving event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs.#ctor(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectDataReaderEventType,System.IO.Stream,System.Data.IDataReader,System.Byte[],System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs"/> class.
            </summary>
            <param name="eventType">Type of the event.</param>
            <param name="stream">The stream.</param>
            <param name="dataReader">The data reader.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs.#ctor(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamEventType,System.IO.Stream,System.Byte[],System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs"/> class.
            </summary>
            <param name="eventType">Type of the event.</param>
            <param name="stream">The stream.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs.DataReaderEventType">
            <summary>
            Gets the type of data reader event.
            </summary>
            <value>The type of data reader event.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs.StreamEventType">
            <summary>
            Gets the type of stream event.
            </summary>
            <value>The type of stream event.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs.Stream">
            <summary>
            Gets the stream. May be null.
            </summary>
            <value>The stream.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs.DataReader">
            <summary>
            Gets the data reader. May be null.
            </summary>
            <value>The data reader.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs.Buffer">
            <summary>
            Gets the buffer.
            </summary>
            <value>The buffer.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs.Offset">
            <summary>
            Gets the offset in the buffer.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamingEventArgs.Count">
            <summary>
            Gets the number of bytes being used.
            </summary>
            <value>The number of bytes being used.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType">
            <summary>
            Determine what the CodeFluent Http handler will send back to the client.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType.Image">
            <summary>
            The result is the original image. Only supported for image type blobs.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType.Thumbnail">
            <summary>
            The result is a thumbnail of the original image. The default size is 120x120 if width or height are not specified. Only supported for image type blobs.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType.FileExtension">
            <summary>
            The result is an image corresponding to the blob file type large icon.
            The icon is determined using the system parameters.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType.FileExtensionSmall">
            <summary>
            The result is an image corresponding to the blob file type small icon.
            The icon is determined using the system parameters.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType.Raw">
            <summary>
            The result is the original file bytes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType.Text">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Web.UI.WebControls.BinaryLargeObjectUrlType.Captcha">
            <summary>
            The result is a captcha.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration">
            <summary>
            Configures how blobs are handled by CodeFluent.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.DefaultSubDirectory">
            <summary>
            Defines the name of the blob content cache root directory.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.DefaultIconsSubDirectory">
            <summary>
            Defines the name of the blob icon cache root directory.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.#ctor(CodeFluent.Runtime.CodeFluentConfiguration,System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.CreateObject(CodeFluent.Runtime.ICodeFluentEntity)">
            <summary>
            Creates an instance of the blob using CodeFluent configuration.
            The result is an instance of a class deriving from the BinaryLargeObject class and specific to the target persistence layer.
            </summary>
            <param name="entity">The entity to initialize the blob with. May be null.</param>
            <returns>A newly created instance of a class deriving from BinaryLargeObject.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.GetEntityConfiguration(System.String)">
            <summary>
            Gets the binary services configuration for a specific entity.
            </summary>
            <param name="entityFullTypeName">Full type name of the entity. May not be null.</param>
            <returns>An instance of the BinaryServicesEntityConfiguration class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.GetContentType(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Gets the MIME content type for a given image format.
            </summary>
            <param name="imageFormat">The image format. May not be null.</param>
            <returns>The image format MIME content type. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.GetContentType(System.String,System.Boolean)">
            <summary>
            Gets the MIME content type for a given file path, depending on the value of the UseWebMimeTypes property.
            </summary>
            <param name="fileName">The file name. May not be null.</param>
            <param name="useWebMimeTypes">if set to <c>true</c> IIS web MIME types are use, otherwise the registry is used.</param>
            <returns>
            The file MIME content type. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.GetContentType(System.String)">
            <summary>
            Gets the MIME content type for a given file path, depending on the value of the UseWebMimeTypes property.
            </summary>
            <param name="fileName">The file name. May not be null.</param>
            <returns>The file MIME content type. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.WriteBitmap(System.IO.Stream,System.String)">
            <summary>
            Writes a bitmap containing the given text to the specified stream.
            Default height and width are used.
            </summary>
            <param name="stream">The output stream. May not be null.</param>
            <param name="text">The input text. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.WriteBitmap(System.IO.Stream,System.String,System.Int32,System.Int32)">
            <summary>
            Writes a bitmap containing the given text to the specified stream.
            </summary>
            <param name="outputStream">The output stream. May not be null.</param>
            <param name="text">The input text. May not be null.</param>
            <param name="width">The bitmap width.</param>
            <param name="height">The bitmap height.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.GetBitmapFilePath(System.String)">
            <summary>
            Gets the file path of PNG bitmap containing the given text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <returns>A file path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.GetBitmapFilePath(System.String,System.Int32,System.Int32)">
            <summary>
            Gets the file path of PNG bitmap containing the given text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <param name="width">The bitmap width.</param>
            <param name="height">The bitmap height.</param>
            <returns>A file path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.AddContentDispositionHeader(System.Web.HttpContext,System.String,System.String)">
            <summary>
            Adds the content disposition header to the HTTP context's response.
            </summary>
            <param name="context">The context. May not be null.</param>
            <param name="disposition">The disposition. If null, 'inline' will be used.</param>
            <param name="fileName">The file name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.WriteBitmap(System.Web.HttpContext,System.String)">
            <summary>
            Writes a PNG bitmap containing the given text to the HTTP response stream.
            </summary>
            <param name="context">The HTTP context object. May not be null.</param>
            <param name="text">The input text. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.WriteBitmap(System.Web.HttpContext,System.String,System.Int32,System.Int32)">
            <summary>
            Writes a PNG  bitmap containing the given text to the HTTP response stream.
            </summary>
            <param name="context">The HTTP context object. May not be null.</param>
            <param name="text">The input text. May not be null.</param>
            <param name="width">The bitmap width.</param>
            <param name="height">The bitmap height.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.NormalizeContentDisposition(System.String)">
            <summary>
            Normalizes a content disposition text.
            </summary>
            <param name="text">The input text.</param>
            <returns>'inline' or 'attachment'.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.Copy(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies the specified input stream to the specified output stream.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="outputStream">The output stream. May not be null.</param>
            <returns>The total count of copied bytes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.Copy(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Copies the specified input stream to the specified output stream.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="outputStream">The output stream. May not be null.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns>The total count of copied bytes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.Copy(System.IO.Stream,System.IO.Stream[])">
            <summary>
            Copies the specified input stream to the specified output streams.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="outputStreams">The output streams. May not be null or empty.</param>
            <returns>The total count of copied bytes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.Copy(System.IO.Stream,System.IO.Stream[],System.Int32)">
            <summary>
            Copies the specified input stream to the specified output streams.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="outputStreams">The output streams. May not be null or empty.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns>The total count of copied bytes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.Clone(CodeFluent.Runtime.CodeFluentConfiguration)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="configuration">The configuration. May not be null.</param>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.Element">
            <summary>
            Gets the .config file Xml element for binary services configuration.
            </summary>
            <value>The element.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.TypeName">
            <summary>
            Gets or sets the type name of the class deriving from the BinaryLargeObject class.
            Based on the 'typeName' Xml attributes from the configuration file.
            The default is SqlServerBinaryLargeObject.
            </summary>
            <value>The configured type name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.ChunkSize">
            <summary>
            Gets or sets the size of the blob chunk to use for streaming operations. The default is 65536.
            Based on the 'chunkSize' Xml attributes from the configuration file.
            </summary>
            <value>The size of the chunk.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.DefaultChunkSize">
            <summary>
            Gets or sets the size of the blob chunk to use for streaming operations. The default is 65536.
            Based on the 'chunkSize' Xml attributes from the configuration file.
            </summary>
            <value>The size of the chunk.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.UseHttpErrors">
            <summary>
            Gets or sets a value indicating whether to use IIS configured HTTP errors.
            Based on the 'useHttpErrors' Xml attributes from the configuration file.
            The default is true.
            </summary>
            <value><c>true</c> if HTTP errors must be used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.NotFoundImageDefaultWidth">
            <summary>
            Gets or sets the width of the image used when a blob was not found.
            Based on the 'notFoundImageDefaultWidth' Xml attributes from the configuration file.
            The default is 120 (pixels).
            </summary>
            <value>The image width in pixels.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.NotFoundImageDefaultHeight">
            <summary>
            Gets or sets the height of the image used when a blob was not found.
            Based on the 'notFoundImageDefaultHeight' Xml attributes from the configuration file.
            The default is 120 (pixels).
            </summary>
            <value>The image height in pixels.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.WaitTimeOnSharingViolation">
            <summary>
            Gets or sets the wait time on sharing violation when writing to or reading from the cache.
            Based on the 'waitTimeOnSharingViolation' Xml attributes from the configuration file.
            The default is 100 (milliseconds).
            </summary>
            <value>The wait time in milliseconds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.RetryCountOnSharingViolation">
            <summary>
            Gets or sets the retry count on sharing violation when writing to or reading from the cache.
            Based on the 'retryCountOnSharingViolation' Xml attributes from the configuration file.
            The default is 10.
            </summary>
            <value>The number of retries.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.UseWebMimeTypes">
            <summary>
            Gets or sets a value indicating whether to use IIS metabase web MIME types or registry MIME types.
            Based on the 'useWebMimeTypes' Xml attributes from the configuration file.
            The default is true if the current context is ASP.NET; otherwise false.
            </summary>
            <value><c>true</c> if IIS metabase must be used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.AllowNonInteractiveRelativePaths">
            <summary>
            Gets or sets a value indicating whether relative paths are allowed when environment is running as a non interactive process.
            </summary>
            <value>
            	<c>true</c> if relative paths are allowed when environment is running as a non interactive process; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.AutoLoadMetaData">
            <summary>
            Gets or sets a value indicating whether blob meta data must be automatically loaded.
            Based on the 'autoLoadMetaData' Xml attributes from the configuration file.
            The default is true.
            </summary>
            <value>
            	<c>true</c> if meta data auto load is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.IsCacheEnabled">
            <summary>
            Gets or sets a value indicating whether blob content caching is enabled or not.
            Based on the 'cacheEnabled' Xml attributes from the configuration file.
            The default is true.
            </summary>
            <value>
            	<c>true</c> if blob content caching is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.IsIconCacheEnabled">
            <summary>
            Gets or sets a value indicating whether blob icon caching is enabled or not.
            Based on the 'iconCacheEnabled' Xml attributes from the configuration file.
            The default is true.
            </summary>
            <value>
            	<c>true</c> if blob icon caching is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.IsClientCacheEnabled">
            <summary>
            Gets or sets a value indicating whether HTTP user agent caching is enabled.
            Based on the 'clientCacheEnabled' Xml attributes from the configuration file.
            The default is true.
            </summary>
            <value>
            	<c>true</c> if client caching is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.NotFoundDefaultUrl">
            <summary>
            Gets or sets the URL used to represent a blob that is not found in the persistence layer.
            Based on the 'notFoundDefaultUrl' Xml attributes from the configuration file.
            The default is null (or nothing in Visual Basic).
            </summary>
            <value>The URL to use.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.BitsServerUrl">
            <summary>
            Gets or sets the URL used for the BITS server
            The default is http://+:1027/{0}/ with {0} defined as the current CodeFluent runtime context name.
            </summary>
            <value>The URL to use.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.BitsServerOptions">
            <summary>
            Gets or sets the BITS server options.
            </summary>
            <value>The BITS server options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.BitsServerTempDirectoryPath">
            <summary>
            Gets or sets the temporary path used for the BITS server.
            </summary>
            <value>The path to use.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.IconCacheDirectoryPath">
            <summary>
            Gets or sets the icon cache directory path.
            Based on the 'iconCacheDirectoryPath' Xml attributes from the configuration file.
            The default is the DefaultIconsSubDirectory constant.
            </summary>
            <value>The icon cache directory path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.ContentDisposition">
            <summary>
            Gets or sets blob content disposition when rendered to HTTP user agents.
            Based on the 'contentDisposition' Xml attributes from the configuration file.
            The default is null (which in general means attachment, not inline).
            </summary>
            <value>The content disposition to use.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.IconFormat">
            <summary>
            Gets or sets the icon image format.
            Based on the 'iconFormat' Xml attributes from the configuration file.
            The default is PNG.
            </summary>
            <value>The icon format.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.CacheDirectoryPath">
            <summary>
            Gets or sets the cache directory path.
            Based on the 'cacheDirectoryPath' Xml attributes from the configuration file.
            The default is the DefaultSubDirectory constant.
            Argument {0} will be replaced by the current Windows logged in identity temporary directory.
            Argument {1} will be replaced by the DefaultSubDirectory constant.
            Argument {2} will be replaced by an auto generated string which depends on the connection string.
            </summary>
            <value>The cache directory path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.CacheFilePathFormat">
            <summary>
            Gets or sets the cache file path format.
            Argument {0} will be replaced by identifiers values.
            Argument {1} will be replaced by the property or data column name.
            Argument {2} will be replaced by the entity CLR full type name.
            Argument {3} will be replaced by the blob original file name, if any.
            Argument {4} will be replaced by the blob original file extension, if any.
            Based on the 'cacheFilePathFormat' Xml attributes from the configuration file.
            The default is '{0}{1}{2}{3}'.
            </summary>
            <value>The cache file path format.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesConfiguration.CacheSparseLevel">
            <summary>
            Gets or sets the cache sparse level.
            This indicates the number of sub directory to create before storing a cached blob content.
            Based on the 'cacheSparseLevel' Xml attributes from the configuration file.
            The default is 3.
            </summary>
            <value>The cache sparse level.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryServicesEntityConfiguration">
            <summary>
            Configures how blobs are handled by CodeFluent Entities for a specific entity.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesEntityConfiguration.#ctor(CodeFluent.Runtime.CodeFluentContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryServicesEntityConfiguration"/> class.
            </summary>
            <param name="context">The context object. May not be null.</param>
            <param name="entityFullTypeName">The entity full type name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesEntityConfiguration.Construct(CodeFluent.Runtime.CodeFluentContext,System.String,System.Xml.XmlElement)">
            <summary>
            Constructs the instance using an Xml element.
            </summary>
            <param name="context">The context object. May not be null.</param>
            <param name="entityFullTypeName">The entity full type name. May not be null.</param>
            <param name="element">The input Xml element. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryServicesEntityConfiguration.GetXmlAttribute``1(System.String,``0,System.Xml.XmlElement[])">
            <summary>
            Gets an XML attribute value from a list of Xml elements.
            </summary>
            <typeparam name="T">The expected value type.</typeparam>
            <param name="name">The attribute name. May not be null</param>
            <param name="defaultValue">The default value.</param>
            <param name="elements">The list of elements.</param>
            <returns>The value of the first matching attribute or the default value.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesEntityConfiguration.BinaryLargeObjectTypeName">
            <summary>
            Gets name of the binary large object type.
            </summary>
            <value>The name of the binary large object type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryServicesEntityConfiguration.EntityFullTypeName">
            <summary>
            Gets the entity full type name.
            </summary>
            <value>The entity full type name.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BitsServer">
            <summary>
            Represents a BITS server implementation independent from Internet Information Services (IIS).
            Supports range download and upload (BITS Upload Protocol 1.5).
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.Server">
            <summary>
            Defines a binary large object server (upload and download) implementation.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.IService">
            <summary>
            Defines a service class that can be hosted by CodeFluent.Runtime.ServiceHost.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.IConfigurable">
            <summary>
            Defines an class that can be configured using Xml.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.IConfigurable.Element">
            <summary>
            Gets or sets the configuration Xml element.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.IService.Start">
            <summary>
            Starts the service.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.IService.Stop">
            <summary>
            Stops the service.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.IService.Pause">
            <summary>
            Pauses the service
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.IService.Continue">
            <summary>
            Continues the service.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.IService.Status">
            <summary>
            Gets the service status.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.IService.Host">
            <summary>
            Gets or sets the service host.
            This is the first property initialized by the service host.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.IService.Name">
            <summary>
            Gets or sets the service name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.Server"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.Server"/> class.
            </summary>
            <param name="postfix">The postfix to append to storage paths. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.Start">
            <summary>
            Starts the service.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.Stop">
            <summary>
            Stops the service.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.Log(System.String)">
            <summary>
            Logs the specified text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.LogHost(System.String)">
            <summary>
            Logs the specified text to the host.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.OnSessionChange(CodeFluent.Runtime.BinaryServices.Session,CodeFluent.Runtime.BinaryServices.SessionChangeType,System.Object,System.Boolean,System.Object)">
            <summary>
            Called when an HTTP session changes.
            </summary>
            <param name="session">The session instance. May be null.</param>
            <param name="changeType">The change type.</param>
            <param name="context">The HTTP server context. May not be null.</param>
            <param name="isCancelable">if set to <c>true</c> the event is cancelable.</param>
            <param name="argument">An optional argument. May be null.</param>
            <returns>false if session was canceled.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.OnSessionClose(System.Object,CodeFluent.Runtime.BinaryServices.Session)">
            <summary>
            Called when a session closes.
            </summary>
            <param name="context">The HTTP server context. May not be null.</param>
            <param name="session">The session. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.OnSessionCancel(System.Object,CodeFluent.Runtime.BinaryServices.Session)">
            <summary>
            Called when a session is canceled.
            </summary>
            <param name="context">The HTTP server context. May not be null.</param>
            <param name="session">The session. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.OnSessionLoad(System.Object,System.Guid)">
            <summary>
            Loads an existing session.
            </summary>
            <param name="context">The HTTP server context.</param>
            <param name="id">The session identifier.</param>
            <returns>
            A session instance or null if the session was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.OnSessionCreate(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a new session.
            </summary>
            <param name="context">The HTTP server context.</param>
            <param name="metadatas">The metadatas. May be null.</param>
            <returns>A new session instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.IsRange(System.Int64,System.Int64)">
            <summary>
            Determines whether the specified start and end combination is a valid range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>
            	<c>true</c> if the specified start and end combination is a valid range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.OnDownload(System.Object,System.Int64,System.Int64)">
            <summary>
            Called when a download occurs.
            </summary>
            <param name="context">The HTTP server context.</param>
            <param name="start">The range start.</param>
            <param name="end">The range end.</param>
            <returns>The number of bytes actually written.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.OnInformation(System.Object)">
            <summary>
            Called when a request for information occurs.
            </summary>
            <param name="context">The HTTP server context.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.ParseRange(System.String,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Parses a range definition text.
            Supports RFC 2616 and BITS upload 1.5 range definitions.
            </summary>
            <param name="range">The input range definiton.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="total">The total.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.ParseUri(System.Uri,System.String@,System.String@,System.String@)">
            <summary>
            Parses an input URI.
            </summary>
            <param name="uri">The input URI. May not be null.</param>
            <param name="entityTypeName">Name of the entity type.</param>
            <param name="propertyName">Name of the property type.</param>
            <param name="entityKey">The entity key.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Server.SetStatus(System.ServiceProcess.ServiceControllerStatus)">
            <summary>
            Sets the service status.
            </summary>
            <param name="status">The new status.</param>
            <returns>The previous status.</returns>
        </member>
        <member name="E:CodeFluent.Runtime.BinaryServices.Server.SessionChange">
            <summary>
            Occurs when an HTTP session changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Server.TempDirectoryPath">
            <summary>
            Gets or sets the temporary directory path for session files.
            </summary>
            <value>The temp directory path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Server.ArchiveDirectoryPath">
            <summary>
            Gets or sets the directory path for session archive files.
            </summary>
            <value>The directory path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Server.ChunkSize">
            <summary>
            Gets or sets the size of the buffer used for transferring data.
            </summary>
            <value>The size of the chunk.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Server.ArchiveSessionData">
            <summary>
            Gets or sets a value indicating whether session data must be moved in the ArchiveDirectoryPath folder.
            Data is moved when a session is canceled or closed.
            </summary>
            <value><c>true</c> if session data must be moved; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Server.ArchiveSessionLogs">
            <summary>
            Gets or sets a value indicating whether session logs must be moved in the ArchiveDirectoryPath folder.
            Logs are moved when a session is canceled or closed.
            </summary>
            <value><c>true</c> if session logs must be moved; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Server.Status">
            <summary>
            Gets the service status.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Server.CodeFluent#Runtime#IService#Host">
            <summary>
            Gets or sets the service host.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Server.Name">
            <summary>
            Gets or sets the service name.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Server.Element">
            <summary>
            Gets or sets the configuration Xml element.
            </summary>
            <value></value>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.Server"/> class.
            </summary>
            <param name="url">The URL to listen to. May not be null.</param>
            <param name="postfix">The postfix to append to storage paths. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.#ctor(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BitsServer"/> class.
            </summary>
            <param name="context">The CodeFluent runtime context. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.OnInformation(System.Net.HttpListenerContext,CodeFluent.Runtime.BinaryServices.BinaryLargeObject)">
            <summary>
            Called when a request for information occurs.
            </summary>
            <param name="context">The HTTP server context. May not be null.</param>
            <param name="blob">The binary large object. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.IsBitsClient(System.String)">
            <summary>
            Determines whether the specified user agent identifies a BITS client.
            </summary>
            <param name="userAgent">The user agent. May be null.</param>
            <returns>
            	<c>true</c> if the specified user agent identifies a BITS client; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.OnDownload(System.Net.HttpListenerContext,CodeFluent.Runtime.BinaryServices.BinaryLargeObject,System.Int64,System.Int64)">
            <summary>
            Called when a download occurs.
            </summary>
            <param name="context">The HTTP server context. May not be null.</param>
            <param name="blob">The binary large object. May not be null.</param>
            <param name="start">The range start.</param>
            <param name="end">The range end.</param>
            <returns>The number of bytes actually written.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.CloseSession(System.Net.HttpListenerContext,CodeFluent.Runtime.BinaryServices.BinaryLargeObject,CodeFluent.Runtime.BinaryServices.Session)">
            <summary>
            Saves the specified binary large object.
            </summary>
            <param name="context">The HTTP server context. May not be null.</param>
            <param name="blob">The binary large object. May not be null.</param>
            <param name="session">The server session. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.AddContentDispositionHeader(System.Net.HttpListenerContext,System.String,System.String)">
            <summary>
            Adds the content disposition header.
            </summary>
            <param name="context">The context.</param>
            <param name="disposition">The disposition.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.Start">
            <summary>
            Starts the service.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.Stop">
            <summary>
            Stops the service.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.IsUpload(System.Net.HttpListenerRequest)">
            <summary>
            Determines whether the specified request is a BITS upload request.
            </summary>
            <param name="request">The input request. May not be null.</param>
            <returns>
            	<c>true</c> if the specified request is a BITS upload request; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.OnAuthenticate(System.Net.HttpListenerContext)">
            <summary>
            Called when authentication happens.
            </summary>
            <param name="context">The listener context.</param>
            <returns>true if authentication succeeds; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.OnWindowsAuthenticate(System.Net.HttpListenerContext,System.Security.Principal.WindowsIdentity)">
            <summary>
            Called when Windows authentication happens.
            </summary>
            <param name="context">The listener context.</param>
            <param name="identity">The windows identity.</param>
            <returns>true if authentication succeeds; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.OnWindowsMembershipAuthenticate(System.Net.HttpListenerContext,System.Security.Principal.WindowsIdentity)">
            <summary>
            Called when Windows authentication happens bases on ASP.Net roles. This methods throws a NotSupportException and must be overriden as needed.
            </summary>
            <param name="context">The listener context.</param>
            <param name="identity">The windows identity.</param>
            <returns>
            true if authentication succeeds; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.OnBasicAuthenticate(System.Net.HttpListenerContext,System.Net.HttpListenerBasicIdentity)">
            <summary>
            Called when basic authentication happens.
            </summary>
            <param name="context">The listener context.</param>
            <param name="identity">The basic identity.</param>
            <returns>true if authentication succeeds; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServer.OnMembershipAuthenticate(System.Net.HttpListenerContext,System.Net.HttpListenerBasicIdentity)">
            <summary>
            Called when membership authentication happens.
            </summary>
            <param name="context">The listener context.</param>
            <param name="identity">The basic identity.</param>
            <returns>true if authentication succeeds; otherwise false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BitsServer.Listener">
            <summary>
            Gets the underlying HTTP listener.
            </summary>
            <value>The listener.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BitsServer.Context">
            <summary>
            Gets the BITS CodeFluent runtime context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BitsServer.Name">
            <summary>
            Gets or sets the service name.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BitsServer.Element">
            <summary>
            Gets or sets the configuration Xml element.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BitsServer.Url">
            <summary>
            Gets or sets the base URL to listen to.
            The service must be stopped when setting this value.
            </summary>
            <value>The URL string.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BitsServer.MembershipProviderName">
            <summary>
            Gets or sets the name of the membership provider used for BASIC authentication.
            </summary>
            <value>The name of the membership provider.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BitsServer.Options">
            <summary>
            Defines options for the BITS server
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BitsServer.Options.Undefined">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BitsServer.Options.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BitsServer.Options.ArchiveSessionLogs">
            <summary>
            Indicates whether session logs must be moved in the ArchiveDirectoryPath folder.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BitsServer.Options.ArchiveSessionData">
            <summary>
            Indicates whether session data must be moved in the ArchiveDirectoryPath folder.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BitsServer.Options.AsynchronousSessionClose">
            <summary>
            Indicates whether session data must be saved asynchronously on session close.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BitsServer.Options.IgnoreWriteExceptions">
            <summary>
            Indicates whether write exceptions must be ignored.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BitsServer.Options.UnsafeConnectionNtlmAuthentication">
            <summary>
            Controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BitsServer.Options.UseAspNetRoles">
            <summary>
            Authentification is based on the ASP.NET membership and role system. Only valid if basic auth scheme contexts.
            If this option is not set, explicit configured forms credentials will be checked.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BitsServer.Options.Default">
            <summary>
            Defines the default value. Currently equals to ArchiveSessionLogs
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BitsServerAttribute">
            <summary>
            Specifies types that should start a BITS server.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BitsServerAttribute"/> class.
            </summary>
            <param name="type">The BITS server type. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServerAttribute.GetServerType(System.Type)">
            <summary>
            Gets the type of the BITS server for a given type.
            </summary>
            <param name="type">The type with the BitsServerAttribute set. May not be null.</param>
            <returns>Type BITS server type. May be null if the input type does not define the BitsServerAttribute.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServerAttribute.StartServer(System.Type)">
            <summary>
            Starts the server.
            </summary>
            <param name="type">The type with the BitsServerAttribute set. May not be null.</param>
            <returns>true if the server was started; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BitsServerAttribute.StopServer(System.Type)">
            <summary>
            Stops the server.
            </summary>
            <param name="type">The type with the BitsServerAttribute set. May not be null.</param>
            <returns>true if the server was stopped; otherwise false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BitsServerAttribute.Type">
            <summary>
            Gets the type of the associated BITS server
            </summary>
            <value>The type of the associated BITS server.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BitsServerAttribute.Server">
            <summary>
            Gets the associated BITS server instance.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs">
            <summary>
            Provides data for the blob events.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs.#ctor(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType,CodeFluent.Runtime.CodeFluentContext,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs"/> class.
            </summary>
            <param name="eventType">Type of the event.</param>
            <param name="context">The context.</param>
            <param name="isCancelable">if set to <c>true</c> the event is cancelable.</param>
            <param name="argument">An optional argument. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs.Context">
            <summary>
            Gets the CodeFluent runtime context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs.EventType">
            <summary>
            Gets the type of event.
            </summary>
            <value>The type of event.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs.IsCancelable">
            <summary>
            Gets a value indicating whether this event is cancelable.
            </summary>
            <value>
            	<c>true</c> if this event is cancelable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this event is canceled.
            </summary>
            <value><c>true</c> if this event is canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventArgs.Argument">
            <summary>
            Gets or sets the optional argument.
            </summary>
            <value>The argument.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamEventType">
            <summary>
            Defines the type of streaming event.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamEventType.Undefined">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamEventType.LoadingFromInputStream">
            <summary>
            The blob instance is being loaded from an input stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamEventType.LoadedFromInputStream">
            <summary>
            The blob instance has been loaded from an input stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamEventType.SavingToOutputStream">
            <summary>
            The blob instance is being saved to an output stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamEventType.SavedToOutputStream">
            <summary>
            The blob instance has been saved to an output stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectStreamEventType.LoadedFromBuffer">
            <summary>
            The blob instance has been loaded from a buffer.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType">
            <summary>
            Defines the type of blob event.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.Undefined">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.Saving">
            <summary>
            The event occurs when the blob is being saved with an input stream.
            The event is cancelable.
            The argument contains the input stream instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.Saved">
            <summary>
            The event occurs when the blob has been saved with an input stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.Deleting">
            <summary>
            The event occurs when the blob is being deleted.
            The event is cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.Deleted">
            <summary>
            The event occurs when the blob has been deleted.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.Loading">
            <summary>
            The event occurs when the blob is being loaded to an output stream.
            The event is cancelable.
            The argument contains the output stream instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.Loaded">
            <summary>
            The event occurs when the blob has been loaded to an output stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.SavingMetadata">
            <summary>
            The event occurs when the blob metadata is being saved.
            The event is cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.SavedMetadata">
            <summary>
            The event occurs when the blob metadata has been saved.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadingMetadata">
            <summary>
            The event occurs when the blob metadata is being loaded.
            The event is cancelable.
            The argument contains a boolean that indicates if a refresh is needed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadedMetadata">
            <summary>
            The event occurs when the blob metadata has bee loaded.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadingDataReaderMetadata">
            <summary>
            The event occurs when the blob metadata is being loaded from a data reader.
            The event is cancelable.
            The argument contains an IDataReader instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadedDataReaderMetadata">
            <summary>
            The event occurs when the blob metadata has been  loaded from a data reader.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadingCache">
            <summary>
            The event occurs when the blob metadata is being loaded to cache.
            The event is cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadedCache">
            <summary>
            The event occurs when the blob metadata has been loaded to cache.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.SavingHttpPostedFile">
            <summary>
            The event occurs when the blob is being saved with an HttpPostedFile as input.
            The event is cancelable.
            The argument contains the HttpPostedFile instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.DeletingHttpPostedFile">
            <summary>
            The event occurs when the blob will be deleted with an HttpPostedFile as input.
            The event is cancelable.
            The argument contains the HttpPostedFile instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.SavingBinaryLargeObjectMessage">
            <summary>
            The event occurs when the blob will be saved with a BinaryLargeObjectMessage as input.
            The event is cancelable.
            The argument contains the BinaryLargeObjectMessage instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadingToFile">
            <summary>
            The event occurs when the blob is being loaded to an output file.
            The event is cancelable.
            The argument contains the output file path.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadedToFile">
            <summary>
            The event occurs when the blob has been loaded to an output file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadingAsRtf">
            <summary>
            The event occurs when the blob is being loaded to an RTF text writer.
            The event is cancelable.
            The argument contains an array of parameters passed to the LoadRtf method.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.LoadedAsRtf">
            <summary>
            The event occurs when the blob has been loaded to an RTF text writer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.DeletingCache">
            <summary>
            The event occurs when the blob is being deleted from cache.
            The event is cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.DeletedCache">
            <summary>
            The event occurs when the blob has been deleted from cache.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.SavedBinaryLargeObjectMessage">
            <summary>
            The event occurs when the blob has been saved with a BinaryLargeObjectMessage as input.
            The argument contains the BinaryLargeObjectMessage instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.SavedHttpPostedFile">
            <summary>
            The event occurs when the blob has been saved with an HttpPostedFile as input.
            The argument contains the HttpPostedFile instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectActionEventType.DeletedHttpPostedFile">
            <summary>
            The event occurs when the blob has been deleted with an HttpPostedFile as input.
            The argument contains the HttpPostedFile instance.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.DataReaderStream">
            <summary>
            Defines a binary stream on an IDataReader.
            The IDataReader must have been opened using a SequentialAccess command behavior.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.#ctor(System.Data.IDataReader,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.DataReaderStream"/> class.
            </summary>
            <param name="reader">The input reader instance. May be null.</param>
            <param name="columnOrdinal">The binary column ordinal.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            Throws a NotSupportedException for DataReaderStream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"></see> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            Throws a NotSupportedException for DataReaderStream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            Throws a NotSupportedException for DataReaderStream.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            Always return true for DataReaderStream.
            </summary>
            <value>true if the stream supports reading; otherwise, false.</value>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            Always return false for DataReaderStream.
            </summary>
            <value>true if the stream supports seeking; otherwise, false.</value>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            Always return false for DataReaderStream.
            </summary>
            <value>true if the stream supports writing; otherwise, false.</value>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            Throws a NotSupportedException for DataReaderStream.
            </summary>
            <value></value>
            <returns>A long value representing the length of the stream in bytes.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            The setter throws a NotSupportedException for DataReaderStream.
            </summary>
            <value></value>
            <returns>The current position within the stream.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.FileExtensionIcon">
            <summary>
            Represents a set of utilities to manager file extension icons.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.SaveFromExtension(System.String,System.Boolean,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves an icon from a file extension only.
            </summary>
            <param name="fileExtension">The input file extension. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon is saved; otherwise the big icon is saved.</param>
            <param name="outputFile">The output file. May not be null.</param>
            <param name="format">The target image format. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.SaveFromPath(System.String,System.Boolean,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves an icon from a file path.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon is saved; otherwise the big icon is saved.</param>
            <param name="outputFile">The output file. May not be null.</param>
            <param name="format">The target image format. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.GetFromExtension(System.String)">
            <summary>
            Gets an Icon object from a file extension only.
            </summary>
            <param name="fileExtension">The input file extension. May not be null.</param>
            <returns>An instance of the Icon class. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.GetFromExtension(System.String,System.Boolean)">
            <summary>
            Gets an Icon object from a file extension only.
            </summary>
            <param name="fileExtension">The input file extension. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon is returned; otherwise the big icon is returned.</param>
            <returns>
            An instance of the Icon class. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.GetFromPath(System.String,System.Boolean)">
            <summary>
            Gets an Icon object from a file path.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon is returned; otherwise the big icon is returned.</param>
            <returns>
            An instance of the Icon class. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.GetFilePath(CodeFluent.Runtime.CodeFluentContext,System.String,System.String,System.Boolean)">
            <summary>
            Gets the CodeFluent icon cached file path for a given file extension.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="fileExtension">The input file extension. May not be null.</param>
            <param name="formatExtension">The image format file extension. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon cache file path is returned; otherwise the big icon cache file path is returned.</param>
            <returns>The corresponding file path. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.GetFromContext(CodeFluent.Runtime.CodeFluentContext,System.String,System.String,System.Boolean)">
            <summary>
            Gets an Image object for the CodeFluent cached icon.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="fileExtension">The input file extension. May not be null.</param>
            <param name="formatExtension">The image format file extension. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon cache file path is returned; otherwise the big icon cache file path is returned.</param>
            <returns>
            The corresponding Image instance. May not be null.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject">
            <summary>
            Represents the file system specific implementation of a blob instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.#ctor(CodeFluent.Runtime.CodeFluentContext,CodeFluent.Runtime.ICodeFluentEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject"/> class.
            </summary>
            <param name="context">The configuration context. May not be null.</param>
            <param name="entity">The entity. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.GetBlobPath">
            <summary>
            Gets the blob path.
            </summary>
            <returns>The blob path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.Delete(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Deletes this blob from the persistence layer.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.Load(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream)">
            <summary>
            Loads a blob from the persistence layer using the specified array of identifiers values and saves it to an output stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="outputStream">The output stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.LoadCache(CodeFluent.Runtime.CodeFluentContext,System.Boolean,System.Boolean)">
            <summary>
            Loads the blob cache from the persistence layer. Caching must be enabled for this operation to succeed.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="refresh">if set to <c>true</c> the cache will always be refreshed from the persistence layer.</param>
            <param name="deleteIfEmpty">if set to <c>true</c> the output cache file will be deleted if it is empty after the operation.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.GetInputStream(CodeFluent.Runtime.CodeFluentContext,System.Int64,System.Int64)">
            <summary>
            Gets an input stream. The input stream can be read from.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.GetOutputStream(CodeFluent.Runtime.CodeFluentContext,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions)">
            <summary>
            Gets an output stream. The output stream can be written to.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="options">Options to use when saving the blob instance.</param>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.SaveMetaData">
            <summary>
            Saves the meta data using NTFS alternate streams.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.SaveMetaData(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Saves the blob meta data.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.LoadMetaData(CodeFluent.Runtime.CodeFluentContext,System.Boolean)">
            <summary>
            Loads the current blob meta data.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="refresh">if set to <c>true</c> meta data will be reloaded whatsoever.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.ProtectedSave(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions)">
            <summary>
            Saves the current blob to the persistence layer, from the specified input stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.PersistenceDelete(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Implements blob deletion from the persistence layer.
            This implementation throws a NotImplementedException exception.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <returns>
            An instance of the IDataReader resulting from the delete operation.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.PersistenceLoad(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream[])">
            <summary>
            Implements blob load from the persistence layer to output streams.
            This implementation throws a NotImplementedException exception.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="outputStreams">An array of output streams. May not be null and must contain at least one item.</param>
            <returns>An IDataReader instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.PersistenceSave(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream,System.IO.Stream[])">
            <summary>
            Implements blob save to the persistence layer from an input stream.
            This implementation throws a NotImplementedException exception.
            This method also saves to specified outputStreams if they are specified, for example to combine cache write.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="outputStreams">The output streams. May be null.</param>
            <returns>
            An instance of the IDataReader resulting from the save operation.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.LoadMetaData(System.Data.IDataReader)">
            <summary>
            Loads the current blob meta data from the persistence layer.
            </summary>
            <param name="reader">The reader to use. May not be null;</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.LoadMetaData(System.String)">
            <summary>
            Loads a dictionary associated with a file.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <returns>A collection of key-value pairs.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.LoadMetaData(System.String,System.String)">
            <summary>
            Loads a dictionary associated with a file.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="ntfsStreamName">Name of the NTFS stream to use. May be null to use the default stream.</param>
            <returns>A collection of key-value pairs.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.SaveMetaData(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves a dictionary associated with a file.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="metaData">The meta data dictionary. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.SaveMetaData(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves a dictionary associated with a file.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="ntfsStreamName">Name of the NTFS stream to use. May be null to use the default stream.</param>
            <param name="metaData">The meta data dictionary. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.-or- null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.</param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.-or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.FileSystemConfiguration">
            <summary>
            Gets file system binary storage configuration.
            </summary>
            <value>The file system configuration.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.FileName">
            <summary>
            Gets or sets the file name. Setting this property may update the ContentType property as well.
            </summary>
            <value>The file name. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.FileExtension">
            <summary>
            Gets the file extension.
            </summary>
            <value>The file extension. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.ContentType">
            <summary>
            Gets or sets the MIME content type of the blob.
            </summary>
            <value>The MIME content type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.FileSystemBinaryLargeObject.Size">
            <summary>
            Gets the size of the blob.
            </summary>
            <value>The size of the blob.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration">
            <summary>
            Configures how blobs are handled by the file system storage for a specific entity.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration.DefaultSubDirectory">
            <summary>
            Defines the name of the default blob storage root directory.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration.DefaultNtfsStreamName">
            <summary>
            The default name of the NTFS alternate stream that will store the blob metadata.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration.#ctor(CodeFluent.Runtime.CodeFluentContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration"/> class.
            </summary>
            <param name="context">The context object. May not be null.</param>
            <param name="entityFullTypeName">The entity full type name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration.Construct(CodeFluent.Runtime.CodeFluentContext,System.String,System.Xml.XmlElement)">
            <summary>
            Constructs the instance using an Xml element.
            </summary>
            <param name="context">The context object. May not be null.</param>
            <param name="entityFullTypeName">The entity full type name. May not be null.</param>
            <param name="element">The input Xml element. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration.NtfsStreamName">
            <summary>
            Gets or sets the name of the NTFS alternate stream used to save metadata.
            The default value is '_cfblob_'.
            </summary>
            <value>The name of the NTFS stream.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration.IdentifierSeparator">
            <summary>
            Gets or sets the identifier separator.
            </summary>
            <value>The identifier separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration.BlobPathFormat">
            <summary>
            Gets or sets the blob storage path format.
            </summary>
            <value>The blob storage path format.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.FileSystemBinaryServicesEntityConfiguration.BlobStorageRootPath">
            <summary>
            Gets or sets the blob storage root path.
            </summary>
            <value>The blob storage root path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.ICodeFluentBinaryService">
            <summary>
            Defines a standard interface for binary large object exchange.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ICodeFluentBinaryService.Load(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage)">
            <summary>
            Loads the specified binary large object from the persistence layer.
            </summary>
            <param name="request">The input request. May not be null.</param>
            <returns>A message that contains the response.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ICodeFluentBinaryService.Save(CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage)">
            <summary>
            Saves the specified binary large object to the persistence layer.
            </summary>
            <param name="request">The input request. May not be null.</param>
            <returns>A message that contains the response.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.IAccessTokenProvider">
            <summary>
            Defines an access token provider.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.IAccessTokenProvider.Token">
            <summary>
            Gets the access token.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream">
            <summary>
            Defines a utility class to read NTFS alternate streams data.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.IsSupported(System.String)">
            <summary>
            Determines whether named streams are supported for the specified drive root name.
            </summary>
            <param name="rootPathName">The drive root name.</param>
            <returns>
            	<c>true</c> if named streams are supported; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.IsSupported(System.String,System.Boolean)">
            <summary>
            Determines whether named streams are supported for the specified drive root name.
            </summary>
            <param name="rootPathName">The drive root name.</param>
            <param name="throwIfNotSupported">if set to <c>true</c> an exception will be raised if the drive does not support named streams.</param>
            <returns>
            	<c>true</c> if named streams are supported; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.ReadAllText(System.String)">
            <summary>
            Opens a text file, reads all lines of the file using the default encoding, and then closes the file.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="encoding">The file encoding. If null, the default encoding will be used.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllLines(System.String,System.String[])">
            <summary>
            Creates a new file, writes the specified strings to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="contents">The texts to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified strings to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="contents">The texts to write.</param>
            <param name="encoding">The file encoding. If null, the default encoding will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllText(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="text">The text to write.</param>
            <param name="encoding">The file encoding. If null, the default encoding will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.ReadAllBytes(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>An array of bytes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="bytes">The bytes to write. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="bytes">The bytes to write. May not be null.</param>
            <param name="offset">The offset in the byte array.</param>
            <param name="count">The count of bytes to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Exists(System.String)">
            <summary>
            Determines whether the specified file exists.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The path.</param>
            <returns>true if a file or directory exists with this path; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.OpenRead(System.String)">
            <summary>
            Opens an existing file for reading.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>
            An instance of the FileStream class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.OpenWrite(System.String)">
            <summary>
            Opens an existing file or creates a new file for writing.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>
            An instance of the FileStream class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Open(System.String,System.IO.FileAccess,System.IO.FileMode,System.IO.FileShare)">
            <summary>
            Creates a file stream.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="access">The file access.</param>
            <param name="mode">The file mode.</param>
            <param name="share">The file share.</param>
            <returns>An instance of the FileStream class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Delete(System.String)">
            <summary>
            Deletes the specified file.
            </summary>
            <param name="path">The name of the file to be deleted.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.GetFullPath(System.String)">
            <summary>
            Returns the absolute path for the specified path string.
            </summary>
            <param name="path">The file or directory for which to obtain absolute path information.</param>
            <returns>A string containing the fully qualified location of path, such as "C:\MyFile.txt".</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.EnumerateStreams(System.String)">
            <summary>
            Enumerates the alternate streams from a file or directory.
            </summary>
            <param name="path">The file or directory path. May not be null.</param>
            <returns>A collection of NTFS alternate streams</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.EnumerateStreams(System.IO.DirectoryInfo)">
            <summary>
            Enumerates the alternate streams from a directory.
            </summary>
            <param name="directory">The directory. May not be null.</param>
            <returns>A collection of NTFS alternate streams </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.EnumerateStreams(System.IO.FileInfo)">
            <summary>
            Enumerates the alternate streams from a file.
            </summary>
            <param name="file">The file. May not be null.</param>
            <returns>A collection of NTFS alternate streams </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.EnumerateStreams(System.IntPtr)">
            <summary>
            Enumerates the alternate streams from a file or directory handle.
            </summary>
            <param name="handle">The handle. May not be null.</param>
            <returns>A collection of NTFS alternate streams </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Name">
            <summary>
            Gets the stream name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.StreamType">
            <summary>
            Gets the stream type.
            </summary>
            <value>The type of the stream.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Size">
            <summary>
            Gets the stream size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType">
            <summary>
            Defines the type of an NTFS alternate stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.Data">
            <summary>
            Standard data. This corresponds to the NTFS $DATA stream type on the default (unnamed) data stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.ExtendedAttributeData">
            <summary>
            Extended attribute data. This corresponds to the NTFS $EA stream type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.SecurityData">
            <summary>
            Security descriptor data.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.AlternateData">
            <summary>
            Alternative data streams. This corresponds to the NTFS $DATA stream type on a named data stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.Link">
            <summary>
            Hard link information. This corresponds to the NTFS $FILE_NAME stream type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.PropertyData">
            <summary>
            Property data.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.ObjectId">
            <summary>
            Objects identifiers. This corresponds to the NTFS $OBJECT_ID stream type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.ReparseData">
            <summary>
            Reparse points. This corresponds to the NTFS $REPARSE_POINT stream type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.SparseDock">
            <summary>
            Sparse file. This corresponds to the NTFS $DATA stream type for a sparse file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.TransactionalNtfsData">
            <summary>
            Transactional NTFS (TxF) data stream. This corresponds to the NTFS $TXF_DATA stream type.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.PostedFile">
            <summary>
            Defines a file with a file name that is understood by the SavePostedFile method.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.PostedFile.GetPostedFile(System.Object)">
            <summary>
            Gets a posted file wrapper class for supported posted file classes.
            </summary>
            <param name="input">The input.</param>
            <returns>An instance of PostedFile or null.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.PostedFile.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.PostedFile.ContentType">
            <summary>
            Gets or sets the file MIME content type
            </summary>
            <value>The content type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.PostedFile.InputStream">
            <summary>
            Gets or sets the input stream.
            </summary>
            <value>The input stream.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.RangeStream">
            <summary>
            Defines a stream based on another stream, but restricted to a specified range.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.#ctor(System.IO.Stream,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.RangeStream"/> class.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.#ctor(System.IO.Stream,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.RangeStream"/> class.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="ownsStream">if set to <c>true</c> the base stream will be owned by this instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.RangeStart">
            <summary>
            Gets the range start.
            </summary>
            <value>The range start.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.RangeEnd">
            <summary>
            Gets the range end.
            </summary>
            <value>The range end.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.BaseStream">
            <summary>
            Gets the base stream.
            </summary>
            <value>The base stream.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.OwnsBaseStream">
            <summary>
            Gets a value indicating whether the base stream is owned by this instance.
            </summary>
            <value>
              <c>true</c> if the base stream is owned; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <value></value>
            <returns>true if the stream supports reading; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <value></value>
            <returns>true if the stream supports seeking; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <value></value>
            <returns>true if the stream supports writing; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <value></value>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <value></value>
            <returns>
            The current position within the stream.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType">
            <summary>
            Defines the type of binary large object message.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType.SessionCreate">
            <summary>
            Used to request an upload session with the server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType.SessionClose">
            <summary>
            Used to tell the server that upload is complete and to end the session.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType.SessionCancel">
            <summary>
            Used to terminate the upload session with the server. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType.SessionLessLoad">
            <summary>
            Used to download the binary large object to the server. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType.SessionSave">
            <summary>
            Used to send a fragment of the upload to the server. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType.SessionLessSave">
            <summary>
            Used to upload the binary large object in one message to the server. 
            Must not be used for large objects.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType.SessionLessDelete">
            <summary>
            Used to delete the binary large object from the server. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessageType.LoadMetaData">
            <summary>
            Used to load the binary large object meta data from the server.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.Session">
            <summary>
            Represents an binary large object server session that stores fragment on the disk.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.#ctor(CodeFluent.Runtime.BinaryServices.Server,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.Session"/> class.
            This connects to an existing server session.
            </summary>
            <param name="server">The server.</param>
            <param name="id">The id.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.#ctor(CodeFluent.Runtime.BinaryServices.Server,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.Session"/> class.
            This creates a new server session.
            </summary>
            <param name="server">The server.</param>
            <param name="metadatas">The metadatas.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.Load(CodeFluent.Runtime.BinaryServices.Server,System.Guid)">
            <summary>
            Loads an existing session.
            </summary>
            <param name="server">The server instance. May not be null.</param>
            <param name="id">The session id.</param>
            <returns>A Session instance or null if the session was not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.WriteData(System.Int64,System.Int64,System.Int64,System.IO.Stream)">
            <summary>
            Writes raw data to the data file.
            </summary>
            <param name="start">The start index.</param>
            <param name="end">The end index.</param>
            <param name="total">The total bytes to write.</param>
            <param name="inputStream">The input stream.</param>
            <returns>The number of bytes actually written.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.WriteLine(CodeFluent.Runtime.BinaryServices.Session.Action)">
            <summary>
            Writes an action to the log.
            </summary>
            <param name="action">The action to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.Write(CodeFluent.Runtime.BinaryServices.Session.Action,System.Object)">
            <summary>
            Writes an action to the log.
            </summary>
            <param name="action">The action to write.</param>
            <param name="value">Some extra information. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.WriteLine(CodeFluent.Runtime.BinaryServices.Session.Action,System.Object)">
            <summary>
            Writes an action to the log.
            </summary>
            <param name="action">The action to write.</param>
            <param name="value">Some extra information. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.GetLine(CodeFluent.Runtime.BinaryServices.Session.Action,System.Object)">
            <summary>
            Builds a log line.
            </summary>
            <param name="action">The action.</param>
            <param name="value">Some extra information. May be null.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.WriteLine(System.IO.StreamWriter,CodeFluent.Runtime.BinaryServices.Session.Action,System.Object)">
            <summary>
            Writes an action to a StreamWriter.
            </summary>
            <param name="writer">The input writer. May not be null.</param>
            <param name="action">The action to write.</param>
            <param name="value">Some extra information. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.Write(System.IO.StreamWriter,CodeFluent.Runtime.BinaryServices.Session.Action,System.Object)">
            <summary>
            Writes an action to a StreamWriter.
            </summary>
            <param name="writer">The input writer. May not be null.</param>
            <param name="action">The action to write.</param>
            <param name="value">Some extra information. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.Cleanup">
            <summary>
            Removes the files once the session is closed or canceled.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.Cancel">
            <summary>
            Cancels this session.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.Session.Close">
            <summary>
            Closes this session.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Session.Metadatas">
            <summary>
            Gets a dictionary of meta datas.
            </summary>
            <value>A dictionary instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Session.DataFilePath">
            <summary>
            Gets or sets the data file path.
            </summary>
            <value>The data file path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Session.FilePath">
            <summary>
            Gets the log file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.Session.Id">
            <summary>
            Gets the session identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.Session.Action">
            <summary>
            Defines the type of action to write to the log file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.Session.Action.Create">
            <summary>
            A session was created.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.Session.Action.FragmentUpload">
            <summary>
            A fragment was uploaded.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.Session.Action.FragmentDownload">
            <summary>
            A fragment was downloaded.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.Session.Action.Cancel">
            <summary>
            A session was canceled.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.Session.Action.Close">
            <summary>
            A session was closed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.Session.Action.Metadata">
            <summary>
            Metadata information is published.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.Session.Action.Warning">
            <summary>
            A warning was logged.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.Session.Action.Error">
            <summary>
            A error was logged.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.Session.Action.Information">
            <summary>
            An information was logged.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.SessionChangeEventArgs">
            <summary>
            Provides data for an HTTP server session event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.SessionChangeEventArgs.#ctor(CodeFluent.Runtime.BinaryServices.Session,CodeFluent.Runtime.BinaryServices.SessionChangeType,System.Object,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.SessionChangeEventArgs"/> class.
            </summary>
            <param name="session">The session instance. May be null.</param>
            <param name="changeType">The change type.</param>
            <param name="serverContext">The HTTP server context. May be null.</param>
            <param name="isCancelable">if set to <c>true</c> the event is cancelable.</param>
            <param name="argument">An optional argument. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.SessionChangeEventArgs.Session">
            <summary>
            Gets the session instance.
            </summary>
            <value>The session instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.SessionChangeEventArgs.ServerContext">
            <summary>
            Gets the HTTP server context instance.
            Depends on the HTTP server implementation.
            </summary>
            <value>The server context instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.SessionChangeEventArgs.ChangeType">
            <summary>
            Gets the change type.
            </summary>
            <value>The change type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.SessionChangeEventArgs.IsCancelable">
            <summary>
            Gets a value indicating whether this event is cancelable.
            </summary>
            <value>
            	<c>true</c> if this event is cancelable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.SessionChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this event is canceled.
            </summary>
            <value><c>true</c> if this event is canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.SessionChangeEventArgs.Argument">
            <summary>
            Gets the optional argument.
            </summary>
            <value>The argument.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.SessionChangeType">
            <summary>
            Defines how an HTTP session changes
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SessionChangeType.Creating">
            <summary>
            A session is being created.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SessionChangeType.Created">
            <summary>
            A session has been created.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SessionChangeType.Loading">
            <summary>
            A session is being loaded.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SessionChangeType.Loaded">
            <summary>
            A session has been loaded.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SessionChangeType.Closing">
            <summary>
            The session is being closed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SessionChangeType.Closed">
            <summary>
            The session has been closed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SessionChangeType.Canceling">
            <summary>
            The session is being canceled.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SessionChangeType.Canceled">
            <summary>
            The session has been canceled.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.SqlServerBinaryLargeObject">
            <summary>
            Represents the SQL Server specific implementation of a blob instance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SqlServerBinaryLargeObject.PointerParameterName">
            <summary>
            Defines the name of the 'Pointer' parameter.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SqlServerBinaryLargeObject.OffsetParameterName">
            <summary>
            Defines the name of the 'Offset' parameter.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.SqlServerBinaryLargeObject.BytesParameterName">
            <summary>
            Defines the name of the 'Bytes' parameter.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.SqlServerBinaryLargeObject.#ctor(CodeFluent.Runtime.CodeFluentContext,CodeFluent.Runtime.ICodeFluentEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.SqlServerBinaryLargeObject"/> class.
            </summary>
            <param name="context">The configuration context. May not be null.</param>
            <param name="entity">The entity. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.SqlServerBinaryLargeObject.PersistenceSave(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream,System.IO.Stream[])">
            <summary>
            Implements blob save to the persistence layer from an input stream.
            This method also saves to specified outputStreams if they are specified, for example to combine cache write.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="outputStreams">The output streams. May be null.</param>
            <returns>
            An instance of the IDataReader resulting from the save operation.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.SqlServerBinaryLargeObject.GetOutputStream(CodeFluent.Runtime.CodeFluentContext,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectSaveOptions)">
            <summary>
            Gets an output stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="options">Options to use when saving the blob instance.</param>
            <returns>A stream instance.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject">
            <summary>
            Represents a large array of byte or BLOB (Binary Large OBject) over Windows Communication Services (WCF).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.DefaultSubDirectoryPostfix">
            <summary>
            Defines the name of the blob content cache root directory.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.#ctor(CodeFluent.Runtime.CodeFluentContext,CodeFluent.Runtime.ServiceModel.ICodeFluentEntity,System.String,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMetaDatas,CodeFluent.Runtime.BinaryServices.ICodeFluentBinaryService)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject"/> class.
            </summary>
            <param name="configurationContext">The configuration context. May not be null.</param>
            <param name="entity">The entity. May be null.</param>
            <param name="propertyName">Name of the property. May not be null.</param>
            <param name="metaDatasMask">The meta datas mask.</param>
            <param name="binaryService">A binary service instance. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.Load(System.IO.Stream,CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions,System.Collections.IDictionary)">
            <summary>
            Loads a blob from the service layer and saves it to an output stream.
            </summary>
            <param name="outputStream">The output stream. May not be null.</param>
            <param name="options">The options.</param>
            <param name="arguments">An optional dictionary of arguments. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.GetResponse">
            <summary>
            Gets the response object from the communication layer.
            </summary>
            <returns>An instance of the BinaryLargeObjectMessage type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.GetMetaDataResponse">
            <summary>
            Gets the response object for meta data, from the communication layer.
            </summary>
            <returns>An instance of the BinaryLargeObjectMessage type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.Delete(CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions)">
            <summary>
            Saves the current blob to the service layer, from the specified input stream.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.Save(System.IO.Stream,CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions)">
            <summary>
            Saves the current blob to the service layer, from the specified input stream.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.GetEntityClrFullTypeName">
            <summary>
            Gets the entity CLR full type name.
            </summary>
            <returns>The type name</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.GetPropertyName">
            <summary>
            Gets the property name.
            </summary>
            <returns>The property name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.Delete(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Deletes this blob from the service layer.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.Load(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream)">
            <summary>
            Loads a blob from the service layer using the specified array of identifiers values and saves it to an output stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="outputStream">The output stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadCache(CodeFluent.Runtime.CodeFluentContext,System.Boolean,System.Boolean)">
            <summary>
            Loads the blob cache from the service layer. This methods currently always throws a NotImplementedException exception.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="refresh">if set to <c>true</c> the cache will always be refreshed from the service layer.</param>
            <param name="deleteIfEmpty">if set to <c>true</c> the output cache file will be deleted if it is empty after the operation.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.GetInputStream(CodeFluent.Runtime.CodeFluentContext,System.Int64,System.Int64)">
            <summary>
            Gets an input stream. The input stream can be read from.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <returns>A stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadMetaData(CodeFluent.Runtime.CodeFluentContext,System.Boolean)">
            <summary>
            Loads the current blob meta data.
            </summary>
            <param name="context">The context to use. May be null.</param>
            <param name="refresh">if set to <c>true</c> meta data will be reloaded whatsoever.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveMetaData(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Saves the blob meta data.
            </summary>
            <param name="context">The context to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.Save(CodeFluent.Runtime.CodeFluentContext,System.IO.Stream)">
            <summary>
            Saves the current blob to the service layer, from the specified input stream.
            </summary>
            <param name="context">The context to use. May not be null.</param>
            <param name="inputStream">The input stream. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.FileName">
            <summary>
            Gets or sets the file name. Setting this property may update the ContentType property as well.
            </summary>
            <value>The file name. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.Attributes">
            <summary>
            Gets the <see cref="T:System.IO.FileAttributes"/> of the current blob. 
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.ContentType">
            <summary>
            Gets or sets the MIME content type of the blob.
            </summary>
            <value>The MIME content type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.CreationTimeUtc">
            <summary>
            Gets the creation time, in coordinated universal time (UTC), of the current blob.
            </summary>
            <value>The creation date and time in UTC format of the current blob.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LastAccessTimeUtc">
            <summary>
            Gets the time, in coordinated universal time (UTC), that the current blob was last accessed. 
            </summary>
            <value>The UTC time that the current blob was last accessed.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LastWriteTimeUtc">
            <summary>
            Gets the creation time, in coordinated universal time (UTC), of the current blob.
            </summary>
            <value>The creation date and time in UTC format of the current blob.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.Size">
            <summary>
            Gets the size of the blob.
            </summary>
            <value>The size of the blob.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.CacheFilePath">
            <summary>
            Gets or sets the cache file path.
            If set to null, the blob content will not be cached on the disk.
            </summary>
            <value>The cache file path. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.RemoteEntityClrFullTypeName">
            <summary>
            Gets the name of the remote entity CLR type name.
            </summary>
            <value>The name of the remote entity CLR type name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.ServerUrl">
            <summary>
            Gets or sets the server URL for this instance.
            </summary>
            <value>The server URL for this instance.</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions">
            <summary>
            Defines options when saving an instance of a blob.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions.None">
            <summary>
            No specific option is used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions.UseBits">
            <summary>
            Use Background Intelligent Transfer Server (BITS) protocol. Not currently supported.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions.DontRefreshCache">
            <summary>
            By default the cache is automatically refreshed from the input stream if it supports seeking.
            If this option is set, the cache is just invalidated but not refreshed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions.PriorityMask">
            <summary>
            Defines a binary mask for priority flags.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions.PriorityForeground">
            <summary>
            Transfers the job in the foreground. Foreground transfers compete for network bandwidth with other applications, which can impede the user's network experience. This is the highest priority level.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions.PriorityHigh">
            <summary>
            Transfers the job in the background with a high priority. Background transfers use idle network bandwidth of the client to transfer files. This is the highest background priority level.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions.PriorityNormal">
            <summary>
            Transfers the job in the background with a normal priority. Background transfers use idle network bandwidth of the client to transfer files. This is the default priority level.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.SaveOptions.PriorityLow">
            <summary>
            Transfers the job in the background with a low priority. Background transfers use idle network bandwidth of the client to transfer files. This is the lowest background priority level. 
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions">
            <summary>
            Defines options when loading an instance of a blob.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions.None">
            <summary>
            No specific option is used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions.UseBits">
            <summary>
            Use Background Intelligent Transfer Server (BITS) protocol. Not currently supported.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions.CheckForFileStream">
            <summary>
            Check output stream is a FileStream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions.PriorityMask">
            <summary>
            Defines a binary mask for priority flags.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions.PriorityForeground">
            <summary>
            Transfers the job in the foreground. Foreground transfers compete for network bandwidth with other applications, which can impede the user's network experience. This is the highest priority level.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions.PriorityHigh">
            <summary>
            Transfers the job in the background with a high priority. Background transfers use idle network bandwidth of the client to transfer files. This is the highest background priority level.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions.PriorityNormal">
            <summary>
            Transfers the job in the background with a normal priority. Background transfers use idle network bandwidth of the client to transfer files. This is the default priority level.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions.PriorityLow">
            <summary>
            Transfers the job in the background with a low priority. Background transfers use idle network bandwidth of the client to transfer files. This is the lowest background priority level. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.ServiceBinaryLargeObject.LoadOptions.Default">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.WcfServer">
            <summary>
            Defines a Windows Communication Services (WCF) binary large object server.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.WcfServer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.WcfServer"/> class.
            </summary>
            <param name="postfix">The postfix to append to storage paths. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.WcfServer.Save(CodeFluent.Runtime.BinaryServices.BinaryLargeObject,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage)">
            <summary>
            Transfers a binary large object from the client.
            </summary>
            <param name="blob">The binary large object to transfer. May not be null.</param>
            <param name="request">The WCF request message. May not be null</param>
            <returns>The WCF response message.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.WcfServer.Load(CodeFluent.Runtime.BinaryServices.BinaryLargeObject,CodeFluent.Runtime.BinaryServices.BinaryLargeObjectMessage)">
            <summary>
            Transfers a binary large object to the client.
            </summary>
            <param name="blob">The binary large object to transfer. May not be null.</param>
            <param name="request">The WCF request message. May not be null</param>
            <returns>The WCF response message.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject">
            <summary>
            Represents an Xml serializable binary large object instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.#ctor(CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject"/> class.
            </summary>
            <param name="baseObject">The base object.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.#ctor(CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject"/> class.
            </summary>
            <param name="baseObject">The input base object. May not be null.</param>
            <param name="copyData">if set to <c>true</c> the blob data will be copied, if accessed via the Data property.</param>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.ContextName">
            <summary>
            Gets or sets the CodeFluent context name.
            </summary>
            <value>The context name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.MetaDatasMask">
            <summary>
            Gets or sets the binary large object meta datas mask.
            </summary>
            <value>The meta datas mask.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.FileName">
            <summary>
            Gets or sets the binary large object file name.
            </summary>
            <value>The file name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.Size">
            <summary>
            Gets or sets the binary large object size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.LastWriteTimeUtc">
            <summary>
            Gets or sets the binary large object last write time UTC.
            </summary>
            <value>The last write time UTC.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.LastAccessTimeUtc">
            <summary>
            Gets or sets the binary large object last access time UTC.
            </summary>
            <value>The last access time UTC.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.CreationTimeUtc">
            <summary>
            Gets or sets the binary large object creation time UTC.
            </summary>
            <value>The creation time UTC.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.ContentType">
            <summary>
            Gets or sets the binary large object MIME content type.
            </summary>
            <value>The content type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.Attributes">
            <summary>
            Gets or sets the binary large object attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.Data">
            <summary>
            Gets or sets the binary large object data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.XmlSerializableBinaryLargeObject.BaseObject">
            <summary>
            Gets or sets the base binary large object instance.
            </summary>
            <value>The base binary large object instance.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.BaseCacheable">
            <summary>
            Defines a base class that implements the ICacheable interface.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.ICacheable">
            <summary>
            Defines an object that can be cached.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheable.CommitPropertyChanges">
            <summary>
            Commit the property changes.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheable.AddPropertyChange(CodeFluent.Runtime.Caching.PropertyChange)">
            <summary>
            Adds a property change. If the property change exists, it will be updated.
            </summary>
            <param name="change">The change instance. May not be null.</param>
            <returns>An existing or new property change instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheable.AddListValueChange(CodeFluent.Runtime.Caching.ObjectModelCache,System.String,System.Object)">
            <summary>
            Adds a value change to the list. All values changes are kept in the same property change instance.
            </summary>
            <param name="cache">The cache instance. May not be null.</param>
            <param name="name">The property name.</param>
            <param name="value">The value.</param>
            <returns>
            An existing or new property change instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheable.GetPropertyChanges(CodeFluent.Runtime.Caching.CacheOperation)">
            <summary>
            Gets the list of changes for a specified operation.
            </summary>
            <param name="operation">The operation.</param>
            <returns></returns>
            <value>
            The list of changes.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ICacheable.DomainName">
            <summary>
            Gets the cache domain name.
            </summary>
            <value>
            The domain name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ICacheable.ArePropertyChangesEnabled">
            <summary>
            Gets or sets a value indicating whether property changes are enabled.
            </summary>
            <value>
            <c>true</c> if property changes are enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.BaseCacheable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.BaseCacheable"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.BaseCacheable.#ctor(CodeFluent.Runtime.Caching.IStoreFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.BaseCacheable"/> class.
            </summary>
            <param name="storeFactory">The store factory. May be null if the default factory is to be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.BaseCacheable.AddPropertyChange(CodeFluent.Runtime.Caching.PropertyChange,System.Object)">
            <summary>
            Adds a property change.
            </summary>
            <param name="change">The change instance. May not be null.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.BaseCacheable.CommitPropertyChanges">
            <summary>
            Commits the property changes.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.BaseCacheable.AddPropertyChange(CodeFluent.Runtime.Caching.PropertyChange)">
            <summary>
            Adds a property change.
            </summary>
            <param name="change">The change instance. May not be null.</param>
            <returns>The resulting PropertyChange instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.BaseCacheable.AddListValueChange(CodeFluent.Runtime.Caching.ObjectModelCache,System.String,System.Object)">
            <summary>
            Adds a value change. All values changes are kept in the same property change instance.
            Note in this case, the oldValue vs NewValue have no special meanings.
            </summary>
            <param name="cache">The cache instance. May not be null.</param>
            <param name="name">The property name.</param>
            <param name="value">The value.</param>
            <returns>
            An existing or new property change instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.BaseCacheable.StoreFactory">
            <summary>
            Gets the store factory.
            </summary>
            <value>
            The store factory.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.BaseCacheable.ArePropertyChangesEnabled">
            <summary>
            Gets or sets a value indicating whether property changes are enabled.
            </summary>
            <value>
            <c>true</c> if property changes are enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.BaseCacheable.CacheChangedProperties">
            <summary>
            Gets the cache changed properties.
            </summary>
            <value>
            The cache changed properties.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.BaseCacheable.CacheDomainName">
            <summary>
            Gets the cache domain name.
            </summary>
            <value>
            The cache domain name.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheClear">
            <summary>
            Defines a function used to be notified when the cache is cleared.
            </summary>
            <param name="store">The store.</param>
            <param name="input">The input.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheDomain">
            <summary>
            Defines information for a cache domain.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheDomain.#ctor(CodeFluent.Runtime.Caching.ObjectModelCache,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.CacheDomain"/> class.
            </summary>
            <param name="cache">The cache manager. May not be null.</param>
            <param name="name">The domain name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheDomain.RemoveOldEntries(System.TimeSpan)">
            <summary>
            Removes old entries.
            </summary>
            <param name="timespan">The maximum entry duration.</param>
            <returns>
            The number of removed entries.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheDomain.Clear">
            <summary>
            Clears the entries from this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheDomain.GetMetrics">
            <summary>
            Gets metrics.
            </summary>
            <returns>A collection of values.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheDomain.Name">
            <summary>
            Gets the domain name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheDomain.Cache">
            <summary>
            Gets the cache manager.
            </summary>
            <value>
            The cache.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheDomain.OperatorCallback">
            <summary>
            Gets or sets the operator callback.
            </summary>
            <value>
            The operator callback.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheDomain.MethodIds">
            <summary>
            Gets the methods identifiers.
            </summary>
            <value>
            The methods identifiers.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheDomain.LastEntrySetDateUtc">
            <summary>
            Gets the last entry set date UTC.
            </summary>
            <value>
            The last entry set date UTC.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheDomain.LastEntryRemoveDateUtc">
            <summary>
            Gets the last entry remove date UTC.
            </summary>
            <value>
            The last entry remove date UTC.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheDomain.LastEntryActivityDateUtc">
            <summary>
            Gets the last entry activity date UTC.
            </summary>
            <value>
            The last entry activity date UTC.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheDomain.Stores">
            <summary>
            Gets the methods stores.
            </summary>
            <value>
            The stores.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheDomain.Count">
            <summary>
            Gets the count of entries in the domain.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheEntry">
            <summary>
            Defines an entry in the cache.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheEntry.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.CacheEntry"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheEntry.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheEntry.CreationDateUtc">
            <summary>
            Gets the creation date in UTC coordinates.
            </summary>
            <value>
            The creation date.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheEntry.Key">
            <summary>
            Gets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheEntry.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheEntry.KeyAsArguments">
            <summary>
            Gets the key as a list of arguments.
            </summary>
            <value>
            The key as a list of arguments.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheGetValueFunc`1">
            <summary>
            Gets a value from an input.
            </summary>
            <typeparam name="T">The input type</typeparam>
            <param name="input">The input.</param>
            <returns>
            The value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheContext">
            <summary>
            Defines a serializable cache context.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.#ctor(CodeFluent.Runtime.Caching.ObjectModelCache,CodeFluent.Runtime.Caching.CacheOperation,System.String,CodeFluent.Runtime.Caching.ICacheable)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.CacheContext"/> class.
            </summary>
            <param name="cache">The cache. May not be null.</param>
            <param name="operation">The operation.</param>
            <param name="domainName">The domain name. May not be null.</param>
            <param name="cacheable">A cacheable instance. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.Clone">
            <summary>
            Clones this instance. Only valid if Cacheable is not null.
            </summary>
            <returns>A new instance with the same property changes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.Deserialize(CodeFluent.Runtime.Caching.ObjectModelCache,System.IO.BinaryReader)">
            <summary>
            Deserializes an instance from the specified input stream.
            </summary>
            <param name="cache">The cache. May not be null.</param>
            <param name="reader">The reader. May not be null.</param>
            <returns>An context instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.DeserializePropertyChange(System.IO.BinaryReader)">
            <summary>
            Deserializes an instance of a property change.
            </summary>
            <param name="reader">The reader. May not be null.</param>
            <returns>A property change instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serializes the instance to the specified output stream.
            </summary>
            <param name="writer">The writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.SerializePropertyChange(System.IO.BinaryWriter,CodeFluent.Runtime.Caching.PropertyChange)">
            <summary>
            Serializes a property change to the specified output stream.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="propertyChange">The property change. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.EnsurePropertyChange(System.String,System.Object)">
            <summary>
            Ensures there is property change with the specified name. If it already exists, it will not be overwritten.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="oldValue">The old value. May be null.</param>
            <returns>The existing or new PropertyChange instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.GetOrAddPropertyChange``1(System.String,``0,CodeFluent.Runtime.Caching.CacheGetValueFunc{``0})">
            <summary>
            Gets adds a property change.
            </summary>
            <typeparam name="T">The input type.</typeparam>
            <param name="name">The property name. May not be null.</param>
            <param name="input">The input. May be null.</param>
            <param name="getValueFunc">The function that will get the value. May not be null.</param>
            <returns>
            The existing or new PropertyChange instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.GetListPropertyChange(System.String)">
            <summary>
            Gets a property change that contain a list of values.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <returns>An list of object that can be empty but not null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheContext.GetListPropertyChange(System.String,System.Boolean)">
            <summary>
            Gets a property change that contain a list of values.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors can be thrown.</param>
            <returns>
            An list of object that can be empty but not null.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheContext.Cache">
            <summary>
            Gets the object model cache instance.
            </summary>
            <value>
            The cache instance.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheContext.Operation">
            <summary>
            Gets the operation.
            </summary>
            <value>
            The operation.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheContext.Cacheable">
            <summary>
            Gets the cacheable. This should not be serialized.
            </summary>
            <value>
            The cacheable.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheContext.DomainName">
            <summary>
            Gets the domain name.
            </summary>
            <value>
            The domain name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheContext.PropertyChanges">
            <summary>
            Gets the list of property changes. This should be serialized.
            </summary>
            <value>
            The property changes.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheKey">
            <summary>
            Defines a structured cache key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheKey.KeySeparator">
            <summary>
            The key separator character
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.CacheKey"/> class.
            </summary>
            <param name="methodId">The method identifier.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheKey.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheKey.AddArguments(System.Object[])">
            <summary>
            Adds optional arguments. The arguments must be in exact same order as how the registered method defines it.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheKey.ParseArgumentsKey(System.String)">
            <summary>
            Parses an arguments key.
            </summary>
            <param name="key">The key. May be null.</param>
            <returns>A list of keys.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheKey.ComputeArgumentsKey(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Computes the arguments key.
            </summary>
            <returns>A string representing the arguments key. Must not return null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheKey.GetValueKey(System.Object)">
            <summary>
            Gets the value key.
            </summary>
            <param name="value">The value.</param>
            <returns>The value key.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheKey.MethodId">
            <summary>
            Gets the method identifier.
            </summary>
            <value>
            The method identifier.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheKey.ArgumentsKey">
            <summary>
            Gets the arguments key.
            </summary>
            <value>
            The arguments key.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheMethodStore">
            <summary>
            Represents a list of cached result for a given method.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.#ctor(CodeFluent.Runtime.Caching.ObjectModelCache,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.CacheMethodStore"/> class.
            </summary>
            <param name="cache">The object cache instance. May not be null.</param>
            <param name="methodId">The method identifier.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.RemoveOldEntries(System.TimeSpan)">
            <summary>
            Removes old entries.
            </summary>
            <param name="timespan">The maximum entry duration.</param>
            <returns>The number of removed entries.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.ScavengeDeadSubscribers">
            <summary>
            Scavenges dead subscribers.
            </summary>
            <returns>The number of scavenged subscribers.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.GetMetrics">
            <summary>
            Gets metrics.
            </summary>
            <returns>A collection of values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.ClearMetrics">
            <summary>
            Clears metrics.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.UpdateDomain">
            <summary>
            Updates the domain.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.UnsubscribeFrom(System.Int32)">
            <summary>
            Unsubscribes from a subscription.
            </summary>
            <param name="cookie">The subscription cookie.</param>
            <returns>true if the operation was successful; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.SubscribeTo(System.String,System.Object,CodeFluent.Runtime.Caching.CacheClear)">
            <summary>
            Subscribes to notifications.
            </summary>
            <param name="argumentsKey">A key representing the arguments that were passed to the method. May not be null.</param>
            <param name="target">The target that subscribes to notifications. May be null.</param>
            <param name="clearCallback">The clear callback. May not be null.</param>
            <returns>
            A cookie representing the subscription.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.NotifySubscribers(CodeFluent.Runtime.Caching.IValueStore{CodeFluent.Runtime.Caching.CacheMethodStore.CacheSubscription})">
            <summary>
            Notifies the subscribers.
            </summary>
            <param name="store">The store. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.NotifySubscribers(System.String)">
            <summary>
            Notifies the subscribers of a change of value corresponding to an arguments key.
            </summary>
            <param name="argumentsKey">A key representing the arguments that were passed to the method. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.Set(System.String,System.Object)">
            <summary>
            Sets the specified value of a given key.
            </summary>
            <param name="argumentsKey">A key representing the arguments that were passed to the method. May not be null.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.TryGet(System.String,System.Object@)">
            <summary>
            Try to get a value corresponding to a given key.
            </summary>
            <param name="argumentsKey">A key representing the arguments that were passed to the method. May not be null.</param>
            <param name="value">The value.</param>
            <returns>true if the operation was successful; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.TryRemove(CodeFluent.Runtime.Caching.CacheRemoveEntryFunc)">
            <summary>
            Try to remove the value corresponding to a given function.
            </summary>
            <param name="func">The function. May not be null.</param>
            <returns>
            The number of successful removals.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.TryRemove(System.String)">
            <summary>
            Try to remove the value corresponding to a given key.
            </summary>
            <param name="argumentsKey">A key representing the arguments that were passed to the method. May not be null.</param>
            <returns>true if the operation was successful; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.TryRemove(System.String,System.Object@)">
            <summary>
            Try to remove the value corresponding to a given key.
            </summary>
            <param name="argumentsKey">A key representing the arguments that were passed to the method. May not be null.</param>
            <param name="value">The value.</param>
            <returns>true if the operation was successful; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.Clear">
            <summary>
            Clears the entries from this instance.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.MethodId">
            <summary>
            Gets the method identifier.
            </summary>
            <value>
            The method identifier.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.Domain">
            <summary>
            Gets the domain. May be null.
            </summary>
            <value>
            The domain.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.Cache">
            <summary>
            Gets the cache manager.
            </summary>
            <value>
            The cache.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.LastEntrySetDateUtc">
            <summary>
            Gets the last entry set date UTC.
            </summary>
            <value>
            The last entry set date UTC.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.LastEntryRemoveDateUtc">
            <summary>
            Gets the last entry remove date UTC.
            </summary>
            <value>
            The last entry remove date UTC.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.Count">
            <summary>
            Gets the count of entries in the cache.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.SubscriptionsCount">
            <summary>
            Gets the count of subscriptions.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.SubscribersCount">
            <summary>
            Gets the count of subscribers.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.Entries">
            <summary>
            Enumerates the entries.
            </summary>
            <value>
            The entris.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheMethodStore.CacheSubscription">
            <summary>
            Defines a cache subscription.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.CacheSubscription.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.CacheSubscription.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.CacheSubscription.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheMethodStore.CacheSubscription.Equals(CodeFluent.Runtime.Caching.CacheMethodStore.CacheSubscription)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.CacheSubscription.Target">
            <summary>
            The target object reference.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheMethodStore.CacheSubscription.ClearCallback">
            <summary>
            The clear callback.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheOperation">
            <summary>
            Defines operation that are conducted to the object model cache.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheOperation.Unspecified">
            <summary>
            The operation is not specified.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheOperation.Save">
            <summary>
            The save operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheOperation.Delete">
            <summary>
            The delete operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheOperation.DomainUpdate">
            <summary>
            A domain has been updated.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheOperatorCallback">
            <summary>
            Defines a function used to call an operator on a cache operation.
            </summary>
            <param name="context">The context. May not be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheRemoveEntryFunc">
            <summary>
            Determine if an entry should be removed from the store.
            </summary>
            <param name="store">The store. May not be null.</param>
            <param name="entry">The entry. May not be null.</param>
            <returns>
            true if the entry should be removed; false otherwise.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheSerializer">
            <summary>
            Defines a class to serialize and deserialize values.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheSerializer.#ctor(CodeFluent.Runtime.Caching.ObjectModelCache)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.CacheSerializer"/> class.
            </summary>
            <param name="cache">The cache. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheSerializer.Serialize(System.IO.BinaryWriter,System.Object)">
            <summary>
            Serializes the specified value to an output stream.
            The value may not be stored as the same type as the original one, but always with a compatible one.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="value">The value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheSerializer.Deserialize``1(System.IO.BinaryReader,``0)">
            <summary>
            Deserializes a value from an input stream.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="reader">The reader. May not be null.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>
            A deserialized or default value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheSerializer.Deserialize(System.IO.BinaryReader,System.Object)">
            <summary>
            Deserializes a value from an input stream.
            </summary>
            <param name="reader">The reader. May not be null.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>A deserialized value or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheSerializer.TryDeserialize``1(System.IO.BinaryReader,``0@)">
            <summary>
            Deserializes a value from an input stream.
            </summary>
            <typeparam name="T">The expected value type.</typeparam>
            <param name="reader">The reader. May not be null.</param>
            <param name="value">The value.</param>
            <returns>
            true if a value was sucessfully read; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheSerializer.TryDeserialize(System.IO.BinaryReader,System.Object@)">
            <summary>
            Deserializes a value from an input stream.
            </summary>
            <param name="reader">The reader. May not be null.</param>
            <param name="value">The value.</param>
            <returns>
            true if a value was sucessfully read; false otherwise.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheSerializer.Cache">
            <summary>
            Gets the cache instance.
            </summary>
            <value>
            The cache.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheSerializerCode">
            <summary>
            Defines a code for cache value serialization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Invalid">
            <summary>
            Represent an invalid value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Null">
            <summary>
            The null value;
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.StringEmpty">
            <summary>
            The empty string.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.String">
            <summary>
            A string
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Char">
            <summary>
            A Char
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.ByteArrayEmpty">
            <summary>
            An empty byte array
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.ByteArray">
            <summary>
            A byte array
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.GuidEmpty">
            <summary>
            The empty guid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Guid">
            <summary>
            A guid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.False">
            <summary>
            The false boolean value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.True">
            <summary>
            The true boolean value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Number1">
            <summary>
            Int32 value 1.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Number2">
            <summary>
            Int32 value 2.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Number3">
            <summary>
            Int32 value 3.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Number4">
            <summary>
            Int32 value 4.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Number5">
            <summary>
            Int32 value 5.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Number6">
            <summary>
            Int32 value 6.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Number7">
            <summary>
            Int32 value 7.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Number8">
            <summary>
            Int32 value 8.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Number0">
            <summary>
            Int32 value 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.NumberMinus1">
            <summary>
            Int32 value -1.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.NumberMinus2">
            <summary>
            Int32 value -2.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.NumberMinus3">
            <summary>
            Int32 value -3.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.NumberMinus4">
            <summary>
            Int32 value -4.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.NumberMinus5">
            <summary>
            Int32 value -5.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.NumberMinus6">
            <summary>
            Int32 value -6.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.NumberMinus7">
            <summary>
            Int32 value -7.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.NumberMinus8">
            <summary>
            Int32 value -8.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Int32Size8">
            <summary>
            An Int32 as an SByte.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Int32Size16">
            <summary>
            An Int32 as an Int16.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Int32">
            <summary>
            An Int32.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Int64">
            <summary>
            An Int64.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.DoubleZero">
            <summary>
            The Double zero value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.DoubleNaN">
            <summary>
            The Double NaN value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Double">
            <summary>
            A Double.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.SingleZero">
            <summary>
            The Single zero value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.SingleNaN">
            <summary>
            The Single NaN value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Single">
            <summary>
            A single.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.DecimalZero">
            <summary>
            The Decimal zero value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Decimal">
            <summary>
            A Decimal.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.DateTimeMinValue">
            <summary>
            The DateTime min value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.DateTimeDate">
            <summary>
            A DateTime without a time of day.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.DateTime">
            <summary>
            A DateTime.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.TimeSpanZero">
            <summary>
            The TimeSpan zero value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.TimeSpan">
            <summary>
            A TimeSpan.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.DateTimeOffsetMinValue">
            <summary>
            The DateTimeOffset zero value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.DateTimeOffset">
            <summary>
            A DateTimeOffset.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.CultureInfoInvariant">
            <summary>
            The CultureInfo invariant value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.CultureInfo">
            <summary>
            A CultureInfo.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Enumerable">
            <summary>
            An enumerable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.EnumerableSeparator">
            <summary>
            The enumerable separator. Don't use.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.EnumerableEnd">
            <summary>
            The enumerable end. Don't use.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.Array">
            <summary>
            An array.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.EntityKey">
            <summary>
            A CodeFluent entity key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheSerializerCode.CacheSerializable">
            <summary>
            An object that implements the ICacheSerializable interface.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.IStoreFactory2">
            <summary>
            Defines the interface that a store factory must implement.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IStoreFactory2.CreateKeyValueStore``2(System.Int32,System.String,System.Object)">
            <summary>
            Creates a key value store.
            </summary>
            <typeparam name="TKey">The type of keys in the store.</typeparam>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <param name="methodId">The method identifier. May be -1.</param>
            <param name="domainName">The domain name. May be null.</param>
            <param name="context">The context. May be null.</param>
            <returns>
            An instance of a key value store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IStoreFactory2.CreateValueStore``1(System.Int32,System.String,System.Object)">
            <summary>
            Creates a value store.
            </summary>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <param name="methodId">The method identifier. May be -1.</param>
            <param name="domainName">The domain name. May be null.</param>
            <param name="context">The context. May be null.</param>
            <returns>
            An instance of a key value store.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.EntityCacheable">
            <summary>
            Defines a base class that implements the ICacheable interface for CodeFluent generared entity classes.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EntityCacheable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.EntityCacheable"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EntityCacheable.#ctor(CodeFluent.Runtime.Caching.IStoreFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.EntityCacheable"/> class.
            </summary>
            <param name="storeFactory">The store factory. May be null if the default factory is to be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EntityCacheable.AddPropertyChange(CodeFluent.Runtime.Caching.PropertyChange)">
            <summary>
            Adds a property change.
            </summary>
            <param name="change">The change instance. May not be null.</param>
            <returns>
            The resulting PropertyChange instance or null.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.ICacheSerializable">
            <summary>
            Defines an interface that can be implemented by object that need to be serialized in a custom way.
            The object must have a public parameterless constructor to be deserialized.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheSerializable.Deserialize(System.IO.BinaryReader)">
            <summary>
            Deserializes a value from an input stream.
            </summary>
            <param name="reader">The reader. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheSerializable.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serializes the specified value to an output stream.
            </summary>
            <param name="writer">The writer. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ICacheSerializable.TypeName">
            <summary>
            Gets type name that will be used for deserialization.
            If null or empty, the assembly fully qualified name will be used.
            </summary>
            <value>
            The type name.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.PropertyChange">
            <summary>
            Defines a property change.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.PropertyChange.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.PropertyChange"/> class.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="oldValue">The old value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.PropertyChange.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.PropertyChange"/> class.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="oldValue">The old value. May be null.</param>
            <param name="newValue">The new value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.PropertyChange.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.PropertyChange"/> class.
            If this constructor is used, the property change will be in list mode, meaning old and new values have no special meaning.
            </summary>
            <param name="name">The property name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.PropertyChange.GetTypedOldValue``1(``0)">
            <summary>
            Gets the OldValue as a typed object.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="defaultValue">The default value if the OldValue cannot be converteed.</param>
            <returns>The converted OldValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.PropertyChange.GetTypedNewValue``1(``0)">
            <summary>
            Gets the NewValue as a typed object.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="defaultValue">The default value if the NewValue cannot be converteed.</param>
            <returns>The converted NewValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.PropertyChange.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.PropertyChange.ToText(System.Object)">
            <summary>
            A utility method to trace an object depending on its type.
            </summary>
            <param name="obj">The object. May be null.</param>
            <returns>A string representing the object.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.PropertyChange.Name">
            <summary>
            Gets the property name.
            </summary>
            <value>
            The property name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.PropertyChange.IsInListMode">
            <summary>
            Gets a value indicating whether this instance is in list mode, meaning old and new values have no special meaning.
            </summary>
            <value>
            <c>true</c> if this instance is in list mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.PropertyChange.OldValue">
            <summary>
            Gets or sets the old value.
            </summary>
            <value>
            The old value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.PropertyChange.NewValue">
            <summary>
            Gets or set the new value.
            </summary>
            <value>
            The new value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.PropertyChange.Values">
            <summary>
            Gets the values list for property changes that need a list instead of an old and a new value.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.PropertyChange.HasValueChanged">
            <summary>
            Gets a value indicating whether the property value has changed.
            </summary>
            <value>
            <c>true</c> if this the property value has changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.PropertyChange.HasNewValue">
            <summary>
            Gets a value indicating whether the NewValue member is valid.
            </summary>
            <value>
            true if the NewValue member is valid; false otherwise.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.ListValueStore`1">
            <summary>
            Defines a thread-safe value store based on a list.
            </summary>
            <typeparam name="T">The type of the values.</typeparam>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.IValueStore`1">
            <summary>
            Defines the interface that a thread-safe value store must implement.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IValueStore`1.Add(`0)">
            <summary>
            Adds the specified value to the store..
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IValueStore`1.ToArray(System.Boolean)">
            <summary>
            Realizes the list of values into an array.
            </summary>
            <param name="clear">if set to <c>true</c> clear the store in an atomic way.</param>
            <returns>An array of the values in the store.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IValueStore`1.Clear">
            <summary>
            Clears the values from the store.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IValueStore`1.Remove(`0)">
            <summary>
            Removes the specified value from the store.
            </summary>
            <param name="value">The value.</param>
            <returns>true if something was removed; false otherwise.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.IValueStore`1.Count">
            <summary>
            Gets the number of values contained in the store.
            </summary>
            <value>
            The number of values contained in the store.
            </value>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ListValueStore`1.Clear">
            <summary>
            Clears the store.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ListValueStore`1.ToArray(System.Boolean)">
            <summary>
            Realizes the list of values into an array.
            </summary>
            <param name="clear">if set to <c>true</c> clear the store in an atomic way.</param>
            <returns>
            An array of the values in the store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ListValueStore`1.Add(`0)">
            <summary>
            Adds the specified value to the store..
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ListValueStore`1.Remove(`0)">
            <summary>
            Removes the specified value from the store.
            </summary>
            <param name="value">The value.</param>
            <returns>
            true if something was removed; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ListValueStore`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ListValueStore`1.SyncObject">
            <summary>
            Gets the lockable object.
            </summary>
            <value>
            The lockable object.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ListValueStore`1.BaseObject">
            <summary>
            Gets the base object this store relies on.
            </summary>
            <value>
            The base object.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ListValueStore`1.Count">
            <summary>
            Gets the number of values contained in the store.
            </summary>
            <value>
            The number of values contained in the store.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.DefaultStoreFactory">
            <summary>
            Defines the default store factory.
            </summary>
            <seealso cref="T:CodeFluent.Runtime.Caching.IStoreFactory"/>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.IStoreFactory">
            <summary>
            Defines the interface that a store factory must implement.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IStoreFactory.CreateKeyValueStore``2">
            <summary>
            Creates a key value store.
            </summary>
            <typeparam name="TKey">The type of keys in the store.</typeparam>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <returns>An instance of a key value store.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IStoreFactory.CreateValueStore``1">
            <summary>
            Creates a value store.
            </summary>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <returns>An instance of a key value store.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DefaultStoreFactory.CreateKeyValueStore``2">
            <summary>
            Creates a key value store.
            </summary>
            <typeparam name="TKey">The type of keys in the store.</typeparam>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <returns>
            An instance of a key value store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DefaultStoreFactory.CreateValueStore``1">
            <summary>
            Creates a value store.
            </summary>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <returns>
            An instance of a key value store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DefaultStoreFactory.CreateKeyValueStore``2(System.Int32,System.String,System.Object)">
            <summary>
            Creates a key value store.
            </summary>
            <typeparam name="TKey">The type of keys in the store.</typeparam>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <param name="methodId">The method identifier. May be -1.</param>
            <param name="domainName">The domain name. May be null.</param>
            <param name="context">The context. May be null.</param>
            <returns>
            An instance of a key value store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DefaultStoreFactory.CreateValueStore``1(System.Int32,System.String,System.Object)">
            <summary>
            Creates the value store.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="methodId">The method identifier. May be -1.</param>
            <param name="domainName">The domain name. May be null.</param>
            <param name="context">The context.</param>
            <returns>
            An instance of a key value store.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.LocaleObjectModelCache">
            <summary>
            Represents a locale-sensitive CodeFluent compatible object model cache manager
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.ObjectModelCache">
            <summary>
            Represents a CodeFluent compatible object model cache manager
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.ObjectModelCache"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.#ctor(CodeFluent.Runtime.Caching.IStoreFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.ObjectModelCache"/> class.
            </summary>
            <param name="storeFactory">The store factory.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.CreateKeyValueStore``2(CodeFluent.Runtime.Caching.IStoreFactory,System.Int32,System.String,System.Object)">
            <summary>
            Creates a key value store.
            </summary>
            <typeparam name="TKey">The type of keys in the store.</typeparam>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <param name="factory">The input factory. May not be null.</param>
            <param name="context">The context. May be null.</param>
            <param name="methodId">The method identifier. May be null.</param>
            <param name="domainName">The domain name. May be null.</param>
            <returns>
            An instance of a key value store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.CreateValueStore``1(CodeFluent.Runtime.Caching.IStoreFactory,System.Int32,System.String,System.Object)">
            <summary>
            Creates a value store.
            </summary>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <param name="factory">The input factory. May not be null.</param>
            <param name="methodId">The method identifier. May be null.</param>
            <param name="domainName">The domain name. May be null.</param>
            <param name="context">The context. May be null.</param>
            <returns>
            An instance of a value store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.GetEntries">
            <summary>
            Gets the entries.
            </summary>
            <returns>A list of cache entries.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.ScavengeDeadSubscribers">
            <summary>
            Scavenges dead subscribers.
            </summary>
            <returns>The number of scavenged subscribers.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.GetDomain(System.String)">
            <summary>
            Gets a domain using a specified name.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>A domain instance or null if it does not exist.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.GetDomain(System.String,System.Boolean)">
            <summary>
            Gets a domain using a specified name.
            </summary>
            <param name="name">The name. May not be null.</param>
            <param name="addIfNotFound">if set to <c>true</c>, the store will be added if it was not found.</param>
            <returns>A domain instance or null if it does not exist.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.GetLastEntrySetDateUtc(System.String)">
            <summary>
            Gets the last entry set date in UTC coordinates.
            </summary>
            <param name="domainName">The domain name. May not be null.</param>
            <returns>
            The set date.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.GetLastEntryRemoveDateUtc(System.String)">
            <summary>
            Gets the last entry remove date in UTC coordinates.
            </summary>
            <param name="domainName">The domain name. May not be null.</param>
            <returns>
            The remove date.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.GetLastEntryActivityDateUtc(System.String)">
            <summary>
            Gets the last entry activity date in UTC coordinates.
            </summary>
            <param name="domainName">The domain name. May not be null.</param>
            <returns>
            The activity date.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.RemoveOldEntries(System.TimeSpan)">
            <summary>
            Removes old entries.
            </summary>
            <param name="timespan">The maximum entry duration.</param>
            <returns>The number of removed entries.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.RemoveOldEntries(System.TimeSpan,System.String)">
            <summary>
            Removes old entries for a given domain. This will use the registered domain methods.
            </summary>
            <param name="timespan">The maximum entry duration.</param>
            <param name="domainName">The domain name. May not be null.</param>
            <returns>
            The number of removed entries.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.RegisterCustomMethods">
            <summary>
            Registers custom methods.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.ClearMethod(System.Enum)">
            <summary>
            Clears all entries related to one method.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.ClearMethod(System.Int32)">
            <summary>
            Clears all entries related to one method.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Clear">
            <summary>
            Clears all cache entries from all methods.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.ClearMetrics">
            <summary>
            Clears metrics for all methods.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Get``1(CodeFluent.Runtime.Caching.CacheKey,``0)">
            <summary>
            Gets the value corresponding to a given key.
            </summary>
            <typeparam name="T">The expected target type.</typeparam>
            <param name="key">The key. May not be null.</param>
            <param name="defaultValue">The default value to use if it was not found.</param>
            <returns>
            The value or null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Get``1(CodeFluent.Runtime.Caching.CacheKey,``0,CodeFluent.Runtime.Caching.CacheReferenceTarget)">
            <summary>
            Gets the value corresponding to a given key.
            </summary>
            <typeparam name="T">The expected target type.</typeparam>
            <param name="key">The key. May not be null.</param>
            <param name="defaultValue">The default value to use if it was not found.</param>
            <param name="target">The subscriber target. May be null.</param>
            <returns>
            The value or null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Get(CodeFluent.Runtime.Caching.CacheKey,System.Object)">
            <summary>
            Gets the value corresponding to a given key.
            </summary>
            <param name="key">The key. May not be null.</param>
            <param name="defaultValue">The default value to use if it was not found.</param>
            <returns>
            The value or null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Get(CodeFluent.Runtime.Caching.CacheKey,System.Object,CodeFluent.Runtime.Caching.CacheReferenceTarget)">
            <summary>
            Gets the value corresponding to a given key.
            </summary>
            <param name="key">The key. May not be null.</param>
            <param name="defaultValue">The default value to use if it was not found.</param>
            <param name="target">The subscriber target. May be null.</param>
            <returns>
            The value or null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryGet``1(CodeFluent.Runtime.Caching.CacheKey,``0@)">
            <summary>
            Try to get the value corresponding to a given key.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <param name="key">The key. May not be null.</param>
            <param name="value">The value.</param>
            <returns>
            true if the value was found; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryGet(CodeFluent.Runtime.Caching.CacheKey,System.Object@)">
            <summary>
            Try to get the value corresponding to a given key.
            </summary>
            <param name="key">The key. May not be null.</param>
            <param name="value">The value.</param>
            <returns>
            true if the value was found; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryRemove(CodeFluent.Runtime.Caching.CacheKey)">
            <summary>
            Try to remove the value corresponding to a given key.
            </summary>
            <param name="key">The key. May not be null.</param>
            <returns>
            true if the operation was successful; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryRemove(CodeFluent.Runtime.Caching.CacheKey,System.Object@)">
            <summary>
            Try to remove the value corresponding to a given key.
            </summary>
            <param name="key">The key. May not be null.</param>
            <param name="value">The value.</param>
            <returns>true if the operation was successful; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryRemovePaged(System.Enum,System.Object[])">
            <summary>
            Try to remove the value corresponding to a given paged collection method and arguments, with index, size and options arguments automatically added.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="arguments">The initial arguments.</param>
            <returns>
            true if the operation was successful; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryRemovePaged(System.Int32,System.Object[])">
            <summary>
            Try to remove the value corresponding to a given paged collection method and arguments, with index, size and options arguments automatically added.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="arguments">The initial arguments.</param>
            <returns>
            true if the operation was successful; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryRemove(System.Enum,System.Object[])">
            <summary>
            Try to remove the value corresponding to a given method and arguments.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="arguments">The arguments.</param>
            <returns>
            true if the operation was successful; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryRemove(System.Int32,System.Object[])">
            <summary>
            Try to remove the value corresponding to a given method and arguments.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="arguments">The arguments.</param>
            <returns>
            true if the operation was successful; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryRemove(System.Enum,CodeFluent.Runtime.Caching.CacheRemoveEntryFunc)">
            <summary>
            Try to remove the values matching a specified function.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="func">The function. May not be null;</param>
            <returns>
            The number of successful removals.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryRemove(System.Int32,CodeFluent.Runtime.Caching.CacheRemoveEntryFunc)">
            <summary>
            Try to remove the values matching a specified function.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="func">The function. May not be null;</param>
            <returns>
            The number of successful removals.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Set(CodeFluent.Runtime.Caching.CacheKey,System.Object)">
            <summary>
            Puts a value in the cache.
            </summary>
            <param name="key">The key. May not be null.</param>
            <param name="value">The value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Set(CodeFluent.Runtime.Caching.CacheKey,System.Object,CodeFluent.Runtime.Caching.CacheReferenceTarget)">
            <summary>
            Puts a value in the cache.
            </summary>
            <param name="key">The key. May not be null.</param>
            <param name="value">The value. May be null.</param>
            <param name="target">The subscriber target. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.RegisterDomainMethods(System.String,System.Enum[])">
            <summary>
            Registers domain methods.
            </summary>
            <param name="domainName">The domain name. May not be null.</param>
            <param name="methodIds">The method ids.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.RegisterDomainMethods(System.String,System.Int32[])">
            <summary>
            Registers domain methods.
            </summary>
            <param name="domainName">The domain name. May not be null.</param>
            <param name="methodIds">The method ids.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.RegisterDomainOperator(System.String,CodeFluent.Runtime.Caching.CacheOperatorCallback)">
            <summary>
            Registers a domain operator.
            </summary>
            <param name="domainName">The domain name. May not be null.</param>
            <param name="callback">The callback. May not be null.</param>
            <returns>The final callback instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Operate(CodeFluent.Runtime.Caching.CacheOperation,CodeFluent.Runtime.Caching.ICacheable)">
            <summary>
            Executes the specified operation.
            </summary>
            <param name="operation">The operation.</param>
            <param name="cacheable">The cacheable object. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Operate(CodeFluent.Runtime.Caching.CacheContext)">
            <summary>
            Operates the specified operation.
            </summary>
            <param name="context">The context. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.OnOperated(CodeFluent.Runtime.Caching.CacheContext)">
            <summary>
            Called when operation callback has occurred.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Save(System.Object)">
            <summary>
            Updates the cache for a Save operation.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.Delete(System.Object)">
            <summary>
            Updates the cache for a Delete operation.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.BuildCacheKey(System.Enum,System.Object[])">
            <summary>
            Builds a cache key for a given method and its parameters.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="arguments">The arguments list.</param>
            <returns>
            An instance of a key.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.BuildCacheKey(System.Int32,System.Object[])">
            <summary>
            Builds a cache key for a given method and its parameters.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="arguments">The arguments list.</param>
            <returns>
            An instance of a key.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.GetMethodStore(System.Int32)">
            <summary>
            Gets a method store.
            </summary>
            <param name="id">The method identifier.</param>
            <returns>
            A method instance of null if not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.GetMethodStore(System.Int32,System.Boolean)">
            <summary>
            Gets a method store.
            </summary>
            <param name="id">The method identifier.</param>
            <param name="addIfNotFound">if set to <c>true</c>, the store will be added if it was not found.</param>
            <returns>
            A method instance of null if not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TryDeserialize(System.IO.BinaryReader,System.Object@)">
            <summary>
            Deserializes a value from an input stream.
            </summary>
            <param name="reader">The reader. May not be null.</param>
            <param name="value">The value.</param>
            <returns>
            true if a value was sucessfully read; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.TrySerialize(System.IO.BinaryWriter,System.Object)">
            <summary>
            Serializes the specified value to an output stream.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="value">The value. May be null.</param>
            <returns>
            true if a value was sucessfully written; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.CreateDomain(System.String)">
            <summary>
            Creates a domain instance.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>
            A domain instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.CreateMethodStore(System.Int32)">
            <summary>
            Creates a method store instance.
            </summary>
            <param name="id">The identifier.</param>
            <returns>
            A method store instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.CreateKey(System.Int32)">
            <summary>
            Creates a cache key instance.
            </summary>
            <param name="methodId">The method identifier.</param>
            <returns>
            A cache key instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.CreateSerializer">
            <summary>
            Creates a cache serializer.
            </summary>
            <returns>
            A serializer instance
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.CreatePropertyChange(System.String,System.Object)">
            <summary>
            Creates a property change instance.
            </summary>
            <param name="name">The name. May not be null.</param>
            <param name="oldValue">The old value. May be null.</param>
            <returns>
            A property change instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.CreatePropertyChange(System.String)">
            <summary>
            Creates a property change instance in list mode.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>
            A property change instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.CreateContext(CodeFluent.Runtime.Caching.CacheOperation,System.String,CodeFluent.Runtime.Caching.ICacheable)">
            <summary>
            Creates a cache context instance.
            </summary>
            <param name="operation">The operation.</param>
            <param name="domainName">The domain name. May not be null.</param>
            <param name="cacheable">The cacheable instance. May be null.</param>
            <returns>
            A cache context instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.UnsubscribeFrom(System.Int32,System.Int32)">
            <summary>
            Unsubscribes from notifications from a specific method.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="cookie">The cookie.</param>
            <returns>
            true if the operation was successful; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.UnsubscribeFrom(CodeFluent.Runtime.Caching.CacheKey,System.Int32)">
            <summary>
            Unsubscribes from notifications from a specific method.
            </summary>
            <param name="referencedKey">The referenced key.</param>
            <param name="cookie">The cookie.</param>
            <returns>
            true if the operation was successful; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.SubscribeTo(CodeFluent.Runtime.Caching.CacheKey,CodeFluent.Runtime.Caching.CacheClear)">
            <summary>
            Subscribes to static notifications for a given method.
            </summary>
            <param name="referencedKey">The referenced key.</param>
            <param name="clearCallback">The clear callback function. If null, no subscription is made.</param>
            <returns>The cookie representing the notification or -1 if the subscription failed.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCache.SubscribeTo(CodeFluent.Runtime.Caching.CacheKey,CodeFluent.Runtime.Caching.CacheClear,System.Object)">
            <summary>
            Subscribes to notifications for a given method.
            </summary>
            <param name="referencedKey">The referenced key.</param>
            <param name="target">The subscriber target.</param>
            <param name="clearCallback">The clear callback function. If null, no subscription is made.</param>
            <returns>The cookie representing the notification or -1 if the subscription failed.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.SyncObject">
            <summary>
            Gets the lockable object.
            </summary>
            <value>
            The lockable object.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.StoreFactory">
            <summary>
            Gets the store factory.
            </summary>
            <value>
            The store factory.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the cache is enabled.
            </summary>
            <value>
            <c>true</c> if the cache is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.Serializer">
            <summary>
            Gets the serializer.
            </summary>
            <value>
            The serializer.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.EntriesCount">
            <summary>
            Gets the entries count.
            </summary>
            <value>
            The entries count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.MaxMethodIds">
            <summary>
            Gets the maximum method id.
            </summary>
            <value>
            The maximum method id.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.Domains">
            <summary>
            Gets the list of domains.
            </summary>
            <value>
            The domains.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.MethodStores">
            <summary>
            Gets the current method stores.
            </summary>
            <value>
            The methods.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.MethodStoreCount">
            <summary>
            Gets the methods stores count.
            </summary>
            <value>
            The methods count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCache.MethodCount">
            <summary>
            Gets the methods count.
            </summary>
            <value>
            The methods count.
            </value>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.LocaleObjectModelCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.LocaleObjectModelCache"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.LocaleObjectModelCache.#ctor(CodeFluent.Runtime.Caching.IStoreFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.LocaleObjectModelCache"/> class.
            </summary>
            <param name="storeFactory">The store factory.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.LocaleObjectModelCache.BuildCacheKey(System.Int32,System.Object[])">
            <summary>
            Builds a cache key for a given method and its parameters.
            </summary>
            <param name="methodId">The method identifier.</param>
            <param name="arguments">The arguments list.</param>
            <returns>
            An instance of a key.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2">
            <summary>
            Defines a thread-safe key value store based on a dictionary.
            </summary>
            <typeparam name="TKey">The type of keys in the store.</typeparam>
            <typeparam name="TValue">The type of values in the store.</typeparam>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.IKeyValueStore`2">
            <summary>
            Defines the interface that a thread-safe key value store must implement.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IKeyValueStore`2.AddOrUpdate(`0,`1,CodeFluent.Runtime.Caching.UpdateValueFunc{`0,`1})">
            <summary>
            Adds or update a value in the store.
            </summary>
            <param name="key">The store key. May not be null.</param>
            <param name="value">The value.</param>
            <param name="updateValueFactory">The update value factory.</param>
            <returns>
            The value that was put in the store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IKeyValueStore`2.TryGetValue(`0,`1@)">
            <summary>
            Try to the get a value from the store.
            </summary>
            <param name="key">The store key. May not be null.</param>
            <param name="value">The value.</param>
            <returns>
            true if the store contained a value; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IKeyValueStore`2.TryRemove(`0,`1@)">
            <summary>
            Try to remove a value from the store.
            </summary>
            <param name="key">The store key. May not be null.</param>
            <param name="value">The value that was in the store.</param>
            <returns>
            true if the store contained a value and the value was removed; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IKeyValueStore`2.TryRemove(`0)">
            <summary>
            Try to remove a value from the store.
            </summary>
            <param name="key">The store key. May not be null.</param>
            <returns>
            true if the store contained a value and the value was removed; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IKeyValueStore`2.ToArray(System.Boolean)">
            <summary>
            Realizes the list of pairs into an array.
            </summary>
            <param name="clear">if set to <c>true</c> clear the store in an atomic way.</param>
            <returns>
            An array of the pairs in the store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IKeyValueStore`2.ContainsKey(`0)">
            <summary>
            Determines whether the store contains the specified key.
            </summary>
            <param name="key">The key. May not be null.</param>
            <returns>
            true if the store contains the specified key; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.IKeyValueStore`2.Clear">
            <summary>
            Removes all pairs from the store..
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.IKeyValueStore`2.Count">
            <summary>
            Gets the number of pairs contained in the store.
            </summary>
            <value>
            The number of pairs contained in the store.
            </value>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.AddOrUpdate(`0,`1,CodeFluent.Runtime.Caching.UpdateValueFunc{`0,`1})">
            <summary>
            Adds or update a value in the store.
            </summary>
            <param name="key">The store key. May not be null.</param>
            <param name="value">The value.</param>
            <param name="updateValueFactory">The update value factory.</param>
            <returns>
            The value that was put in the store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.TryGetValue(`0,`1@)">
            <summary>
            Try to the get a value from the store.
            </summary>
            <param name="key">The store key. May not be null.</param>
            <param name="value">The value.</param>
            <returns>
            true if the store contained a value; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.TryRemove(`0)">
            <summary>
            Try to remove a value from the store.
            </summary>
            <param name="key">The store key. May not be null.</param>
            <returns>
            true if the store contained a value and the value was removed; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.TryRemove(`0,`1@)">
            <summary>
            Try to remove a value from the store.
            </summary>
            <param name="key">The store key. May not be null.</param>
            <param name="value">The value that was in the store.</param>
            <returns>
            true if the store contained a value and the value was removed; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.ToArray(System.Boolean)">
            <summary>
            Realizes the list of pairs into an array.
            </summary>
            <param name="clear">if set to <c>true</c> clear the store in an atomic way.</param>
            <returns>
            An array of the pairs in the store.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.ContainsKey(`0)">
            <summary>
            Determines whether the store contains the specified key.
            </summary>
            <param name="key">The key. May not be null.</param>
            <returns>
            true if the store contains the specified key; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.SyncObject">
            <summary>
            Gets the lockable object.
            </summary>
            <value>
            The lockable object.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.BaseObject">
            <summary>
            Gets the base object this store relies on.
            </summary>
            <value>
            The base object.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.DictionaryKeyValueStore`2.Count">
            <summary>
            Gets the number pairs contained in the store.
            </summary>
            <value>
            The number pairs contained in the store.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager">
            <summary>
            Represents a CodeFluent compatible cache manager built on top of Enterprise Library Cache Manager.
            Supports EntLib versions 2.x and 3.x for the .NET Framework 2.0.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.ICacheManager">
            <summary>
            Defines the interface that a CodeFluent cache manager must implement.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheManager.GetCount(System.String)">
            <summary>
            Gets the number of items in the cache for a specific domain.
            </summary>
            <param name="domain">The domain name.</param>
            <returns>The number of items.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheManager.Add(System.String,System.String,System.Object,System.Collections.IDictionary)">
            <summary>
            Adds an entry to the cache, in the specified domain.
            </summary>
            <param name="domain">The cache entry domain. May not be null.</param>
            <param name="key">The cache entry key.  May not be null.</param>
            <param name="value">The cache entry value.</param>
            <param name="context">The caching context. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheManager.Get(System.String,System.String)">
            <summary>
            Gets a cached value from the specified domain.
            </summary>
            <param name="domain">The domain. May not be null.</param>
            <param name="key">The cache entry key. May not be null.</param>
            <returns>A cache value</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheManager.Remove(System.String,System.String)">
            <summary>
            Removes a cached value from the cache, from the specified domain.
            </summary>
            <param name="domain">The domain. May not be null.</param>
            <param name="key">The cache entry key. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheManager.Clear(System.String)">
            <summary>
            Clears the specified domain cache entries.
            </summary>
            <param name="domain">The domain. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ICacheManager.Clear">
            <summary>
            Clears all cache entries from all domains.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ICacheManager.Count">
            <summary>
             Gets the number of items in the cache
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.AssemblyName">
            <summary>
            Defines the name of the EntLib caching assembly.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.BaseNamespace">
            <summary>
            Defines the base namespace of the EntLib caching classes.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.GetCount(System.String)">
            <summary>
            Gets the count of items for a given domain.
            </summary>
            <param name="domain">The domain name. May not be null.</param>
            <returns>The count.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.Add(System.String,System.String,System.Object,System.Collections.IDictionary)">
            <summary>
            Adds an entry to the cache, in the specified domain.
            </summary>
            <param name="domain">The cache entry domain. May not be null.</param>
            <param name="key">The cache entry key.  May not be null.</param>
            <param name="value">The cache entry value.</param>
            <param name="context">The caching context. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.Get(System.String,System.String)">
            <summary>
            Gets a cached value from the specified domain.
            </summary>
            <param name="domain">The domain. May not be null.</param>
            <param name="key">The cache entry key. May not be null.</param>
            <returns>A cache value</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.Remove(System.String,System.String)">
            <summary>
            Removes a cached value from the cache, from the specified domain.
            </summary>
            <param name="domain">The domain. May not be null.</param>
            <param name="key">The cache entry key. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.Clear(System.String)">
            <summary>
            Clears the specified domain cache entries.
            </summary>
            <param name="domain">The domain. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.Clear">
            <summary>
            Clears all cache entries from all domains.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.EnterpriseLibraryCacheManager.Count">
            <summary>
            Gets the count of items in the cache.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.LocaleCacheManager">
            <summary>
            Represents a CodeFluent compatible cache manager built on top of ASP.NET http runtime cache.
            Supports the localization pattern.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.SimpleCacheManager">
            <summary>
            Represents a CodeFluent compatible cache manager built on top of ASP.NET http runtime cache.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.SimpleCacheManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.SimpleCacheManager"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.SimpleCacheManager.BuildCacheKey(System.Object[])">
            <summary>
            Builds the cache key from a list of parameters.
            This method is generic, useable for any type of caching mecanism.
            ICodeFluentEntity and IKeyable parameters are treated specifically.
            </summary>
            <param name="parameters">The parameters. May not be null nor empty.</param>
            <returns>A composite key representing parameters. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.SimpleCacheManager.GetCount(System.String)">
            <summary>
            Gets the number of items in the cache for a specific domain.
            </summary>
            <param name="domain">The domain name.</param>
            <returns>The number of items.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.SimpleCacheManager.Add(System.String,System.String,System.Object,System.Collections.IDictionary)">
            <summary>
            Adds an entry to the cache, in the specified domain.
            </summary>
            <param name="domain">The cache entry domain. May not be null.</param>
            <param name="key">The cache entry key.  May not be null.</param>
            <param name="value">The cache entry value.</param>
            <param name="context">The caching context. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.SimpleCacheManager.Get(System.String,System.String)">
            <summary>
            Gets a cached value from the specified domain.
            </summary>
            <param name="domain">The domain. May not be null.</param>
            <param name="key">The cache entry key. May not be null.</param>
            <returns>A cache value</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.SimpleCacheManager.Remove(System.String,System.String)">
            <summary>
            Removes a cached value from the cache, from the specified domain.
            </summary>
            <param name="domain">The domain. May not be null.</param>
            <param name="key">The cache entry key. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.SimpleCacheManager.Clear(System.String)">
            <summary>
            Clears the specified domain cache entries.
            </summary>
            <param name="domain">The domain. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.SimpleCacheManager.Clear">
            <summary>
            Clears all cache entries from all domains.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.SimpleCacheManager.Cache">
            <summary>
            Gets the underlying cache object.
            </summary>
            <value>The cache object.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.SimpleCacheManager.Current">
            <summary>
            Gets the current cache manager.
            </summary>
            <value>The current cache manager instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.SimpleCacheManager.Enabled">
            <summary>
            Gets a value indicating whether this <see cref="T:CodeFluent.Runtime.Caching.SimpleCacheManager"/> is enabled at runtime.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.SimpleCacheManager.Count">
            <summary>
            Gets the number of items in the cache
            </summary>
            <value>The number of items.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.LocaleCacheManager.Add(System.String,System.String,System.Object,System.Collections.IDictionary)">
            <summary>
            Adds an entry to the cache, in the specified domain.
            </summary>
            <param name="domain">The cache entry domain. May not be null.</param>
            <param name="key">The cache entry key.  May not be null.</param>
            <param name="value">The cache entry value.</param>
            <param name="context">The caching context. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.LocaleCacheManager.Remove(System.String,System.String)">
            <summary>
            Removes a cached value from the cache, from the specified domain.
            </summary>
            <param name="domain">The domain. May not be null.</param>
            <param name="key">The cache entry key. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.LocaleCacheManager.Get(System.String,System.String)">
            <summary>
            Gets a cached value from the specified domain.
            </summary>
            <param name="domain">The domain. May not be null.</param>
            <param name="key">The cache entry key. May not be null.</param>
            <returns>A cache value</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.LocaleCacheManager.BuildKey(System.String)">
            <summary>
            Builds a localized key from a key.
            </summary>
            <param name="key">The key.</param>
            <returns>The localized key.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.LocaleCacheManager.BuildCacheKey(System.Object[])">
            <summary>
            Builds the cache key from a list of parameters.
            This method is generic, useable for any type of caching mecanism.
            ICodeFluentEntity and IKeyable parameters are treated specifically.
            </summary>
            <param name="parameters">The parameters. May not be null nor empty.</param>
            <returns>
            A composite key representing parameters. May not be null.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.ObjectModelCacheAttribute">
            <summary>
            Defines an object model cache attribute.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.ObjectModelCacheAttribute.GetId(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Gets the id of a member.
            </summary>
            <param name="provider">The member. May not be null.</param>
            <returns>The id or -1 if it was not defined.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.ObjectModelCacheAttribute.MethodId">
            <summary>
            Gets or sets the object unique method id.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.CacheReferenceTarget">
            <summary>
            Represents a CodeFluent compatible object model cache context
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Caching.CacheReferenceTarget.NoCache">
            <summary>
            The no cache target.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheReferenceTarget.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.CacheReferenceTarget"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Caching.CacheReferenceTarget.#ctor(System.Object,CodeFluent.Runtime.Caching.CacheClear)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Caching.CacheReferenceTarget"/> class.
            </summary>
            <param name="target">The callback target.</param>
            <param name="callback">The cache clear callback.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheReferenceTarget.IsNoCache">
            <summary>
            Gets a value indicating whether this instance is the NoCache instance.
            </summary>
            <value>
            <c>true</c> if this instance is the NoCache instance; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheReferenceTarget.Target">
            <summary>
            Gets or sets the target object.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Caching.CacheReferenceTarget.Callback">
            <summary>
            Gets or sets the callback to notify the target object of cache clearance.
            </summary>
            <value>
            The callback.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Caching.UpdateValueFunc`2">
            <summary>
            Defines a function used to update a value in the store.
            </summary>
            <typeparam name="TKey">The type of keys in the store.</typeparam>
            <typeparam name="TValue">The type of values in the store.</typeparam>
            <param name="key">The store key. May not be null.</param>
            <param name="oldValue">The old value in the store. May be null.</param>
            <returns>
            The value to put in the store.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentCastException">
            <summary>
            The exception that is thrown when a given instance is not of the expected type.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentRuntimeException">
            <summary>
            The exception that is thrown when a generic CodeFluent runtime error occurs.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentRuntimeException.UserMessagePrefix">
            <summary>
            Defines the prefix for User Exception resource messages.
            Currently defined as "UEM".
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(CodeFluent.Runtime.UserExceptionType,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="type">The type of exception.</param>
            <param name="args">An array of optional arguments.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(CodeFluent.Runtime.UserExceptionType,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="type">The type of exception.</param>
            <param name="args">An array of optional arguments.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetUserMessage(System.Globalization.CultureInfo,CodeFluent.Runtime.UserExceptionType,System.Object[])">
            <summary>
            Gets a standard message for the specified exception type.
            </summary>
            <param name="culture">The culture.</param>
            <param name="type">The type of exception.</param>
            <param name="args">An array of optional arguments.</param>
            <returns>A text describing the exception.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.Throw(System.String,System.Object[])">
            <summary>
            Throws an Exception with the specified name.
            </summary>
            <param name="name">The name to use. May not be null.</param>
            <param name="arguments">The arguments to pass.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetCode(System.String)">
            <summary>
            Gets the code from a CodeFluent exception message.
            </summary>
            <param name="message">The message.</param>
            <returns>The message code.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetAllMessages(System.Exception)">
            <summary>
            Gets all messages of an exception, including inner exceptions message.
            </summary>
            <param name="exception">The exception. May be null.</param>
            <returns>A newline concatenated list of messages.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetAllMessages(System.Exception,System.String)">
            <summary>
            Gets all messages of an exception, including inner exceptions message.
            </summary>
            <param name="exception">The exception. May be null.</param>
            <param name="separator">The separator to use. May be null.</param>
            <returns>A concatenated list of messages.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetInterestingException(System.Exception)">
            <summary>
            Gets the interesting exception from an exception. This methods removes the leading TargetInvocationExceptions.
            </summary>
            <param name="exception">The original exception. May be null.</param>
            <returns>An exception instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetAllMessages(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all interesting CodeFluent messages.
            </summary>
            <param name="errors">The errors. May be null.</param>
            <returns>A concatenated list of messages.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetAllMessages(System.String)">
            <summary>
            Gets all interesting CodeFluent messages.
            </summary>
            <param name="error">The error. May be null.</param>
            <returns>A concatenated list of messages.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetInterestingExceptionMessage(System.Exception)">
            <summary>
            Gets the interesting exception message from an exception.
            </summary>
            <param name="exception">The original exception. May be null.</param>
            <returns>An exception message.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentRuntimeException.MessageWithoutCode">
            <summary>
            Gets the message without the code, if it exists. If there is no CodeFluent code, the original message is returned.
            </summary>
            <value>The message without the code.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentRuntimeException.Code">
            <summary>
            Gets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCastException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCastException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCastException.#ctor(CodeFluent.Runtime.ICodeFluentEntity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCastException"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="targetTypeName">Name of the target type.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCastException.#ctor(CodeFluent.Runtime.ServiceModel.ICodeFluentEntity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCastException"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="targetTypeName">Name of the target type.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCastException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCastException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCastException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCastException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCastException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentCoercionException">
            <summary>
            The exception that is thrown when a value coercion failed.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCoercionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCoercionException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCoercionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCoercionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCoercionException.#ctor(System.String,System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCoercionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="targetType">The target type.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCoercionException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCoercionException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCoercionException.#ctor(System.Exception,System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCoercionException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
            <param name="targetType">The target type.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCoercionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCoercionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCoercionException.#ctor(System.String,System.Exception,System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCoercionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
            <param name="targetType">The target type.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentCoercionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentCoercionException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentCoercionException.TargetType">
            <summary>
            Gets or sets the target type.
            </summary>
            <value>The target type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentCoercionException.Value">
            <summary>
            Gets or sets the input value that cannot be coerced.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentConcurrencyException">
            <summary>
            The exception that is thrown when a concurrency error was raised from the persistence layer.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConcurrencyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentConcurrencyException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConcurrencyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentConcurrencyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConcurrencyException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentConcurrencyException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentConcurrencyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConcurrencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentConcurrencyException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConcurrencyException.IsConcurrencyException(System.Data.SqlClient.SqlException)">
            <summary>
            Determines whether the specified exception is a concurrency exception.
            </summary>
            <param name="exception">The exception.</param>
            <returns>
            	<c>true</c> if the specified exception is a concurrency exception; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConcurrencyException.ConcurrencyErrorNumber">
            <summary>
            Gets or sets the concurrency error number.
            </summary>
            <value>The concurrency error number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConcurrencyException.ConcurrencyErrorMessage">
            <summary>
            Gets or sets the concurrency error message.
            </summary>
            <value>The concurrency error message.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentConfiguration">
            <summary>
            Represents CodeFluent runtime configuration.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.CodeFluentDefaultPersistenceServerVariable">
            <summary>
            Defines the name of the CodeFluent default persistence server variable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.CodeFluentSectionsPrefix">
            <summary>
            Defines CodeFluent section prefix name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultEntityKeySeparator">
            <summary>
            Defines CodeFluent default entity key separator character. This character is currently defined as '|'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultEntityKeyListSeparator">
            <summary>
            Defines CodeFluent default entity key list separator character. This character is currently defined as '^'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultPackageSeparator">
            <summary>
            Defines CodeFluent default package separator character. This character is currently defined as '_'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultSchemaSeparator">
            <summary>
            Defines CodeFluent default schema separator character. This character is currently defined as '.'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultStringArraySeparator">
            <summary>
            Defines CodeFluent default string array separator character. This character is currently defined as ASCII character 1 (SOH).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultPageSize">
            <summary>
            Defines CodeFluent default page size for Paged collections.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultPageCount">
            <summary>
            Defines CodeFluent default page count for Paged collections.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultPageWaitTimeout">
            <summary>
            Defines CodeFluent default wait timeout for Paged collections.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultCommandTimeout">
            <summary>
            Defines CodeFluent default wait timeout for persistence commands.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultLastPageSearchIncrementStep">
            <summary>
            Defines CodeFluent default last page search increment step.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.#ctor(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentConfiguration"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.CreateBinaryServicesConfiguration(System.Xml.XmlElement)">
            <summary>
            Creates the binary services configuration.
            </summary>
            <param name="binaryServicesElement">The binary services element.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.IsConfiguredForOracle">
            <summary>
            Determines whether this CodeFluent configuration targets an Oracle ADO.NET provider.
            </summary>
            <returns>
            	<c>true</c> if this CodeFluent configuration targets an Oracle ADO.NET provider; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.IsConfiguredForMySQL">
            <summary>
            Determines whether this CodeFluent configuration targets a MySQL ADO.NET provider.
            </summary>
            <returns>
            	<c>true</c> if this CodeFluent configuration targets a MySQL ADO.NET provider; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.IsConfiguredForPostgreSQL">
            <summary>
            Determines whether this CodeFluent configuration targets a PostgreSQL ADO.NET provider.
            </summary>
            <returns>
            	<c>true</c> if this CodeFluent configuration targets a PostgreSQL ADO.NET provider; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.EscapeDatabaseName(System.String)">
            <summary>
            Escapes the name of the database.
            </summary>
            <param name="name">The name. May be null.</param>
            <returns>A string representing the escaped database name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.UnescapeDatabaseName(System.String)">
            <summary>
            Unescapes the name of the database.
            </summary>
            <param name="name">The name. May be null.</param>
            <returns>A string representing the unescaped database name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.GetDefaultConnectionString(System.String)">
            <summary>
            Gets the default connection string for a given context.
            </summary>
            <param name="contextName">Name of the context. May not be null.</param>
            <returns>The connection string. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.GetDefaultConnectionString(System.String,System.String)">
            <summary>
            Gets the default connection string.
            </summary>
            <param name="contextName">Name of the context. May not be null.</param>
            <param name="databaseName">Name of the database. May not be null.</param>
            <returns>The connection string. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.SetNextPagedCollectionParameters(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the parameters for the next paged collection.
            </summary>
            <param name="pageCount">The page count.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="lastPageSearchIncrement">The last page search increment.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.SetNextPagedCollectionParameters(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the parameters for the next paged collection.
            </summary>
            <param name="pageCount">The page count.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="lastPageSearchIncrement">The last page search increment.</param>
            <param name="pageWaitTimeout">The page wait timeout in milliseconds.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.AddRuntimeSectionToFile(System.String,System.String,System.String)">
            <summary>
            Adds CodeFluent runtime sections and elements to a NET standard .config file.
            </summary>
            <param name="configFile">The config file.</param>
            <param name="defaultNamespace">The default namespace. May not be null.</param>
            <param name="connectionString">The connection string.</param>
            <returns>
            	<c>true</c> if the file was modified; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.AddRuntimeSectionToFile(System.String,System.String,CodeFluent.Runtime.Utilities.Pair{System.String,System.String}[])">
            <summary>
            Adds CodeFluent runtime sections and elements to a NET standard .config file.
            </summary>
            <param name="configFile">The config file.</param>
            <param name="defaultNamespace">The default namespace. May not be null.</param>
            <param name="attributes">An optional array of named attributes.</param>
            <returns>
            	<c>true</c> if the file was modified; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.GetUser(CodeFluent.Runtime.CodeFluentUserIdentityType)">
            <summary>
            Gets the current runtime user, using automatic or specific identification and authentication underlying systems.
            </summary>
            <param name="identityType">Type of the identity.</param>
            <value>The current user. May not be null.</value>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfiguration.Clone(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="context">The context. May not be null.</param>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.GlobalElement">
            <summary>
            Gets the global Xml Element used for configuration. By default, it is undefined, and can only be modified by code.
            If the global element is defined, it will be used as the base element across all executing process threads.
            </summary>
            <value>The global connection string.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.Element">
            <summary>
            Gets the .config file Xml element.
            </summary>
            <value>The element.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.CodeFluentIcon">
            <summary>
            Gets the CodeFluent icon.
            </summary>
            <value>
            The CodeFluent icon.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.PersistenceHook">
            <summary>
            Gets or sets the persistence hook class.
            </summary>
            <value>The hook instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.ContextTypeName">
            <summary>
            Gets or sets the name of the context object type.
            </summary>
            <value>The name of the context object type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.PersistenceTypeName">
            <summary>
            Gets or sets the name of the ADO.NET connection object type.
            The default value is System.Data.SqlClient.SqlConnection (Microsoft SQL Server).
            </summary>
            <value>The name of the ADO.NET connection object type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.AlternateMdFiles">
            <summary>
            Gets or sets a value indicating whether metadata files are stored on NTFS alternate streams.
            </summary>
            <value>
            	<c>true</c> if metadata files are stored on NTFS alternate streams; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.DefaultEmailValidatorExpression">
            <summary>
            Gets or sets the default email validator expression.
            </summary>
            <value>
            The default email validator expression.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.ProjectDescriptorOutputsPasswords">
            <summary>
            Gets or sets a value indicating whether project descriptor can output passwords.
            </summary>
            <value>
            	<c>true</c> if project descriptor can output passwords; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.ProjectDescriptorTypeName">
            <summary>
            Gets or sets the name of the project descriptor object type.
            The default value is CodeFluent.Runtime.Model.ProjectDescriptor.
            </summary>
            <value>The name of the project descriptor object type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.DefaultStoreFactoryTypeName">
            <summary>
            Gets or sets the name of the default store factory object type.
            The default value is CodeFluent.Runtime.Model.ProjectDescriptor.
            </summary>
            <value>The name of the project descriptor object type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.MustClearPoolsOnException">
            <summary>
            Gets or sets a value indicating whether connection pools must be cleared when persistence exceptions are thrown.
            This is to avoid this kind of issues: http://stackoverflow.com/questions/2154024/sql-server-connection-pool-doesnt-detect-closed-connections
            </summary>
            <value>
            	<c>true</c> if connection pools must be cleared when persistence exception are thrown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.MustTrackNestedCommand">
            <summary>
            Gets or sets a value indicating whether nested persistence commands must be tracked.
            The default is true.
            </summary>
            <value>
            	<c>true</c> if nested commands must be tracked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.MustUseDateTime2">
            <summary>
            Gets or sets a value indicating whether DbType.DateTime2 is used instead of DbType.DateTime.
            The default is false.
            </summary>
            <value>
            	<c>true</c> if DbType.DateTime2 must be used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.DatabaseName">
            <summary>
            Gets or sets the name of the database.
            </summary>
            <value>The name of the database. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.DefaultPersistenceServer">
            <summary>
            Gets or sets the default persistence server.
            </summary>
            <value>The default persistence server.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.DefaultValidationSeparator">
            <summary>
            Gets or sets the default validation separator.
            If not specified, it will be &lt;br/&gt; in an ASP.NET context, or System.Environment.NewLine in any other environment.
            </summary>
            <value>The default validation separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.MustCloseConnectionOnCompleteCommand">
            <summary>
            Gets a value indicating whether the underlying connection must be closed when the underlying command completes.
            The connection is only closed if there is no underlying transaction.
            </summary>
            <value>
            <c>true</c> if the underlying connection must be closed when the underlying command completes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.CommandTimeout">
            <summary>
            Gets the default time (in seconds) to wait for the persistence command to execute.
            </summary>
            <value>The number of seconds to wait.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.ConnectionString">
            <summary>
            Gets or sets the connection string for current runtime operations.
            </summary>
            <value>The connection string. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.PageSize">
            <summary>
            Gets the configured size of the page for a CodeFluent collection.
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.CurrentPageSize">
            <summary>
            Gets or sets the current size of the page for a CodeFluent collection.
            </summary>
            <value>The current size of the page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.PageCount">
            <summary>
            Gets the configured count of pages in memory for a CodeFluent collection.
            </summary>
            <value>The page count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.CurrentPageCount">
            <summary>
            Gets or sets the current count of pages in memory for a CodeFluent collection.
            </summary>
            <value>The current page count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.NextPageCount">
            <summary>
            Gets or sets the next count of pages in memory for a CodeFluent collection.
            If equals to -1, the next collection page count will use the CurrentPageCount.
            </summary>
            <value>The next page count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.NextPageSize">
            <summary>
            Gets or sets the next size of pages in memory for a CodeFluent collection.
            If equals to -1, the next collection page size will use the CurrentPageSize.
            </summary>
            <value>The next page size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.LastPageSearchIncrementStep">
            <summary>
            Gets or sets the last page search increment step.
            </summary>
            <value>The last page search increment step.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.CurrentLastPageSearchIncrementStep">
            <summary>
            Gets or sets the current last page search increment step.
            </summary>
            <value>The last page search increment step.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.NextLastPageSearchIncrementStep">
            <summary>
            Gets or sets the next last page search increment step.
            </summary>
            <value>The last page search increment step.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.PageWaitTimeout">
            <summary>
            Gets the configured page wait timeout in milliseconds for a CodeFluent collection.
            </summary>
            <value>The page wait timeout.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.CurrentPageWaitTimeout">
            <summary>
            Gets or sets the current page wait timeout of pages in memory for a CodeFluent collection.
            </summary>
            <value>The current page wait timeout.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.NextPageWaitTimeout">
            <summary>
            Gets or sets the next page wait timeout for a CodeFluent collection.
            If equals to -1, the next collection page wait timeout will use the CurrentPageWaitTimeout.
            </summary>
            <value>The next page wait timeout.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.CollectionsThreadPool">
            <summary>
            Gets the collection thread pool. This thread pool supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
            <value>The collection thread pool.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.ThrowOnGetOrdinalErrors">
            <summary>
            Gets or sets a value indicating whether to throw exceptions on GetOrdinal errors.
            </summary>
            <value>
            	<c>true</c> if exceptions are thrown on GetOrdinal errors; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.StringArraySeparator">
            <summary>
            Gets or sets the string array separator. Defined as <see cref="P:CodeFluent.Runtime.CodeFluentConfiguration.StringArraySeparator"/>.
            </summary>
            <value>The string array separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.SchemaSeparator">
            <summary>
            Gets or sets the schema separator. Defined as <see cref="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultSchemaSeparator"/>.
            </summary>
            <value>The schema separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.PackageSeparator">
            <summary>
            Gets or sets the package separator. Defined as <see cref="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultPackageSeparator"/>.
            </summary>
            <value>The package separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.EntityKeySeparator">
            <summary>
            Gets or sets the entity key separator. Defined as <see cref="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultEntityKeySeparator"/>.
            </summary>
            <value>The entity key separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.EntityKeyListSeparator">
            <summary>
            Gets or sets the entity key list separator. Defined as <see cref="F:CodeFluent.Runtime.CodeFluentConfiguration.DefaultEntityKeySeparator"/>.
            </summary>
            <value>The entity key separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.GrammarNumberConvertors">
            <summary>
            Gets a semicolon separated list of convertors types.
            </summary>
            <value>The grammar number convertors.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.UserIdentityType">
            <summary>
            Gets the type of the user identity to use.
            </summary>
            <value>The type of the user identity.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.UserTypeName">
            <summary>
            Gets or sets the name of the custom CodeFluentUser type.
            </summary>
            <value>The name of the custom CodeFluentUser type or null if it's not configured.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentConfiguration.BinaryServices">
            <summary>
            Gets the binary services configuration object.
            </summary>
            <value>The binary services configuration object. May not be null.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentConfigurationSectionHandler">
            <summary>
            Represents CodeFluent configuration handler.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentConfigurationSectionHandler.System#Configuration#IConfigurationSectionHandler#Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates a configuration section handler.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="configContext">Configuration context object.</param>
            <param name="section">Section XML node.</param>
            <returns>The created section handler object.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentContext">
            <summary>
            Represents a CodeFluent runtime context.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs a new CodeFluentContext object with a specified slot or context name.
            </summary>
            <param name="slotName">The specified slot or context name. May not be null.</param>
            <param name="threadOwned">Determines if the context is tied to a thread.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.CreatePersistence">
            <summary>
            Creates an instance of CodeFluentPersistence.
            </summary>
            <returns>
            A newly created CodeFluentPersistence instance. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.CreateConfiguration">
            <summary>
            Creates an instance of CodeFluentConfiguration.
            </summary>
            <returns>
            A newly created CodeFluentConfiguration instance. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.Get(System.String)">
            <summary>
            Gets the CodeFluent context for the current thread.
            </summary>
            <param name="slotName">The specified slot or context name. May not be null.</param>
            <returns>
            The CodeFluent context for the current thread. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.GetExisting(System.String)">
            <summary>
            Gets an existing CodeFluent context for the current thread.
            </summary>
            <param name="slotName">The specified slot or context name. May not be null.</param>
            <returns>
            The CodeFluent context for the current thread. May be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.GetNew(System.String)">
            <summary>
            Gets a new CodeFluent context.
            </summary>
            <param name="slotName">The specified slot or context name. May not be null.</param>
            <returns>
            The newly created CodeFluent context. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.Clone(System.String)">
            <summary>
            Clones the specified context, and give it a new slot name.
            </summary>
            <param name="newSlotName">New name of the slot. May not be null.</param>
            <returns>A cloned instance of the context.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.GetSlot(System.String)">
            <summary>
            Gets a context slot name.
            </summary>
            <param name="baseName">The base name.</param>
            <returns>The slot instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOn(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback,CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Runs the specified action in a given context.
            The action is synchronized (thread-safe).
            </summary>
            <param name="action">The action. May not be null.</param>
            <param name="context">The context. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOn(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback,CodeFluent.Runtime.CodeFluentContext,System.Boolean)">
            <summary>
            Runs the specified action in a given context.
            </summary>
            <param name="action">The action. May not be null.</param>
            <param name="context">The context. May not be null.</param>
            <param name="synchronized">if set to <c>true</c> the action is synchronized.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOn``1(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0},CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Runs the specified action in a given context.
            The action is synchronized (thread-safe).
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="action">The action. May not be null.</param>
            <param name="context">The context. May not be null.</param>
            <returns>Returns the result of the callback execution.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOn``1(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0},CodeFluent.Runtime.CodeFluentContext,System.Boolean)">
            <summary>
            Runs the specified action in a given context.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="action">The action. May not be null.</param>
            <param name="context">The context. May not be null.</param>
            <param name="synchronized">if set to <c>true</c> the action is synchronized.</param>
            <returns>Returns the result of the callback execution.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOnNew(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback)">
            <summary>
            Runs the specified action in a new context, cloned from the current one.
            The action is synchronized (thread-safe).
            </summary>
            <param name="action">The action. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOnNew(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback,System.Boolean)">
            <summary>
            Runs the specified action in a new context, cloned from the current one.
            The action is synchronized (thread-safe).
            </summary>
            <param name="action">The action. May not be null.</param>
            <param name="synchronized">if set to <c>true</c> the action is synchronized.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOnNew(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback,System.String)">
            <summary>
            Runs the specified action in a new context, cloned from the current one.
            The action is synchronized (thread-safe).
            </summary>
            <param name="action">The action. May not be null.</param>
            <param name="cloneContextName">Name of the cloned context. May be null. Cannot be the same as the current context Name (SlotName). Must be a valid Xml name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOnNew(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback,System.String,System.Boolean)">
            <summary>
            Runs the specified  action in a new context, cloned from the current one.
            </summary>
            <param name="action">The action. May not be null.</param>
            <param name="cloneContextName">Name of the cloned context. May be null. Cannot be the same as the current context Name (SlotName). Must be a valid Xml name.</param>
            <param name="synchronized">if set to <c>true</c> the action is synchronized.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOnNew``1(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0})">
            <summary>
            Runs the specified action in a new context, cloned from the current one.
            The action is synchronized (thread-safe).
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="action">The action. May not be null.</param>
            <returns>Returns the result of the callback execution.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOnNew``1(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0},System.Boolean)">
            <summary>
            Runs the specified action in a new context, cloned from the current one.
            The action is synchronized (thread-safe).
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="action">The action. May not be null.</param>
            <param name="synchronized">if set to <c>true</c> the action is synchronized.</param>
            <returns>Returns the result of the callback execution.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOnNew``1(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0},System.String)">
            <summary>
            Runs the specified action in a new context, cloned from the current one.
            The action is synchronized (thread-safe).
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="action">The action. May not be null.</param>
            <param name="cloneContextName">Name of the cloned context. May be null. Cannot be the same as the current context Name (SlotName). Must be a valid Xml name.</param>
            <returns>Returns the result of the callback execution.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.RunOnNew``1(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0},System.String,System.Boolean)">
            <summary>
            Runs the specified  action in a new context, cloned from the current one.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="action">The action. May not be null.</param>
            <param name="cloneContextName">Name of the cloned context. May be null. Cannot be the same as the current context Name (SlotName). Must be a valid Xml name.</param>
            <param name="synchronized">if set to <c>true</c> the action is synchronized.</param>
            <returns>Returns the result of the callback execution.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentContext.GetTokenElevationType">
            <summary>
            Gets the token elevation type for the current process.
            </summary>
            <returns>The token elevation type.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.Factory">
            <summary>
            Gets or sets the CodeFluent context factory.
            </summary>
            <value>
            The factory.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.ThreadOwned">
            <summary>
            Determines if the context is owned by a thread.
            </summary>
            <value><c>true</c> if the context is thread owned; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.SlotName">
            <summary>
            Gets the slot name of the current CodeFluent context.
            </summary>
            <value>The name of the slot. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.Configuration">
            <summary>
            Gets the CodeFluentConfiguration object for the current CodeFluent context.
            </summary>
            <value>The configuration object. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.Persistence">
            <summary>
            Gets the CodeFluentPersistence object for the current CodeFluent context.
            </summary>
            <value>The persistence object. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.User">
            <summary>
            Gets the CodeFluentUser object for the current CodeFluent context.
            </summary>
            <value>The user object. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.CodeFluentVersion">
            <summary>
            Gets a string that identifies the current CodeFluent version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.CodeFluentMajorVersion">
            <summary>
            Gets a number that identifies the current CodeFluent major version number.
            </summary>
            <value>The number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.CodeFluentMinorVersion">
            <summary>
            Gets a number that identifies the current CodeFluent minor version number.
            </summary>
            <value>The number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.CodeFluentBuildNumber">
            <summary>
            Gets a number that identifies the current CodeFluent build number.
            </summary>
            <value>The build number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.CodeFluentBuildTime">
            <summary>
            Gets a number that identifies the current CodeFluent build time.
            </summary>
            <value>The build time.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.IsAutomated">
            <summary>
            Gets a value indicating whether the current process is running under SoftFluent Automation.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
            <value><c>true</c> if the current process is running under SoftFluent Automation; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.IsBeingDebugged">
            <summary>
            Gets a value indicating whether the current process is being debugged.
            </summary>
            <value><c>true</c> if the current process is being debugged; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.BitnessDescription">
            <summary>
            Gets a descriptive string of the current process bitness mode.
            </summary>
            <value>The bitness description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.IsWow64">
            <summary>
            Gets a value indicating whether the specified process is running under WOW64.
            </summary>
            <value><c>true</c> if the specified process is running under WOW64; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.Is64BitsProcess">
            <summary>
            Gets a value indicating whether this process is a 64 bits process.
            </summary>
            <value><c>true</c> if this process is a 64 bits process; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentContext.SystemProcessorArchitecture">
            <summary>
            Gets the current computer system processor architecture.
            </summary>
            <value>The processor architecture.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentDeletedException">
            <summary>
            The exception that is thrown when a deleted instance was used.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDeletedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDeletedException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDeletedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDeletedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDeletedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDeletedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDeletedException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentDesignException">
            <summary>
            The exception that is thrown when a design error was detected by a CodeFluent runtime component.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDesignException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDesignException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDesignException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDesignException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDesignException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDesignException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDesignException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDesignException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentDuplicateException">
            <summary>
            The exception that is thrown when a duplicate entry was found in the persistence layer.
            Duplicates are detected using their keys values.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDuplicateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDuplicateException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDuplicateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDuplicateException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDuplicateException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDuplicateException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDuplicateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDuplicateException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDuplicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentDuplicateException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentDuplicateException.IsDuplicateException(System.Data.SqlClient.SqlException)">
            <summary>
            Determines whether the specified exception is a duplicate exception.
            </summary>
            <param name="exception">The exception.</param>
            <returns>
            	<c>true</c> if the specified exception is a duplicate exception; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentEntityAction">
            <summary>
            Specifies a runtime action on a given instance of an entity.
            Some actions can be canceled.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.Deleting">
            <summary>
            The instance is being deleted.
            The action is cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.Deleted">
            <summary>
            The instance has been deleted.
            The action is not cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.Saving">
            <summary>
            The instance is being saved.
            The action is cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.Saved">
            <summary>
            The instance has been saved.
            The action is not cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.CopyTo">
            <summary>
            The instance properties are being copied to another instance or to a dictionary.
            The action is not cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord">
            <summary>
            The instance properties are being read from a persistence reader interface.
            The action is not cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave">
            <summary>
            The instance properties are being read from a persistence reader interface after a successful save.
            The action is not cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.Validating">
            <summary>
            The instance state is being validated.
            The action is cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.Validated">
            <summary>
            The instance state has been validated.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.Custom">
            <summary>
            Defines a custom action.
            The action may be cancelable depending on the custom action.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.Attached">
            <summary>
            The instance is being attached to another instance.
            The action is not cancelable.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom">
            <summary>
            The instance properties are being copied from another instance of the same type or from a dictionary.
            The action is not cancelable.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentEntityActionEventArgs">
            <summary>
            Provides data for an action event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentEntityActionEventArgs.#ctor(CodeFluent.Runtime.ICodeFluentEntity,CodeFluent.Runtime.CodeFluentEntityAction)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentEntityActionEventArgs"/> class.
            </summary>
            <param name="entity">The entity. may not be null.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentEntityActionEventArgs.#ctor(CodeFluent.Runtime.ICodeFluentEntity,CodeFluent.Runtime.CodeFluentEntityAction,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentEntityActionEventArgs"/> class.
            </summary>
            <param name="entity">The entity. May not be null.</param>
            <param name="action">The action.</param>
            <param name="isCancelable">if set to <c>true</c> the event is cancelable.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentEntityActionEventArgs.#ctor(CodeFluent.Runtime.ICodeFluentEntity,CodeFluent.Runtime.CodeFluentEntityAction,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentEntityActionEventArgs"/> class.
            </summary>
            <param name="entity">The entity. May not be null.</param>
            <param name="action">The action.</param>
            <param name="isCancelable">if set to <c>true</c> the event is cancelable.</param>
            <param name="argument">The argument. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentEntityActionEventArgs.Entity">
            <summary>
            Gets the entity instance that created the event.
            </summary>
            <value>The entity. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentEntityActionEventArgs.Action">
            <summary>
            Gets the action <see cref="T:CodeFluent.Runtime.CodeFluentEntityAction"/> type.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentEntityActionEventArgs.Culture">
            <summary>
            Gets or sets the culture used for event resolution.
            </summary>
            <value>The culture. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentEntityActionEventArgs.Argument">
            <summary>
            Gets or sets the event argument.
            The argument depends on the type of event action.
            </summary>
            <value>The argument. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentEntityActionEventArgs.IsCancelable">
            <summary>
            Gets a value indicating whether this event is cancelable.
            </summary>
            <value>
            	<c>true</c> if this event is cancelable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentEntityActionEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this event is canceled.
            </summary>
            <value><c>true</c> if this event is canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentEntityActionEventHandler">
            <summary>
            Represents the method that handles a <see cref="T:CodeFluent.Runtime.CodeFluentEntityActionEventArgs"/> event. 
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentEntityState">
            <summary>
            Defines the in-memory state of a given instance of an entity.
            Note this does not reflect the state of the instance in the database. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityState.Created">
            <summary>
            The instance has just been created.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityState.Unchanged">
            <summary>
            The instance has not been changed since the last commited operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityState.Modified">
            <summary>
            The instance has been changed since the last commited operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityState.Deleted">
            <summary>
            The instance has been deleted and cannot be used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityState.ToBeUnlinked">
            <summary>
            The instance must be unlinked or unassociated from other related instances.
            This is mostly used for disconnected mode operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted">
            <summary>
            The instance must be deleted.
            This is mostly used for disconnected mode operations.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentIOException">
            <summary>
            The exception that is thrown when an IO error occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentIOException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentIOException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentIOException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentIOException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentIOException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentIOException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentIOException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentIOException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentIOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentIOException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentLicenseException">
            <summary>
            The exception that is thrown when a license error was detected by CodeFluent.
            Contact support@softfluent.com if such an error unexpectedly occurs.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentLicenseException.GeneralCode">
            <summary>
            Defines the error code for general cases. Currently defined as 1.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentLicenseException.ExpiredCode">
            <summary>
            Defines the error code for general cases. Currently defined as 1.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLicenseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentLicenseException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLicenseException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentLicenseException"/> class.
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLicenseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentLicenseException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLicenseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentLicenseException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLicenseException.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentPersistence">
            <summary>
            Represents the object to relational mapping helpers of CodeFluent runtime components.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultBooleanValue">
            <summary>
            Defines what is the default value for System.Boolean values transferred accross persistence layers.
            Currently defined as 'false'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultCharValue">
            <summary>
            Defines what is the default value for System.Char values transferred accross persistence layers.
            Currently defined as '\0'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultByteValue">
            <summary>
            Defines what is the default value for System.Byte values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultDecimalValue">
            <summary>
            Defines what is the default value for System.Decimal values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultDoubleValue">
            <summary>
            Defines what is the default value for System.Double values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultInt16Value">
            <summary>
            Defines what is the default value for System.Int16 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultInt32Value">
            <summary>
            Defines what is the default value for System.Int32 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultInt64Value">
            <summary>
            Defines what is the default value for System.Int64 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultSByteValue">
            <summary>
            Defines what is the default value for System.SByte values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultSingleValue">
            <summary>
            Defines what is the default value for System.Single values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultUInt16Value">
            <summary>
            Defines what is the default value for System.UInt16 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultUInt32Value">
            <summary>
            Defines what is the default value for System.UInt32 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultUInt64Value">
            <summary>
            Defines what is the default value for System.UInt64 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultGuidValue">
            <summary>
            Defines what is the default value for System.Guid values transferred accross persistence layers.
            Currently defined as Guid.Empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultDateTimeValue">
            <summary>
            Defines what is the default value for System.DateTime values transferred accross persistence layers.
            Currently defined as DateTime.MinValue.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultDateTimeOffsetValue">
            <summary>
            Defines what is the default value for System.DateTimeOffset values transferred accross persistence layers.
            Currently defined as DateTimeOffset.MinValue.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentPersistence.DefaultTimeSpanValue">
            <summary>
            Defines what is the default value for System.TimeSpan values transferred accross persistence layers.
            Currently defined as TimeSpan.Zero.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.#ctor(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentPersistence"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.BeginTransaction">
            <summary>
            Begins a transaction on the current persistence context.
            </summary>
            <returns>A newly created transaction instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a transaction on the current persistence context, using a specified isolation level.
            </summary>
            <param name="isolationLevel">The isolation level.</param>
            <returns>A newly created transaction instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CommitTransaction">
            <summary>
            Commits the transaction on the current persistence context.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.RunTransaction(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback)">
            <summary>
            Runs a transaction on the specified callback function, using the current persistence context.
            </summary>
            <param name="callback">The callback function. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.RunTransaction``1(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0})">
            <summary>
            Runs a transaction on the specified callback function, using the current persistence context.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="callback">The callback function. May not be null.</param>
            <returns>
            Returns the result of the callback execution.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.RunTransaction(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback,System.Data.IsolationLevel)">
            <summary>
            Runs a transaction on the specified callback function, using the current persistence context.
            </summary>
            <param name="callback">The callback function. May not be null.</param>
            <param name="level">The specified isolation level.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.RunTransaction``1(CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0},System.Data.IsolationLevel)">
            <summary>
            Runs a transaction on the specified callback function, using the current persistence context.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="callback">The callback function. May not be null.</param>
            <param name="level">The specified isolation level.</param>
            <returns>Returns the result of the callback execution.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.RunTransaction(System.String,CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback)">
            <summary>
            Runs a transaction on the specified callback function, using the specified persistence context.
            </summary>
            <param name="slotName">The context slot name. May not be null.</param>
            <param name="callback">The callback function. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.RunTransaction(System.String,CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback,System.Data.IsolationLevel)">
            <summary>
            Runs a transaction on the specified callback function, using the specified persistence context.
            </summary>
            <param name="slotName">The context slot name. May not be null.</param>
            <param name="callback">The callback function. May not be null.</param>
            <param name="level">The specified isolation level.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.RunTransaction``1(System.String,CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0})">
            <summary>
            Runs a transaction on the specified callback function, using the specified persistence context.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="slotName">The context slot name. May not be null.</param>
            <param name="callback">The callback function. May not be null.</param>
            <returns>Returns the result of the callback execution.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.RunTransaction``1(System.String,CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback{``0},System.Data.IsolationLevel)">
            <summary>
            Runs a transaction on the specified callback function, using the specified persistence context.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="slotName">The context slot name. May not be null.</param>
            <param name="callback">The callback function. May not be null.</param>
            <param name="level">The specified isolation level.</param>
            <returns>Returns the result of the callback execution.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.TransactedSave(CodeFluent.Runtime.ICodeFluentEntity[])">
            <summary>
            Saves an array of CodeFluent entities in a transaction, preserving entity state and row version (if it exists) if a error occurs.
            </summary>
            <param name="entities">The entities to save.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.TransactedSave(System.Data.IsolationLevel,CodeFluent.Runtime.ICodeFluentEntity[])">
            <summary>
            Saves an array of CodeFluent entities in a transaction, preserving entity state and row version (if it exists) if a error occurs.
            </summary>
            <param name="level">The specified isolation level.</param>
            <param name="entities">The entities to save.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.TransactedSave(System.String,CodeFluent.Runtime.ICodeFluentEntity[])">
            <summary>
            Saves an array of CodeFluent entities in a transaction, preserving states and row version (if it exists) if a error occurs.
            </summary>
            <param name="slotName">The context slot name. May not be null.</param>
            <param name="entities">The entities to save.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.TransactedSave(System.String,System.Data.IsolationLevel,CodeFluent.Runtime.ICodeFluentEntity[])">
            <summary>
            Saves an array of CodeFluent entities in a transaction, preserving states and row version (if it exists) if a error occurs.
            </summary>
            <param name="slotName">The context slot name. May not be null.</param>
            <param name="level">The specified isolation level.</param>
            <param name="entities">The entities to save.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.RollbackTransaction">
            <summary>
            Rollbacks the transaction on the current persistence context.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ResetConnection">
            <summary>
            Resets the underlying connection.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CloseConnection">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.SetConnection(System.String)">
            <summary>
            Sets the connection type name.
            </summary>
            <param name="typeName">The type name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand(System.String)">
            <summary>
            Completes the command of the specified CodeFluent runtime context.
            </summary>
            <param name="contextSlotName">The context slot name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand">
            <summary>
            Completes the command of the current CodeFluent runtime context.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand(System.Boolean)">
            <summary>
            Completes the command of the current CodeFluent runtime context.
            </summary>
            <param name="closeConnection">if set to <c>true</c> the connection is also closed if there is no running transaction initiated by this class.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CreateStoredProcedureCommand(System.String)">
            <summary>
            Creates a stored procedure command on the current CodeFluent runtime context.
            </summary>
            <param name="name">The procedure name. May contain a schema. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CreateStoredProcedureCommand(System.String,System.String,System.String)">
            <summary>
            Creates a stored procedure command on the current CodeFluent runtime context.
            </summary>
            <param name="schema">The schema name. May be null.</param>
            <param name="package">The package name. May be null.</param>
            <param name="intraPackageName">The intra package procedure name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CreateStoredProcedureCommand(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a stored procedure command on the current CodeFluent runtime context.
            </summary>
            <param name="schema">The schema name. May be null.</param>
            <param name="package">The package name. May be null.</param>
            <param name="intraPackageName">The intra package procedure name. May not be null if name is null.</param>
            <param name="name">The full name. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CreateTextCommand(System.String)">
            <summary>
            Creates a text command on the current CodeFluent runtime context.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.SerializeParameterXml(System.Object)">
            <summary>
            Serializes an Xml parameter.
            Supported value type are: string, IXmlSerializable, XmlNode, XmlReader, TextReader, and Stream.
            </summary>
            <param name="value">The value.</param>
            <returns>The serialized object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterXml(System.String,System.Object)">
            <summary>
            Adds an Xml parameter to the current CodeFluent runtime context command.
            Supported value type are: string, IXmlSerializable, XmlNode, XmlReader, TextReader, and Stream.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterObject(System.String,System.Object)">
            <summary>
            Adds a raw parameter to the current CodeFluent runtime context command.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameterObject(System.String,System.Object)">
            <summary>
            Adds a parameter to the current CodeFluent runtime context command.
            This commands does not convert object default value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.SerializeStringTypeObject(System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Serializes an object to a string using CodeFluent String serialization.
            </summary>
            <param name="value">The value. May be null.</param>
            <param name="type">The type of the serialized object. May be null only if serialization is not using XmlSerializer.</param>
            <param name="serializationMode">The serialization mode.</param>
            <returns>A string representing the serialized object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.SerializeStringTypeParameterObject(System.Data.IDbDataParameter,System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Serializes an object parameter to the current CodeFluent runtime context command using String serialization.
            </summary>
            <param name="parameter">The parameter. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="type">The type of the serialized object. May be null only if serialization is not using XmlSerializer.</param>
            <param name="serializationMode">The serialization mode.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.SerializeCustomParameterObject(System.Data.IDbDataParameter,System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Serializes an object parameter to the current CodeFluent runtime context command using Custom serialization.
            </summary>
            <param name="parameter">The parameter. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="type">The type of the serialized object. May be null.</param>
            <param name="serializationMode">The serialization mode.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.SerializeArrayOfBytesTypeObject(System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Serializes an object to an array of bytes using CodeFluent serialization.
            </summary>
            <param name="value">The value. May be null.</param>
            <param name="type">The type of the serialized object. May be null only if serialization is not using XmlSerializer.</param>
            <param name="serializationMode">The serialization mode.</param>
            <returns>An array of bytes representing the serialized object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.SerializeArrayOfBytesTypeParameterObject(System.Data.IDbDataParameter,System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Serializes an object parameter to the current CodeFluent runtime context command using ArrayOfBytes serialization.
            </summary>
            <param name="parameter">The parameter. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="type">The type of the serialized object. May be null only if serialization is not using XmlSerializer.</param>
            <param name="serializationMode">The serialization mode.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterObject(System.String,System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Adds a serializable object parameter to the current CodeFluent runtime context command.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="type">The type of the serialized object. May not be null.</param>
            <param name="serializationMode">The serialization mode.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.LoadDataSet(System.Data.IDataReader)">
            <summary>
            Creates a DataSet with values from a data source using the supplied IDataReader.
            </summary>
            <param name="reader">An IDataReader that provides one or more result sets.</param>
            <returns>The loaded dataset.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.LoadDataSet(System.Data.IDataReader,System.Boolean)">
            <summary>
            Creates a DataSet with values from a data source using the supplied IDataReader.
            </summary>
            <param name="reader">An IDataReader that provides one or more result sets.</param>
            <param name="throwOnError">if set to <c>true</c> exceptions may be raised during reading;</param>
            <returns>The loaded dataset.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.LoadContent(System.Object)">
            <summary>
            Loads the content of a CodeFluent object.
            Generally called prior to serialization.
            </summary>
            <param name="obj">The object instance. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.LoadContent(CodeFluent.Runtime.ICodeFluentObject)">
            <summary>
            Loads the content of a CodeFluent object.
            Generally called prior to serialization.
            </summary>
            <param name="obj">The object instance. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            Adds a parameter to the current CodeFluent runtime context command.
            This commands does not convert object default value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="dbType">The parameter data type.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.BuildStringArray(System.String[])">
            <summary>
            Builds a persistence string array.
            </summary>
            <param name="value">The list of arguments.</param>
            <returns>A concatenation of the input strings, separated by the value of CodeFluentConfiguration.StringArraySeparator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.String[])">
            <summary>
            Adds a System.String array parameter to the current CodeFluent runtime context command.
            The array is sent as the concatenation of input strings, separated by the value of CodeFluentConfiguration.StringArraySeparator.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterAsText(System.String,System.Object)">
            <summary>
            Adds a parameter to the current CodeFluent runtime context command.
            This commands converts null value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterAsText(System.String,System.Object,System.Object)">
            <summary>
            Adds a parameter to the current CodeFluent runtime context command.
            This commands converts value equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value to use. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.String)">
            <summary>
            Adds a parameter to the current CodeFluent runtime context command.
            This commands converts null string into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.String,System.String)">
            <summary>
            Adds a parameter to the current CodeFluent runtime context command.
            This commands converts strings equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value to use. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.String)">
            <summary>
            Adds a parameter to the current CodeFluent runtime context command.
            This commands does not convert object default value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterEnumInt32(System.String,System.Enum,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.Int32 before being sent to the persistence layer.
            This commands converts enum values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterEnumInt16(System.String,System.Enum,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.Int16 before being sent to the persistence layer.
            This commands converts enum values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterEnumInt64(System.String,System.Enum,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.Int64 before being sent to the persistence layer.
            This commands converts enum values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterEnumUInt16(System.String,System.Enum,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.UInt16 before being sent to the persistence layer.
            This commands converts enum values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterEnumUInt32(System.String,System.Enum,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.UInt32 before being sent to the persistence layer.
            This commands converts enum values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterEnumUInt64(System.String,System.Enum,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.UInt64 before being sent to the persistence layer.
            This commands converts enum values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterEnumByte(System.String,System.Enum,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.Byte before being sent to the persistence layer.
            This commands converts enum values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterEnumSByte(System.String,System.Enum,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.SByte before being sent to the persistence layer.
            This commands converts enum values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameterEnumInt32(System.String,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.Int32 before being sent to the persistence layer.
            This commands does not convert enum values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameterEnumInt16(System.String,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.Int16 before being sent to the persistence layer.
            This commands does not convert enum values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameterEnumInt64(System.String,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.Int64 before being sent to the persistence layer.
            This commands does not convert enum values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameterEnumUInt16(System.String,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.UInt16 before being sent to the persistence layer.
            This commands does not convert enum values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameterEnumUInt32(System.String,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.UInt32 before being sent to the persistence layer.
            This commands does not convert enum values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameterEnumUInt64(System.String,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.UInt64 before being sent to the persistence layer.
            This commands does not convert enum values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameterEnumByte(System.String,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.Byte before being sent to the persistence layer.
            This commands does not convert enum values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameterEnumSByte(System.String,System.Enum)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter is converted to System.SByte before being sent to the persistence layer.
            This commands does not convert enum values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetEnumDbType(System.Type)">
            <summary>
            Gets the data type of an underlying enum type.
            </summary>
            <param name="underlyingEnumTypeName">The underlying enum type name. May not be null.</param>
            <returns>The data type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Enum,System.Object)">
            <summary>
            Adds an enum parameter to the current CodeFluent runtime context command.
            The parameter data type is adjusted automatically to the right bitness before being sent to the persistence layer.
            This commands converts enum values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddConvertedParameter(System.String,System.Object,System.Type)">
            <summary>
            Converts a value to the target type and add it as a parameter to the current CodeFluent runtime context command.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="targetType">The target type. May not be null..</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter``1(System.String,System.Nullable{``0})">
            <summary>
            Adds a Nullable parameter to the current CodeFluent runtime context command.
            </summary>
            <typeparam name="T">The generic type. May not be a nullable type.</typeparam>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.BuildDataTable(System.Collections.IEnumerable)">
            <summary>
            Builds a data table from an enumerable.
            </summary>
            <param name="enumerable">The enumerable.</param>
            <returns>An instance of the DataTable type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.TransposeArrayElementType(System.Type)">
            <summary>
            Transposes the array element.
            </summary>
            <param name="arrayElementType">The array element type. may not be null.</param>
            <returns>A Type instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.BuildDataTable(System.Array)">
            <summary>
            Builds a data table from an array
            </summary>
            <param name="array">The array.</param>
            <returns>
            An instance of the DataTable type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddArrayParameterObject(System.String,System.Collections.IEnumerable)">
            <summary>
            Adds an IEnumerable parameter to the current CodeFluent runtime context command.
            This commands is only supported by SQL Server 2008 underlying persistent layer.
            </summary>
            <param name="name">The parameter name. May be null.</param>
            <param name="value">The enumerable. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddArrayParameter(System.String,System.Array)">
            <summary>
            Adds an Array to the current CodeFluent runtime context command.
            Supports one-dimensional and two-dimensional arrays only.
            This commands is only supported by SQL Server 2008 underlying persistent layer.
            </summary>
            <param name="name">The parameter name. May be null.</param>
            <param name="value">The array. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Data.DataTable)">
            <summary>
            Adds a System.Data.DataTable parameter to the current CodeFluent runtime context command.
            This commands is only supported by SQL Server 2008 underlying persistent layer.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The data table. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Data.IDataReader)">
            <summary>
            Adds a System.Data.IDataReader parameter to the current CodeFluent runtime context command.
            This commands is only supported by SQL Server 2008 underlying persistent layer.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The reader. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Server.SqlDataRecord})">
            <summary>
            Adds a list of System.Data.SqlDataRecord as a parameter to the current CodeFluent runtime context command.
            This commands is only supported by SQL Server 2008 underlying persistent layer.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">A list of data records. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetParameterValue``1(System.String,``0)">
            <summary>
            Gets the parameter value.
            </summary>
            <typeparam name="T">The expected type</typeparam>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value to use if the parameter was not found.</param>
            <returns>A value in the expected type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.SetRefParameter(System.Data.IDbDataParameter)">
            <summary>
            Change a parameter to a reference parameter
            </summary>
            <param name="parameter">The parameter. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameterWithDirection(System.String,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            Adds a named parameter to the current CodeFluent runtime context command.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="dbType">The data type.</param>
            <param name="direction">The parameter direction.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Boolean)">
            <summary>
            Adds a System.Boolean parameter to the current CodeFluent runtime context command.
            This commands converts values equal to false into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a System.Boolean parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddNullParameter(System.String)">
            <summary>
            Adds a DBNull parameter to the current CodeFluent runtime context command.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Boolean)">
            <summary>
            Adds a System.Boolean parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.TimeSpan)">
            <summary>
            Adds a System.TimeSpan parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultTimeSpanValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.TimeSpan,System.TimeSpan)">
            <summary>
            Adds a System.TimeSpan parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.TimeSpan)">
            <summary>
            Adds a System.TimeSpan parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.DateTimeOffset)">
            <summary>
            Adds a System.DateTimeOffset parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultDateTimeOffsetValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Adds a System.DateTimeOffset parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.DateTime)">
            <summary>
            Adds a System.DateTime parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultDateTimeValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.DateTime,System.DateTime)">
            <summary>
            Adds a System.DateTime parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.DateTimeOffset)">
            <summary>
            Adds a System.DateTimeOffset parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.DateTime)">
            <summary>
            Adds a System.DateTime parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Byte[])">
            <summary>
            Adds a System.Byte[] parameter to the current CodeFluent runtime context command.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Byte[],System.Byte[])">
            <summary>
            Adds a System.Byte[] parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the default value parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Byte)">
            <summary>
            Adds a System.Byte parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultByteValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Byte,System.Byte)">
            <summary>
            Adds a System.Byte parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Byte)">
            <summary>
            Adds a System.Byte parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Byte[])">
            <summary>
            Adds a System.Byte[] parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.String[])">
            <summary>
            Adds a System.String array parameter to the current CodeFluent runtime context command.
            The array is sent as the concatenation of input strings, separated by the value of CodeFluentConfiguration.StringArraySeparator.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Char)">
            <summary>
            Adds a System.Char parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultCharValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Char,System.Char)">
            <summary>
            Adds a System.Char parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Char)">
            <summary>
            Adds a System.Char parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Decimal)">
            <summary>
            Adds a System.Decimal parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultDecimalValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Decimal,System.Decimal)">
            <summary>
            Adds a System.Decimal parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Decimal)">
            <summary>
            Adds a System.Decimal parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Double)">
            <summary>
            Adds a System.Double parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultDoubleValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Double,System.Double)">
            <summary>
            Adds a System.Double parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Double)">
            <summary>
            Adds a System.Double parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Guid)">
            <summary>
            Adds a System.Guid parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultGuidValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Guid,System.Guid)">
            <summary>
            Adds a System.Guid parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Guid)">
            <summary>
            Adds a System.Guid parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Int16)">
            <summary>
            Adds a System.Int16 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultInt16Value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Int16,System.Int16)">
            <summary>
            Adds a System.Int16 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Int16)">
            <summary>
            Adds a System.Int16 parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Int32)">
            <summary>
            Adds a System.Int32 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultInt32Value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Int32,System.Int32)">
            <summary>
            Adds a System.Int32 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Enum)">
            <summary>
            Adds a System.Enum parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Int32)">
            <summary>
            Adds a System.Int32 parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Int64)">
            <summary>
            Adds a System.Int64 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultInt64Value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Int64,System.Int64)">
            <summary>
            Adds a System.Int64 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Int64)">
            <summary>
            Adds a System.Int64 parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.UInt16)">
            <summary>
            Adds a System.UInt16 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultUInt16Value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.UInt16,System.UInt16)">
            <summary>
            Adds a System.UInt16 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.UInt16)">
            <summary>
            Adds a System.UInt16 parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.UInt32)">
            <summary>
            Adds a System.UInt32 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultUInt32Value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.UInt32,System.UInt32)">
            <summary>
            Adds a System.UInt32 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.UInt32)">
            <summary>
            Adds a System.UInt32 parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.UInt64)">
            <summary>
            Adds a System.UInt64 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultUInt64Value into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.UInt64,System.UInt64)">
            <summary>
            Adds a System.UInt64 parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.UInt64)">
            <summary>
            Adds a System.UInt64 parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.SByte)">
            <summary>
            Adds a System.SByte parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultSByteValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.SByte,System.SByte)">
            <summary>
            Adds a System.SByte parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.SByte)">
            <summary>
            Adds a System.SByte parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Single)">
            <summary>
            Adds a System.Single parameter to the current CodeFluent runtime context command.
            This commands converts values equal to DefaultSingleValue into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddParameter(System.String,System.Single,System.Single)">
            <summary>
            Adds a System.Single parameter to the current CodeFluent runtime context command.
            This commands converts values equal to the defaultValue parameter into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddRawParameter(System.String,System.Single)">
            <summary>
            Adds a System.Single parameter to the current CodeFluent runtime context command.
            This commands does not convert values into persistence default (or null) value.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value. May be null.</param>
            <returns>
            A newly created parameter instance. The returned type is dependent upon the configured ADO.Net provider used for the CodeFluent runtime context.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CheckModelMatchesDatabase(System.Reflection.Assembly)">
            <summary>
            Checks the business object model assembly matches the database.
            </summary>
            <param name="assembly">The model assembly. May not be null.</param>
            <returns>true if both match, false otherwise</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ReadModelVersion">
            <summary>
            Reads the model version from the database.
            </summary>
            <returns>The model version of the database</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetDbType(System.Object)">
            <summary>
            Gets the default data type of a specified object.
            </summary>
            <param name="value">The object instance.</param>
            <returns>The default data type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetDbType(System.Type)">
            <summary>
            Gets the default data type of a specified CLR type.
            </summary>
            <param name="type">The CLR type. May not be null.</param>
            <returns>The default data type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteReader">
            <summary>
            Executes the CommandText against the Connection and builds an IDataReader.
            </summary>
            <returns>An IDataReader object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteScalar(System.Object)">
            <summary>
            Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.
            </summary>
            <param name="defaultValue">The default value.</param>
            <returns>
            The first column of the first row in the resultset.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteScalar``1(``0)">
            <summary>
            Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.
            </summary>
            <typeparam name="T">The expected type</typeparam>
            <param name="defaultValue">The default value.</param>
            <returns>
            The first column of the first row in the resultset.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteScalar``1(System.String,``0)">
            <summary>
            Executes the input statement text, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.
            </summary>
            <typeparam name="T">The returned object type.</typeparam>
            <param name="text">The statement text. May not be null.</param>
            <param name="defaultValue">The default value if a problem occurs.</param>
            <returns>
            The first column of the first row in the resultset.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteScalar(System.String,System.Object)">
            <summary>
            Executes the input statement text, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.
            </summary>
            <param name="defaultValue">The default value if a problem occurs.</param>
            <param name="text">The statement text. May not be null.</param>
            <returns>
            The first column of the first row in the resultset.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Executes the CommandText against the Connection, and builds an IDataReader using one of the CommandBehavior values.
            </summary>
            <param name="behavior">One of the CommandBehavior values.</param>
            <returns>An IDataReader object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ClearPools">
            <summary>
            Empties the connection pool on the current connection, if any.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ClearPools(System.Data.IDbConnection)">
            <summary>
            Empties the connection pool.
            </summary>
            <param name="connection">The connection to be cleared from the pool. May not be null.</param>
            <returns>true if connection pool has been emptied; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CloseReader">
            <summary>
            Closes the previously opened reader for the current CodeFluent runtime context.
            Does not throw if the reader was not opened.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteNonQuery(System.String)">
            <summary>
            Executes a statement against the Connection object of the underlying ADO.NET provider, and returns the number of rows affected.
            </summary>
            <param name="text">The statement text. May not be null.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteReader(System.String)">
            <summary>
            Executes a statement against the Connection object of the underlying ADO.NET provider, and returns a data reader.
            </summary>
            <param name="text">The statement text. May not be null.</param>
            <returns>The data reader instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteReader(System.Data.CommandBehavior,System.String)">
            <summary>
            Executes a statement against the Connection object of the underlying ADO.NET provider, and returns a data reader.
            </summary>
            <param name="behavior">One of the CommandBehavior values.</param>
            <param name="text">The statement text. May not be null.</param>
            <returns>The data reader instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ExecuteNonQuery">
            <summary>
            Executes the current prepared command or statement against the Connection object of the underlying ADO.NET provider, and returns the number of rows affected.
            </summary>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.String)">
            <summary>
            Gets a System.String value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Byte)">
            <summary>
            Gets a System.Byte value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.SByte)">
            <summary>
            Gets a System.SByte value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue``1(System.Data.IDataReader,System.String,``0)">
            <summary>
            Gets a value of specified type from the data reader using its column name.
            </summary>
            <typeparam name="T">The type of the returned value.</typeparam>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue``1(System.Data.IDataReader,System.String)">
            <summary>
            Gets a Nullable value from the data reader using its column name.
            If the column is not present, null will be returned.
            </summary>
            <typeparam name="T">The type of the returned value.</typeparam>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Boolean)">
            <summary>
            Gets a System.Boolean value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Char)">
            <summary>
            Gets a System.Char value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.TimeSpan)">
            <summary>
            Gets a System.TimeSpan value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.DateTime)">
            <summary>
            Gets a System.DateTime value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.DateTimeOffset)">
            <summary>
            Gets a System.DateTimeOffset value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Decimal)">
            <summary>
            Gets a System.Decimal value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Double)">
            <summary>
            Gets a System.Double value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Single)">
            <summary>
            Gets a System.Single value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Guid)">
            <summary>
            Gets a System.Guid value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Int16)">
            <summary>
            Gets a System.Int16 value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.UInt16)">
            <summary>
            Gets a System.UInt16 value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Int32)">
            <summary>
            Gets a System.Int32 value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.UInt32)">
            <summary>
            Gets a System.UInt32 value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Int64)">
            <summary>
            Gets a System.Int64 value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.UInt64)">
            <summary>
            Gets a System.UInt64 value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValueObject(System.Data.IDataReader,System.String,System.Object)">
            <summary>
            Gets a System.Object value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValueObject(System.Data.IDataReader,System.String,System.Object,System.Type,CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Deserializes an object from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <param name="type">The serialized object type. May not be null.</param>
            <param name="serializationMode">The serialization mode.</param>
            <returns>The deserialized object instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValueEnum(System.Data.IDataReader,System.String,System.Enum)">
            <summary>
            Gets an enum value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValueEnum(System.Data.IDataReader,System.String,System.Object)">
            <summary>
            Gets an enum value stored as a string from the data reader using its column name.
            This method is used for .NET languages that do not support enums, like Visual J#.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetReaderValue(System.Data.IDataReader,System.String,System.Byte[])">
            <summary>
            Gets a System.Byte[] value from the data reader using its column name.
            </summary>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="name">The column name. May not be null.</param>
            <param name="defaultValue">The default value to return if anything fails (such as a type conversion error).</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.IsCodeFluentSerializable(System.String)">
            <summary>
            Determines whether the specified type implements the ICodeFluentSerializable interface.
            </summary>
            <param name="fullTypeName">The full type name.</param>
            <returns>
            	<c>true</c> if the specified type implements the ICodeFluentSerializable interface; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.IsTypeHandled(System.String)">
            <summary>
            Determines whether a CLR type name can be handled by the CodeFluent object relational mapping layer.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
            <param name="fullTypeName">The full type name. May not be null.</param>
            <returns>
            	<c>true</c> if type can be handled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.NextResults(System.Data.IDataReader)">
            <summary>
            Moves a data reader to the next result set.
            </summary>
            <param name="reader">The input reader.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetOrdinal(System.Data.IDataRecord,System.String)">
            <summary>
            Returns the index of a named field.
            </summary>
            <param name="reader">The reader. May not be null.</param>
            <param name="name">The field name. May not be null.</param>
            <returns>The index of the named field.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetOrdinal(System.Data.IDataRecord,System.String,System.Boolean)">
            <summary>
            Returns the index of a named field.
            </summary>
            <param name="reader">The reader. May not be null.</param>
            <param name="name">The field name. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> an error may be thrown if the index of the named field is not found.</param>
            <returns>The index of the named field.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ThrowIfDeleted(CodeFluent.Runtime.ICodeFluentEntity)">
            <summary>
            Helpers routine that throws if a CodeFluent entity has been deleted.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
            <param name="entity">The input entity. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ParseEntityKey(System.String,System.Type[],System.Object[])">
            <summary>
            Parses an entity key serialized as a string.
            </summary>
            <param name="text">The input key to parse.</param>
            <param name="types">The expected key scalar types.</param>
            <param name="defaultValues">The possible default values for key values.</param>
            <returns>An array of typed keys values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ParseEntityKey(System.String,System.Type[],System.Object[],System.Char[])">
            <summary>
            Parses an entity key serialized as a string.
            </summary>
            <param name="text">The input key to parse.</param>
            <param name="types">The expected key scalar types.</param>
            <param name="defaultValues">The possible default values for key values.</param>
            <param name="separators">A list of possible separator characters to use.</param>
            <returns>An array of typed keys values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ParseEntityKey(System.String,System.String[],System.Object[])">
            <summary>
            Parses an entity key serialized as a string.
            </summary>
            <param name="text">The input key to parse.</param>
            <param name="types">The expected key scalar types.</param>
            <param name="defaultValues">The possible default values for key values.</param>
            <returns>An array of typed keys values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ParseEntityKey(System.String,System.String[],System.Object[],System.Char[])">
            <summary>
            Parses an entity key serialized as a string.
            </summary>
            <param name="text">The input key to parse.</param>
            <param name="types">The expected key scalar types.</param>
            <param name="defaultValues">The possible default values for key values.</param>
            <param name="separators">A list of possible separator characters to use.</param>
            <returns>An array of typed keys values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.SerializeEntityKey(System.Object[])">
            <summary>
            Serializes the entity key.
            </summary>
            <param name="keys">The keys values. If null or empty, null will be returned.</param>
            <returns>A string representing the entity key.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.DeserializeEntityKey(System.String)">
            <summary>
            Deserializes the entity key serialized by a call to the SerializeEntityKey method.
            </summary>
            <param name="text">The input text to deserialize.</param>
            <returns>An array of typed keys values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CanBeEntityKey(System.String)">
            <summary>
            Determines whether a type is valid for an entity key.
            </summary>
            <param name="typeName">The input type name. May no be null.</param>
            <returns>
            	<c>true</c> if the specified type can be used for an entity key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CanBeEntityKey(System.Type)">
            <summary>
            Determines whether a type is valid for an entity key.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <returns>
            	<c>true</c> if the specified type can be used for an entity key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.BuildEntityKey(System.Object[])">
            <summary>
            Builds the entity key string, concatenating keys values into a string using the default separator character.
            </summary>
            <param name="keys">The keys values. If null or empty, null will be returned.</param>
            <returns>A string representing the entity key.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.LoadCollection``2(System.Data.IDataReader,System.Int32,System.Int32,CodeFluent.Runtime.PageOptions)">
            <summary>
            Loads a CodeFluent collection from a data reader.
            </summary>
            <typeparam name="Tc">The collection type.</typeparam>
            <typeparam name="Te">The entity type.</typeparam>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="pageIndex">The page index.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageOptions">The page options. May be null.</param>
            <returns>A collection of instances.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.LoadCollection(System.Type,System.Type,System.Data.IDataReader,System.Int32,System.Int32,CodeFluent.Runtime.PageOptions)">
            <summary>
            Loads a CodeFluent collection from a data reader.
            </summary>
            <param name="entityType">The CodeFluent entity type. May not be null. Type must implement ICodeFluentEntity.</param>
            <param name="collectionType">The CodeFluent collection type. May not be null. Type must implement IList.</param>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="pageIndex">The page index.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageOptions">The page options. May be null.</param>
            <returns>A collection of instances.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ProcessCollection``1(System.Data.IDataReader,System.Int32,System.Int32,CodeFluent.Runtime.PageOptions,CodeFluent.Runtime.CodeFluentPersistence.ProcessEntityCallback)">
            <summary>
            Processes a CodeFluent collection from a data reader.
            </summary>
            <typeparam name="T">The CodeFluent entity type. May not be null. Type must implement ICodeFluentEntity.</typeparam>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="pageIndex">The page index.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageOptions">The page options. May be null.</param>
            <param name="callback">The callback.</param>
            <returns>
            true if the collection was processed; false if processing was cancelled.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.TryGetDefaultValue(System.String,System.Object@)">
            <summary>
            Gets the default value for a given type.
            </summary>
            <param name="fullTypeName">The CLR full type name. May not be null.</param>
            <param name="value">The typed default value or null if not found.</param>
            <returns>true if the type was handled, false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetCollectionType(System.Type)">
            <summary>
            Gets collection type for an item type using various techniques.
            </summary>
            <param name="itemType">The item type. May not be null.</param>
            <returns>
            The collection type or null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.GetItemType(System.Type)">
            <summary>
            Gets item type for a collection type using various techniques.
            </summary>
            <param name="collectionType">The collection type. May not be null.</param>
            <returns>The item type or null if it was not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ProcessCollection(System.Type,System.Data.IDataReader,System.Int32,System.Int32,CodeFluent.Runtime.PageOptions,CodeFluent.Runtime.CodeFluentPersistence.ProcessEntityCallback)">
            <summary>
            Processes a CodeFluent collection from a data reader.
            </summary>
            <param name="entityType">The CodeFluent entity type. May not be null. Type must implement ICodeFluentEntity.</param>
            <param name="reader">The input data reader. May not be null.</param>
            <param name="pageIndex">The page index.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageOptions">The page options. May be null.</param>
            <param name="callback">The callback.</param>
            <returns>true if the collection was processed; false if processing was cancelled.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.LoadByEntityKey(System.Type,System.String)">
            <summary>
            Loads an entity using it's entity key.
            </summary>
            <param name="entityType">Type of the entity. May not be null.</param>
            <param name="entityKey">The entity key. May be null.</param>
            <returns>An instance of the loaded entity type; or null it it does not exists.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.Reload(CodeFluent.Runtime.ICodeFluentEntity@)">
            <summary>
            Reloads the specified entity if possible.
            </summary>
            <param name="entity">An existing entity instance. If null, null will be returned.</param>
            <returns>true if the entity was successfully reloaded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.AddValidationError(System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException},System.String)">
            <summary>
            Adds the specified error to the list of errors.
            </summary>
            <param name="results">The current list of errors. May not be null.</param>
            <param name="error">The error. If null, nothing will be done.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.Validate(CodeFluent.Runtime.ICodeFluentValidator)">
            <summary>
            Validates a CodeFluent entity and throws if it is not valid.
            </summary>
            <param name="validator">The object to validate. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ValidateFirst(CodeFluent.Runtime.ICodeFluentSummaryValidator)">
            <summary>
            Validates a CodeFluent entity and throws if it is not valid. Only the first message is thrown.
            </summary>
            <param name="validator">The object to validate. May not be null.</param>
            <returns>The first error string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ValidateFirst(System.Globalization.CultureInfo,CodeFluent.Runtime.ICodeFluentSummaryValidator)">
            <summary>
            Validates a CodeFluent entity and returns the first error message if it is not valid.
            </summary>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="validator">The object to validate. May not be null.</param>
            <returns>The first error string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.Validate(System.Globalization.CultureInfo,CodeFluent.Runtime.ICodeFluentSummaryValidator,System.String)">
            <summary>
            Validates a CodeFluent entity and throws if it is not valid.
            </summary>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="validator">The object to validate. May not be null.</param>
            <param name="separator">A separator text for concatenating errors. If null, System.Environment.NewLine will be used.</param>
            <returns>A list of exceptions as a string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException},CodeFluent.Runtime.ICodeFluentValidator,System.String)">
            <summary>
            Validates a CodeFluent entity members only and fills a list of exceptions if it is not valid.
            </summary>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="results">The current list of errors. May not be null.</param>
            <param name="validator">The validator. May not be null.</param>
            <param name="memberName">The member name. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo,CodeFluent.Runtime.ICodeFluentValidator,System.String)">
            <summary>
            Validates a CodeFluent entity members only and return a list of exceptions if it is not valid.
            </summary>
            <param name="validator">The validator. May not be null.</param>
            <param name="memberName">The member name. May be null.</param>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <returns>A list of exceptions.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ValidateFirstMember(System.Globalization.CultureInfo,CodeFluent.Runtime.ICodeFluentValidator,System.String)">
            <summary>
            Validates a CodeFluent entity member and return the first exception, if it is not valid.
            </summary>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="memberName">The member name. May be null.</param>
            <param name="validator">The validator. May not be null.</param>
            <returns>The exception as a string, or null if the entity is valid.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.Validate(System.Globalization.CultureInfo,CodeFluent.Runtime.ICodeFluentValidator,System.String,System.String)">
            <summary>
            Validates a CodeFluent entity members only and return a list of exceptions concatenated as a string if it is not valid.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="validator">The validator. May not be null.</param>
            <param name="memberName">The member name. May be null.</param>
            <param name="separator">A separator text for concatenating errors. If null, System.Environment.NewLine will be used.</param>
            <returns>A list of exceptions as a string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo,CodeFluent.Runtime.ICodeFluentValidator,System.String,System.String)">
            <summary>
            Validates a CodeFluent entity members only and return a list of exceptions concatenated as a string if it is not valid.
            </summary>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="validator">The validator. May not be null.</param>
            <param name="memberName">The member name. May be null.</param>
            <param name="separator">A separator text for concatenating errors. If null, System.Environment.NewLine will be used.</param>
            <returns>A list of exceptions as a string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CanValueBeNull(System.Data.DbType)">
            <summary>
            Determines whether a value of the given data type can be null.
            </summary>
            <param name="dbType">The data type.</param>
            <returns>
            	<c>true</c> if a value of a given data type can be null; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ToType``1(System.Object,System.String,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            Converts a CodeFluent entity to the specified type using Reflection mechanisms.
            </summary>
            <typeparam name="T">The target type</typeparam>
            <param name="entity">The entity instance. May not be null.</param>
            <param name="typeName">Name of the target type. May not be null.</param>
            <param name="copyTo">if set to <c>true</c> the CopyTo method is called if it exists.</param>
            <param name="deep">if set to <c>true</c> a deep copy occurs.</param>
            <param name="parameters">An array of parameters.</param>
            <returns>An instance of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.ToType(System.Object,System.String,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            Converts a CodeFluent entity to the specified type using Reflection mechanisms.
            </summary>
            <param name="entity">The entity instance. May not be null.</param>
            <param name="typeName">Name of the target type. May not be null.</param>
            <param name="copyTo">if set to <c>true</c> the CopyTo method is called if it exists.</param>
            <param name="deep">if set to <c>true</c> a deep copy occurs.</param>
            <param name="parameters">An array of parameters.</param>
            <returns>An instance of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.CanAddEntity(System.Int32,System.Int32,CodeFluent.Runtime.PageOptions,System.Int32)">
            <summary>
            Helper methods that determines whether a new entity can be added to a collection.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
            <param name="index">The page index.</param>
            <param name="size">The page size.</param>
            <param name="options">The page options.</param>
            <param name="readCount">The count of already read entities in the collection.</param>
            <returns>
            	<c>true</c> if a new entity can be added; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="threadOwned"><c>true</c> to release thread owned resources; <c>false</c> to release only stack resources.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.Dispose(System.Boolean,System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="threadOwned"><c>true</c> to release thread owned resources; <c>false</c> to release only stack resources.</param>
            <param name="throwOnError">if set to <c>false</c> no error will be thrown.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed.
            </summary>
            <param name="name">The property name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistence.Clone(CodeFluent.Runtime.CodeFluentContext)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="context">The context. May not be null.</param>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.CodeFluentPersistence.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.Context">
            <summary>
            Gets the current CodeFluent runtime context.
            </summary>
            <value>The context instance. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.GlobalConnectionString">
            <summary>
            Gets the global connection string. By default, the global connection string is undefined, and can only be modified by code.
            If the global connection string is defined, it will be used for all subsequent database calls, across all executing process threads.
            </summary>
            <value>The global connection string.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.ConnectionString">
            <summary>
            Gets or sets current CodeFluent runtime context connection string.
            If the global connection string is defined, the connection string will be the global connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.TypeName">
            <summary>
            Gets or sets the ADO.Net IDbConnection object type name for the current CodeFluent runtime context.
            </summary>
            <value>The type name. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.BaseCommand">
            <summary>
            Gets the current command instance for the current CodeFluent runtime context.
            </summary>
            <value>The command. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy, as nested commands are not allowed for a given CodeFluent runtime context.
            </summary>
            <value>
              <c>true</c> if this instance is busy; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.IsSerializing">
            <summary>
            Gets or sets a value indicating whether this instance is serializing objects in the current CodeFluent runtime context.
            </summary>
            <value>
            	<c>true</c> if this instance is serializing objects; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.AutoEnlistTransaction">
            <summary>
            Gets or sets a value indicating whether this instance auto enlists in an ambiant transaction.
            The default is true.
            </summary>
            <value>
            	<c>true</c> if this instance auto enlists in an ambiant transaction; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.HasEnlistedTransaction">
            <summary>
            Gets a value indicating whether this instance has an enlisted transaction.
            </summary>
            <value>
            	<c>true</c> if this instance has an enlisted transaction; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistence.PageSize">
            <summary>
            Gets or sets the size of the page for the next persistence operation.
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback">
            <summary>
            Defines a transaction callback delegate.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentPersistence.RunTransactionCallback`1">
            <summary>
            Defines a transaction callback delegate.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <returns>A value depending on the type of callback.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentPersistence.ProcessEntityCallback">
            <summary>
            Defines an entity callback delegate.
            </summary>
            <returns>true if the entity was processed; false if processing was cancelled.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentPersistenceUserDefinedMemberAttribute">
            <summary>
            Defines a member that can be used during user defined persistence operations.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentPersistenceUserDefinedMemberAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentPersistenceUserDefinedMemberAttribute"/> class.
            </summary>
            <param name="ordinal">The ordinal.</param>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentPersistenceUserDefinedMemberAttribute.Ordinal">
            <summary>
            Gets a value indicating this member ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentType">
            <summary>
            Represents a CodeFluent composite type.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentType"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentType.#ctor(System.Type,System.Data.DbType,CodeFluent.Runtime.UI.UIType)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentType"/> class.
            </summary>
            <param name="clrType">The CLR type.</param>
            <param name="dbType">The persistence type.</param>
            <param name="uiType">The user interface type.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentType.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentType.UIType">
            <summary>
            Gets or sets the user interface type.
            </summary>
            <value>The user interface type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentType.DbType">
            <summary>
            Gets or sets the type persistence type.
            </summary>
            <value>The persistence type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentType.ClrType">
            <summary>
            Gets or sets the CLR type.
            </summary>
            <value>The CLR type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentType.IsDbUnicode">
            <summary>
            Gets a value indicating whether this type is a persistence unicode type.
            </summary>
            <value>
            	<c>true</c> if this type is a persistence unicode type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentUserIdentityType">
            <summary>
            Defines what type of identity CodeFluentUser will use.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentUserIdentityType.Undefined">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentUserIdentityType.AspNet">
            <summary>
            If the context is ASP.NET, HttpContext.Current.User.Identity will be used.
            Otherwise, Thread.CurrentPrincipal.Identity will be used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentUserIdentityType.Windows">
            <summary>
            WindowsIdentity.GetCurrent() will be used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentUserIdentityType.Current">
            <summary>
            Thread.CurrentPrincipal.Identity will be used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentUserIdentityType.AspNetOrWindows">
            <summary>
            If the context is ASP.NET, HttpContext.Current.User.Identity will be used.
            If it is not, or the identity is not authentified, WindowsIdentity.GetCurrent() will be used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentUserIdentityType.CurrentOrWindows">
            <summary>
            Thread.CurrentPrincipal.Identity will be used.
            If the identity is not authentified, WindowsIdentity.GetCurrent() will be used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentUserIdentityType.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CabCompressionLevel">
            <summary>
            Defines the cab compression level.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CabCompressionLevel.None">
            <summary>
            No compression (0).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CabCompressionLevel.Minimum">
            <summary>
            Minimum compression level (1).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CabCompressionLevel.Normal">
            <summary>
            Normal compression level (6).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CabCompressionLevel.Maximum">
            <summary>
            Maximum compression level (10).
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CabEntry">
            <summary>
            Defines a cab entry.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntry.Name">
            <summary>
            Gets the entry name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntry.Size">
            <summary>
            Gets the entry size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntry.LastWriteTime">
            <summary>
            Gets the entry last write time.
            </summary>
            <value>
            The last write time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntry.Bytes">
            <summary>
            Gets the entry bytes. May be null.
            </summary>
            <value>
            The bytes.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntry.OutputStream">
            <summary>
            Gets or sets the entry output stream.
            </summary>
            <value>
            The output stream.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntry.Tag">
            <summary>
            Gets or sets a user-defined value associated with this entry. May be null.
            </summary>
            <value>
            The tag value.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CabEntryAddedEventArgs">
            <summary>
            Provides data for a cab added event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabEntryAddedEventArgs.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabEntryAddedEventArgs"/> class.
            </summary>
            <param name="name">The entry name.</param>
            <param name="size">The entry size.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntryAddedEventArgs.Name">
            <summary>
            Gets the entry name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntryAddedEventArgs.Size">
            <summary>
            Gets the entry size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs">
            <summary>
            Provides data for a cab adding event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs"/> class.
            </summary>
            <param name="filePath">The entry file path. May not be null.</param>
            <param name="name">The entry name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs.#ctor(System.IO.Stream,System.String,System.DateTime,System.IO.FileAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs"/> class.
            </summary>
            <param name="stream">The stream entry. May not be null.</param>
            <param name="name">The entry name. May not be null.</param>
            <param name="dateTime">The entry date time.</param>
            <param name="attributes">The entry attributes.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs.Stream">
            <summary>
            Gets or sets the entry stream.
            </summary>
            <value>
            The stream.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs.Name">
            <summary>
            Gets or sets the entry name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs.DateTime">
            <summary>
            Gets or sets the entry date time.
            </summary>
            <value>
            The date time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntryAddingEventArgs.Attributes">
            <summary>
            Gets or sets the entry attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CabEntryExtractEventArgs">
            <summary>
            Provides data for a cab extraction event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabEntryExtractEventArgs.#ctor(CodeFluent.Runtime.Compression.CabEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabEntryExtractEventArgs"/> class.
            </summary>
            <param name="entry">The extracted entry. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabEntryExtractEventArgs.Entry">
            <summary>
            Gets the extracted entry.
            </summary>
            <value>
            The extracted entry.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CabException">
            <summary>
            The exception that is thrown when a cab operation occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CabExtractionOptions">
            <summary>
            Specifies options for cab entries extraction.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CabExtractionOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CabExtractionOptions.Bytes">
            <summary>
            Cab entries are extracted as bytes.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CabFile">
            <summary>
            Represents a .CAB file or stream archive.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.#ctor(System.String,CodeFluent.Runtime.Compression.CabFileMode)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabFile"/> class.
            </summary>
            <param name="filePath">The .CAB file path. May not be null.</param>
            <param name="mode">The open mode.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.#ctor(System.IO.Stream,CodeFluent.Runtime.Compression.CabFileMode)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.CabFile"/> class.
            </summary>
            <param name="stream">The cab stream. How the stream is opened mus correspond to the open mode. May not be null.</param>
            <param name="mode">The open mode.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.CopyTo(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies a stream data to another stream.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="outputStream">The output stream. May not be null.</param>
            <returns>The number of bytes copied.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.CopyTo(System.IO.Stream,System.IO.Stream,System.Int32,System.EventHandler)">
            <summary>
            Copies a stream data to another stream.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
            <param name="outputStream">The output stream. May not be null.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="readChunkHandler">An optional read chunk handler. May be null.</param>
            <returns>
            The number of bytes copied.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.AddDirectory(System.String)">
            <summary>
            Adds the content of directory recursively to the cab file or stream.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.AddDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Adds the content of a directory to the cab file or stream.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="rootPath">The root path. May not be null.</param>
            <param name="recursive">if set to <c>true</c> the operation is recursive.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.AddEntry(System.String)">
            <summary>
            Adds a file to the cab file or stream.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <returns>true if the file has been added.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.AddEntry(System.String,CodeFluent.Runtime.Compression.CabCompressionLevel)">
            <summary>
            Adds a file to the cab file or stream.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="compressionLevel">The compression level.</param>
            <returns>
            true if the file has been added.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.AddEntry(System.String,System.String)">
            <summary>
            Adds a file to the cab file or stream.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="name">The file name in the cab file or stream. may not be null.</param>
            <returns>
            true if the file has been added.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.AddEntry(System.String,System.String,CodeFluent.Runtime.Compression.CabCompressionLevel)">
            <summary>
            Adds a file to the cab file or stream.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="name">The file name in the cab file or stream. may not be null.</param>
            <param name="compressionLevel">The compression level.</param>
            <returns>
            true if the file has been added.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.AddEntry(System.IO.Stream,System.String,System.DateTime,System.IO.FileAttributes,CodeFluent.Runtime.Compression.CabCompressionLevel)">
            <summary>
            Adds the content of a stream to the cab file or stream.
            </summary>
            <param name="input">The input stream. May not be null.</param>
            <param name="name">The file name in the cab file or stream. may not be null.</param>
            <param name="dateTime">The entry date time.</param>
            <param name="attributes">The entry attributes.</param>
            <param name="compressionLevel">The compression level.</param>
            <returns>
            true if the content has been added.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.ExtractEntries">
            <summary>
            Starts the cab entries extraction.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.Flush">
            <summary>
            Flushes the cab file or stream.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CabFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.CabFile.EntryExtracted">
            <summary>
            Occurs when an entry is extracted.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.CabFile.EntryExtracting">
            <summary>
            Occurs when an entry is being extracted.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.CabFile.EntryAdded">
            <summary>
            Occurs when an entry has been added.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.CabFile.EntryAdding">
            <summary>
            Occurs when an entry is being added.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabFile.ExtractionOptions">
            <summary>
            Gets or sets extraction options.
            </summary>
            <value>
            The extraction options.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabFile.Mode">
            <summary>
            Gets the open mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.CabFile.CompressionLevel">
            <summary>
            Gets or sets the compression level.
            </summary>
            <value>
            The compression level.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CabFileMode">
            <summary>
            Specifies whether to compress or decompress the cab file or stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CabFileMode.Compress">
            <summary>
            Compresses the file or stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CabFileMode.Decompress">
            <summary>
            Decompresses the file or stream.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CompressionFileFormat">
            <summary>
            Defines a compression file format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CompressionFileFormat.Undefined">
            <summary>
            Unknown or unrecognised format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CompressionFileFormat.Zip">
            <summary>
            A .ZIP file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.CompressionFileFormat.Cab">
            <summary>
            A .CAB file.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.CompressionUtilities">
            <summary>
            Represents a set of compression utilities
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.CompressionUtilities.SniffFileFormat(System.String,System.Boolean)">
            <summary>
            Determines a compressed file format if possible.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="useExtensionAsHint">if set to <c>true</c> the file extension will be used.</param>
            <returns>
            The file format.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.AdvancedPropertyTab">
            <summary>
            The advanced property tab. Used with the design property grid.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.LevelPropertyTab">
            <summary>
            Defines a level property tab. Used with the design property grid.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.LevelPropertyTab.#ctor(CodeFluent.Runtime.Design.DesignLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.LevelPropertyTab"/> class.
            </summary>
            <param name="level">The level.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.LevelPropertyTab.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets the properties of the specified component that match the specified attributes and context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that indicates the context to retrieve properties from.</param>
            <param name="component">The component to retrieve properties from.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that indicates the attributes of the properties to retrieve.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that contains the properties matching the specified context and attributes.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.LevelPropertyTab.GetProperties(System.Object,System.Attribute[])">
            <summary>
            Gets the properties of the specified component that match the specified attributes.
            </summary>
            <param name="component">The component to retrieve properties from.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that indicates the attributes of the properties to retrieve.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that contains the properties.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.LevelPropertyTab.Level">
            <summary>
            Gets or sets the property tab level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.LevelPropertyTab.Bitmap">
            <summary>
            Gets the bitmap that is displayed for the <see cref="T:System.Windows.Forms.Design.PropertyTab"/>.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Drawing.Bitmap"/> to display for the <see cref="T:System.Windows.Forms.Design.PropertyTab"/>.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.LevelPropertyTab.TabName">
            <summary>
            Gets the name for the property tab.
            </summary>
            <value></value>
            <returns>
            The name for the property tab.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AdvancedPropertyTab.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AdvancedPropertyTab"/> class.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.AutoCompletion">
            <summary>
            A utility class that can display an auto complete list box.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.#ctor(System.Windows.Forms.TextBoxBase)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion"/> class.
            </summary>
            <param name="textBox">The owning text box.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.Hide">
            <summary>
            Hides the auto completion list box.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.Show">
            <summary>
            Shows the auto completion list box. If there are no items in the list, it will not be shown.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Design.AutoCompletion.TextChanged">
            <summary>
            Occurs when owning textbox text changed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.IsEnabled">
            <summary>
            Gets or sets a value indicating whether auto completion is enabled or not.
            </summary>
            <value><c>true</c> if auto completion is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.UserDismissed">
            <summary>
            Gets or sets a value indicating whether user has dismissed the list box manually using escape.
            </summary>
            <value><c>true</c> if user dismissed the list box manually; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.Font">
            <summary>
            Gets or sets the font used for the list box.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.MinimumLines">
            <summary>
            Gets or sets the minimum lines to display in the list box.
            </summary>
            <value>The minimum lines.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.MaximumLines">
            <summary>
            Gets or sets the maximum lines to display in the list box.
            </summary>
            <value>The maximum lines.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.ImageMargin">
            <summary>
            Gets or sets the image margin.
            </summary>
            <value>The image margin.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.Margin">
            <summary>
            Gets or sets the margin.
            </summary>
            <value>The margin.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.BorderStyle">
            <summary>
            Gets or sets the form border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.Images">
            <summary>
            Gets or sets the images list.
            </summary>
            <value>The images list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.Items">
            <summary>
            Gets the items to display.
            </summary>
            <value>The list of items to display.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem">
            <summary>
            Defines a item to add in the auto completion list box.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="imageIndex">Index of the image.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="imageIndex">Index of the image.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="toolTipTitle">The tool tip title.</param>
            <param name="imageIndex">Index of the image.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.IsEquivalent(CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem)">
            <summary>
            Determines if the specified item is equivalent to this one.
            </summary>
            <param name="other">Another item.</param>
            <returns>true if it is equivalent; false otherwise.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.ToolTip">
            <summary>
            Gets or sets the tool tip text.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.ToolTipTitle">
            <summary>
            Gets or sets the tool tip title.
            </summary>
            <value>The tool tip title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.ImageIndex">
            <summary>
            Gets or sets the index of the image in the images list.
            </summary>
            <value>The image index.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.AutoObject">
            <summary>
            Defines a utility class to implement objects with typed properties without private fields.
            This class supports automatically property change notifications and error validations.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoObject"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoObject"/> class.
            </summary>
            <param name="keyValuePairs">The key value pairs.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.CreatePropertiesDictionary">
            <summary>
            Creates the properties dictionary.
            </summary>
            <returns>An instance of a properties dictionary</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.Validate(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Validates this instances.
            </summary>
            <param name="errors">The errors.</param>
            <param name="memberName">The member to validate or null to validate all members.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.Validate(System.String)">
            <summary>
            Validates the specified member name.
            </summary>
            <param name="memberName">The member to validate or null to validate all members.</param>
            <returns>A string if an error occured; null otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperty``1(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Sets a property value.
            </summary>
            <typeparam name="T">The property type</typeparam>
            <param name="value">The value.</param>
            <param name="setChanged">if set to <c>true</c> set the HasChanged property to true.</param>
            <param name="trackChanged">if set to <c>true</c> the property is tracked in the changed properties.</param>
            <returns>true if the value has changed; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperty``1(System.Object,System.Boolean)">
            <summary>
            Sets a property value.
            </summary>
            <typeparam name="T">The property type</typeparam>
            <param name="value">The value.</param>
            <param name="setChanged">if set to <c>true</c> set the HasChanged property to true.</param>
            <returns>true if the value has changed; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperty``1(System.Object)">
            <summary>
            Sets a property value.
            </summary>
            <typeparam name="T">The property type</typeparam>
            <param name="value">The value.</param>
            <returns>true if the value has changed; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.GetProperty``1">
            <summary>
            Gets a property value.
            </summary>
            <typeparam name="T">The property type</typeparam>
            <returns>The value automatically converted into the requested type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.GetDefaultValue(System.String)">
            <summary>
            Gets the default value for a given property.
            </summary>
            <param name="propertyName">The property name. May not be null.</param>
            <returns>The default value. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.GetPropertyType(System.String)">
            <summary>
            Gets the type of the specified property.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <returns>An instance of the Type class</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.ArePropertiesEqual(System.Object,System.Object)">
            <summary>
            Determines if two property values are equal.
            </summary>
            <param name="value1">The value1. May be null.</param>
            <param name="value2">The value2. May be null.</param>
            <returns>true if the values are equal.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.CopyProperties(CodeFluent.Runtime.Design.AutoObject)">
            <summary>
            Copies the properties to a target object.
            </summary>
            <param name="target">The target.</param>
            <returns>true if at least one property has been changed; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.CopyProperties(CodeFluent.Runtime.Design.AutoObject,System.Boolean)">
            <summary>
            Copies the properties to a target object.
            </summary>
            <param name="target">The target.</param>
            <param name="raisePropertyChanged">if set to <c>true</c> the PropertyChanged event may be raised.</param>
            <returns>true if at least one property has been changed; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperties(System.String)">
            <summary>
            Sets properties using a comma-separated list of key/value pairs.
            All properties are cleared before set.
            </summary>
            <param name="keyValuePairs">The key value pairs.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperties(System.String,System.Boolean)">
            <summary>
            Sets properties using a comma-separated list of key/value pairs
            </summary>
            <param name="keyValuePairs">The key value pairs.</param>
            <param name="clear">if set to <c>true</c> properties are cleared before set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperty(System.String,System.Object)">
            <summary>
            Sets a specified property value.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="value">The value.</param>
            <returns>
            true if the value has changed; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperty(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets a specified property value.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="value">The value.</param>
            <param name="setChanged">if set to <c>true</c> set the HasChanged property to true.</param>
            <param name="forceRaise">if set to <c>true</c> force the raise, even if RaisePropertyChanged is set to false.</param>
            <param name="trackChanged">if set to <c>true</c> the property is tracked in the changed properties.</param>
            <returns>
            true if the value has changed; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.RollbackChangedProperties(System.Boolean,System.Boolean)">
            <summary>
            Rollbacks to the original properties.
            </summary>
            <param name="raisePropertyChanged">if set to <c>true</c> the PropertyChanged event may be raised.</param>
            <param name="setChanged">if set to <c>true</c> set the HasChanged property to true.</param>
            <returns>true if at least one property has been changed; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.GetProperty``1(System.String,``0)">
            <summary>
            Gets a property value.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="name">The property name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.OnPropertyChanging(System.String)">
            <summary>
            Called when a property is about to change.
            </summary>
            <param name="name">The property name.</param>
            <returns>true if the property can be changed; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="name">The property name.</param>
            <returns>true if the event has been raised; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.OnPropertyChanged(System.String,System.Boolean,System.Boolean)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="name">The property name.</param>
            <param name="setChanged">if set to <c>true</c> set the HasChanged property to true.</param>
            <param name="forceRaise">if set to <c>true</c> force the raise, even if RaisePropertyChanged is set to false.</param>
            <returns>
            true if the event has been raised; otherwise false.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.Design.AutoObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.ThrowOnInvalidProperty">
            <summary>
            Gets or sets a value indicating whether to throw errors if invalid properties are deserialized.
            </summary>
            <value>
            <c>true</c> if errors must be thrown when invalid properties are deserialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.RaisePropertyChanged">
            <summary>
            Gets or sets a value indicating whether property changed events are raised.
            </summary>
            <value>
            <c>true</c> if property changed events are raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.TrackChangedProperties">
            <summary>
            Gets or sets a value indicating whether property changed events are raised.
            </summary>
            <value>
            <c>true</c> if property changed events are raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.HasChanged">
            <summary>
            Gets a value indicating whether at least a property has changed since the last time this property has been set to false.
            </summary>
            <value>
            <c>true</c> if at least a property has changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.DefaultValues">
            <summary>
            Gets the properties default values.
            </summary>
            <value>The default values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.ChangedProperties">
            <summary>
            Gets the changed properties and their original values.
            </summary>
            <value>The changed properties and their original values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.Properties">
            <summary>
            Gets the properties and their values.
            </summary>
            <value>The properties and their values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.System#ComponentModel#IDataErrorInfo#Error">
            <summary>
            Gets an error message indicating what is wrong with this object.
            </summary>
            <value></value>
            <returns>
            An error message indicating what is wrong with this object. The default is an empty string ("").
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified column name.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CultureComboBox">
            <summary>
            Defines a ComboBox the enumerates cultures.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.CultureComboBox"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureComboBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.DrawItem"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.DrawItemEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.SelectedCulture">
            <summary>
            Gets or sets the selected culture.
            </summary>
            <value>The selected culture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.RememberChosenCultures">
            <summary>
            Gets a value indicating whether the combobox should remember chosen cultures.
            </summary>
            <value>
            	<c>true</c> if the editor should remember chosen cultures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.CultureTypes">
            <summary>
            Gets the culture types.
            </summary>
            <value>The culture types.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.SeparatorWidth">
            <summary>
            Gets the width of the separator.
            </summary>
            <value>The width of the separator.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CultureEditorOptions">
            <summary>
            Defines options for the Culture Editor
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.ShowName">
            <summary>
            Show the culture name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.ShowEnglishName">
            <summary>
            Show the culture english name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.ShowNativeName">
            <summary>
            Show the culture native name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.Default">
            <summary>
            The default options.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DesignLevel">
            <summary>
            Defines a design level used by the Advanced Property Grid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DesignLevel.Unspecified">
            <summary>
            Unspecified level.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DesignLevel.Normal">
            <summary>
            Normal level.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DesignLevel.Advanced">
            <summary>
            Advanced level.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DesignLevelAttribute">
            <summary>
            Specifies the level when designing using the Advanced Property Grid.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignLevelAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DesignLevelAttribute"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignLevelAttribute.#ctor(CodeFluent.Runtime.Design.DesignLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DesignLevelAttribute"/> class.
            </summary>
            <param name="level">The level.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignLevelAttribute.GetDesignLevel(System.ComponentModel.MemberDescriptor)">
            <summary>
            Gets the level for a given set of attributes.
            </summary>
            <param name="descriptor">The attributes descriptor.</param>
            <returns>The level for the passed in object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignLevelAttribute.GetDesignLevel(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Gets the level for a given set of attributes.
            </summary>
            <param name="provider">The attributes provider.</param>
            <returns>The level for the passed in object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignLevelAttribute.GetLevelProperties(System.Object,CodeFluent.Runtime.Design.DesignLevel)">
            <summary>
            Gets a properties for a given level.
            </summary>
            <param name="component">The component. May not be null.</param>
            <param name="level">The level.</param>
            <returns>A list of property descriptors at the given level.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DesignLevelAttribute.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DesignPropertyGrid">
            <summary>
            Defines an design property grid.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignPropertyGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DesignPropertyGrid"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignPropertyGrid.#ctor(CodeFluent.Runtime.Design.DesignLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DesignPropertyGrid"/> class.
            </summary>
            <param name="level">The level.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignPropertyGrid.OnContextMenuPopup(System.Object,System.EventArgs)">
            <summary>
            Called when the context menu pops up
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignPropertyGrid.OnContextMenuClick(System.Object,System.EventArgs)">
            <summary>
            Called when the context menu is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignPropertyGrid.OnSelectedObjectsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.PropertyGrid.SelectedObjectsChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DesignPropertyGrid.ValidateSelectedObject">
            <summary>
            Validates the selected object.
            </summary>
            <returns>true if the object is valid; false otherwise.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DesignPropertyGrid.Level">
            <summary>
            Gets the grid design level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockAutoHidePanel">
            <summary>
            Defines a control that will hold auto hide windows.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.#ctor(CodeFluent.Runtime.Design.DockPanel,CodeFluent.Runtime.Design.DockWindowPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockAutoHidePanel"/> class.
            </summary>
            <param name="panel">The panel.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.GetItemBounds(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Gets an item bounds.
            </summary>
            <param name="item">The item. May not be null.</param>
            <returns>An instance of the Rectangle structure.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Layout"/> event.
            </summary>
            <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Windows">
            <summary>
            Enumerates the windows.
            </summary>
            <value>The windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Horizontal">
            <summary>
            Gets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockAutoHidePanel"/> is horizontal.
            </summary>
            <value><c>true</c> if horizontal; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Vertical">
            <summary>
            Gets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockAutoHidePanel"/> is vertical.
            </summary>
            <value><c>true</c> if vertical; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Position">
            <summary>
            Gets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Items">
            <summary>
            Enumerates the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockAutoHideWindow">
            <summary>
            Defines a Form that will be used for showing items in auto hide windows.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.IDockCaptionOwner">
            <summary>
            Defines a DockCaption owner control.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Position">
            <summary>
            Gets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.#ctor(CodeFluent.Runtime.Design.DockPanel)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockAutoHideWindow"/> class.
            </summary>
            <param name="panel">The panel.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.CreateCaption">
            <summary>
            Creates an instance of the DockCaption class.
            </summary>
            <returns>An instance of the DockCaption class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnShowTimerTick(System.Object,System.EventArgs)">
            <summary>
            Called when the show timer ticks.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.InSplitter(System.Drawing.Point)">
            <summary>
            Determines if the location is over the splitter.
            </summary>
            <param name="location">The location.</param>
            <returns>true if the location is over the splitter; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.GetAutoHideSize(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Gets the size of the auto hide window, vertical or horizontal.
            </summary>
            <param name="item">The item. May not be null.</param>
            <returns>The size in pixels.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Defines the window procedure function.
            </summary>
            <param name="m">The window message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.Show(CodeFluent.Runtime.Design.DockAutoHidePanel,CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Shows the specified item using this form instance.
            </summary>
            <param name="autoHidePanel">The owning auto hide panel. May not be null.</param>
            <param name="item">The item. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.AutoHidePanel">
            <summary>
            Gets the owning auto hide panel.
            </summary>
            <value>The auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.Item">
            <summary>
            Gets the shown item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.BackPanel">
            <summary>
            Gets the back panel.
            </summary>
            <value>The back panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.Caption">
            <summary>
            Gets the caption.
            </summary>
            <value>The caption.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm">
            <summary>
            Defines a form that will be used to display a splitter bar.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockCaption">
            <summary>
            Defines a Control that will display a window caption.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.#ctor(CodeFluent.Runtime.Design.IDockCaptionOwner)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockCaption"/> class.
            </summary>
            <param name="owner">The owner. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.ShowContextMenu(System.Drawing.Point)">
            <summary>
            Shows the context menu.
            </summary>
            <param name="location">The menu location.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnContextMenuOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the context menu is opening.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnContextMenuClick(System.Object,System.EventArgs)">
            <summary>
            Called when a context menu item is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.GetButtonBounds(CodeFluent.Runtime.Design.DockCaptionButton)">
            <summary>
            Gets a caption button bounds.
            </summary>
            <param name="button">The button.</param>
            <returns>An instance of the Rectangle structure.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.CloseItem">
            <summary>
            Closes the item.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnButtonDown(System.Windows.Forms.MouseEventArgs,CodeFluent.Runtime.Design.DockCaptionButton)">
            <summary>
            Raises the <see cref="E:ButtonDown"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <param name="button">The button.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockCaption.CanClose">
            <summary>
            Gets a value indicating whether the current item can be closed.
            </summary>
            <value><c>true</c> if the current item can be closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockCaption.CanAutoHide">
            <summary>
            Gets a value indicating whether the current item can be auto hidden.
            </summary>
            <value>
            	<c>true</c> if the current item can be auto hidden; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockCaption.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockCaptionButton">
            <summary>
            Defines one of the caption buttons.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockCaptionButton.WindowPosition">
            <summary>
            The Windows Position button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockCaptionButton.AutoHideToggle">
            <summary>
            The Auto Hide toggle button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockCaptionButton.Close">
            <summary>
            The Close button.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockChildPanel">
            <summary>
            Defines the control that will hold an item's Control.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockChildPanel.#ctor(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockChildPanel"/> class.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockChildPanel.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ControlAdded"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockChildPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockChildPanel.BorderSize">
            <summary>
            Gets or sets the border size.
            </summary>
            <value>The border size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockChildPanel.Window">
            <summary>
            Gets the owning window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockDropForm">
            <summary>
            Defines the utility Form that will be used to display dock drop bitmaps.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockDropForm.MoveThreshold">
            <summary>
            Defines the drag move threshold.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.#ctor(CodeFluent.Runtime.Design.DockPanel,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockDropForm"/> class.
            </summary>
            <param name="panel">The panel.</param>
            <param name="locationOffset">The location offset.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnTop(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel top.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel top.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnBottom(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel bottom.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel bottom.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnLeft(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel left.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel left.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnRight(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel right.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel right.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropCenter(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control center.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control center.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropCenter(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this center.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this center.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropTop(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control top.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control top.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropTop(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this top.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this top.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropLeft(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control left.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control left.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropLeft(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this left.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this left.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropRight(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control right.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control right.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropRight(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this right.
            </summary>
            <param name="location">The location.</param>
            <returns>
            true if the location points to this right.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropBottom(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control bottom.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control bottom.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropBottom(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this bottom.
            </summary>
            <param name="location">The location.</param>
            <returns>
            true if the location points to this bottom.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.HandleMouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Collections.Generic.IEnumerable{CodeFluent.Runtime.Design.DockWindow},CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Handles the mouse up event.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="location">The location.</param>
            <param name="windows">The windows. May be null.</param>
            <param name="item">The item. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.HandleMouseMove(System.Windows.Forms.Control,System.Drawing.Point,CodeFluent.Runtime.Design.DockWindow,CodeFluent.Runtime.Design.DockFloatWindow,System.Drawing.Size)">
            <summary>
            Handles the mouse move event.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="location">The location.</param>
            <param name="moving">The moving window.</param>
            <param name="floatMoving">The moving float window.</param>
            <param name="floatSize">Float size.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.Canceled">
            <summary>
            Gets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockDropForm"/> drop operation is canceled.
            </summary>
            <value><c>true</c> if canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.LocationOffset">
            <summary>
            Gets or sets the initial drag location offset.
            </summary>
            <value>The location offset.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.SelectionForm">
            <summary>
            Gets the selection form.
            </summary>
            <value>The selection form.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.FloatDropForm">
            <summary>
            Gets float drop form.
            </summary>
            <value>The float drop form.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.Panel">
            <summary>
            Gets the owning panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.DropWindow">
            <summary>
            Gets the window where the cursor was dropped.
            </summary>
            <value>The drop window.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.DropItem">
            <summary>
            Gets the window item where the cursor was dropped.
            </summary>
            <value>The drop item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.TargetItem">
            <summary>
            Gets the target item where the cursor was dropped.
            </summary>
            <value>The target item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.DropWindowPosition">
            <summary>
            Gets the drop window position or null if the cursor was not dropped near a border.
            </summary>
            <value>The drop window position.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.DropCenterBounds">
            <summary>
            Gets or sets the drop center bounds.
            </summary>
            <value>The drop center bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.SelectionBounds">
            <summary>
            Gets or sets the selection bounds.
            </summary>
            <value>The selection bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockDropSelectionForm">
            <summary>
            Defines a utility Form to display the selection box of the DockPanel control.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropSelectionForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockDropSelectionForm"/> class.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropSelectionForm.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockFloatDropForm">
            <summary>
            Defines the utility Form that will be used to display dock drop bitmaps on floating windows.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.#ctor(CodeFluent.Runtime.Design.DockPanel)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockFloatDropForm"/> class.
            </summary>
            <param name="panel">The panel.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropCenter(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this center.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this center.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropBottom(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel bottom.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel bottom.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropTop(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this top.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this top.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropRight(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this right.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this right.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropLeft(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this left.
            </summary>
            <param name="screenLocation">The location.</param>
            <returns>
            true if the location points to this left.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatDropForm.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatDropForm.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatDropForm.DropCenterBounds">
            <summary>
            Gets or sets the drop center bounds.
            </summary>
            <value>The drop center bounds.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockFloatWindow">
            <summary>
            Defines a floating window in the DockPanel.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.IDockWindowOwner">
            <summary>
            Defines a DockWindow owner Control.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.IDockWindowOwner.PerformLayout">
            <summary>
            Performs the layout.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockWindowOwner.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockWindowOwner.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockWindowOwner.BackColor">
            <summary>
            Gets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockWindowOwner.Windows">
            <summary>
            Gets a list of windows.
            </summary>
            <value>The windows.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockFloatWindow"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.GetWindowFromPoint(System.Drawing.Point)">
            <summary>
            Gets a window from a screen location.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>An instance of the DockWindow class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Closed"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnContextMenuClick(System.Object,System.EventArgs)">
            <summary>
            Called when a context menu item is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnContextMenuOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the context menu is opening.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Defines the window procedure function.
            </summary>
            <param name="m">The window message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:Layout"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.ComputeDockedWindows">
            <summary>
            Computes the docked windows layout.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindow.Windows">
            <summary>
            Gets the list of windows in the floating window.
            </summary>
            <value>The windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindow.Index">
            <summary>
            Gets the index in the panel's collection of floating windows.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindow.Panel">
            <summary>
            Gets or sets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockFloatWindowCollection">
            <summary>
            Defines a collection of DockFloatWindows.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.IndexOf(CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Insert(System.Int32,CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Add(CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Contains(CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.CopyTo(CodeFluent.Runtime.Design.DockFloatWindow[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Remove(CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockFloatWindowCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindowCollection.Panel">
            <summary>
            Gets the owner panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.DockFloatWindow"/> at the specified index.
            </summary>
            <value>A window item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindowCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockItem">
            <summary>
            Represents a docked item. A docked item contains a Control that will be rendered when the item is selected.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItem.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItem.UpdateWindow">
            <summary>
            Updates the owning window.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItem.SetSelected(System.Boolean)">
            <summary>
            Selects or unselects the item.
            </summary>
            <param name="value">if set to <c>true</c> the item is selected; otherwise the item is unselected.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Window">
            <summary>
            Gets the containing window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.AutoHideSize">
            <summary>
            Gets or sets the size of the item when it is docked in an auto hide window.
            </summary>
            <value>The size of the auto hide.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Image">
            <summary>
            Gets or sets the image. May be null.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.FloatBounds">
            <summary>
            Gets or sets the floating bounds.
            </summary>
            <value>The float bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Selected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockItem"/> is selected.
            </summary>
            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.CanClose">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockItem"/> can be closed.
            </summary>
            <value><c>true</c> if this item can be closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.CanAutoHide">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockItem"/> can be auto hidden.
            </summary>
            <value><c>true</c> if this item can be auto hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Control">
            <summary>
            Gets or sets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockItemCollection">
            <summary>
            Defines a collection of DockItems.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.IndexOf(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Insert(System.Int32,CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Move(CodeFluent.Runtime.Design.DockItem,System.Int32)">
            <summary>
            Moves the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="index">The new index.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Add(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Contains(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.CopyTo(CodeFluent.Runtime.Design.DockItem[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Remove(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockItemCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItemCollection.Window">
            <summary>
            Gets the owner window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.DockItem"/> at the specified index.
            </summary>
            <value>A window item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockItemEventArgs">
            <summary>
            Provides data for the dock item events.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemEventArgs.#ctor(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockItemEventArgs"/> class.
            </summary>
            <param name="item">The item. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItemEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockLayoutPanel">
            <summary>
            Defines a TableLayoutPanel that is optimized for double-buffering.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockLayoutPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockLayoutPanel"/> class.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockPanel">
            <summary>
            Defines a dock panel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockPanel"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.OnItemClosing(System.Object,CodeFluent.Runtime.Design.DockItemEventArgs)">
            <summary>
            Called when an item is closing.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:CodeFluent.Runtime.Design.DockItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.OnItemClosed(System.Object,CodeFluent.Runtime.Design.DockItemEventArgs)">
            <summary>
            Called when an item is closed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:CodeFluent.Runtime.Design.DockItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateHandle">
            <summary>
            Creates a handle for the control.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateSelectionForm">
            <summary>
            Creates a selection form.
            </summary>
            <returns>An instance of the Form class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateFloatWindow">
            <summary>
            Creates a float window.
            </summary>
            <returns>An instance of the DockFloatWindow class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateDropForm(System.Drawing.Point)">
            <summary>
            Creates a drop form.
            </summary>
            <param name="locationOffset">The location offset.</param>
            <returns>An instance of the DockDropForm class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateFloatDropForm">
            <summary>
            Creates a float drop form.
            </summary>
            <returns>An instance of the DockFloatDropForm class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateAutoHideWindow">
            <summary>
            Creates an auto hide window.
            </summary>
            <returns>An instance of the DockAutoHideWindow class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateAutoHidePanel(CodeFluent.Runtime.Design.DockWindowPosition)">
            <summary>
            Creates an auto hide panel.
            </summary>
            <param name="position">The position.</param>
            <returns>An instance of the DockAutoHidePanel class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.Dispose(System.Boolean)">
            <summary>
            Releases disposable resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.GetWindowFromPoint(System.Drawing.Point)">
            <summary>
            Gets the window from a screen location.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>An instance of the DockWindow class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.GetFloatWindowFromPoint(System.Drawing.Point)">
            <summary>
            Gets the floating window a screen location.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>An instance of the DockFloatWindow class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CloseItem(System.String)">
            <summary>
            Gets the item with the specified name.
            </summary>
            <param name="name">The name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.GetItem(System.String)">
            <summary>
            Gets the item with the specified name.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>An instance of the DockItem class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.Clear">
            <summary>
            Clears this panel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateContextMenu(System.EventHandler)">
            <summary>
            Creates the context menu.
            </summary>
            <param name="onItemClick">The handler for item click.</param>
            <returns>An instance of the ContextMenuStrip class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:Layout"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.ComputeFloatWindows">
            <summary>
            Computes the floating windows layout.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.ComputeAutoHideWindows">
            <summary>
            Computes the auto hide windows layout.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.BuildSplitWindowsControl(System.Collections.Generic.IEnumerable{CodeFluent.Runtime.Design.DockWindow})">
            <summary>
            Builds the main split control.
            </summary>
            <param name="windows">The list of windows.</param>
            <returns>An instance of the Control class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.ComputeDockedWindows">
            <summary>
            Computes the docked windows layout.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.LoadLayout(System.String)">
            <summary>
            Loads the layout from a string.
            </summary>
            <param name="layout">The layout string.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.LoadItemLayout(CodeFluent.Runtime.Design.DockItem,System.Xml.XmlElement)">
            <summary>
            Loads an item layout from an XmlElement.
            </summary>
            <param name="item">The item. May not be null.</param>
            <param name="element">The element. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.LoadWindowLayout(CodeFluent.Runtime.Design.DockWindow,System.Xml.XmlElement)">
            <summary>
            Loads a window layout from an XmlElement.
            </summary>
            <param name="window">The window. May not be null.</param>
            <param name="element">The element. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.SaveItemLayout(CodeFluent.Runtime.Design.DockItem,System.Xml.XmlElement)">
            <summary>
            Saves an item layout to an XmlElement.
            </summary>
            <param name="item">The item. May not be null.</param>
            <param name="element">The element. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.SaveWindowLayout(CodeFluent.Runtime.Design.DockWindow,System.Xml.XmlElement)">
            <summary>
            Saves a window layout to an XmlElement.
            </summary>
            <param name="window">The window. May not be null.</param>
            <param name="element">The element. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.SaveLayout">
            <summary>
            Saves the layout.
            </summary>
            <returns>A string representing the layout</returns>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockPanel.ItemClosing">
            <summary>
            Occurs when an item is closing.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockPanel.ItemClosed">
            <summary>
            Occurs when an item is closed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropCenterImage">
            <summary>
            Gets the dock drop center image.
            </summary>
            <value>The dock drop center image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropTopImage">
            <summary>
            Gets the dock drop top image.
            </summary>
            <value>The dock drop top image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropBottomImage">
            <summary>
            Gets the dock drop bottom image.
            </summary>
            <value>The dock drop bottom image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropLeftImage">
            <summary>
            Gets the dock drop left image.
            </summary>
            <value>The dock drop left image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropRightImage">
            <summary>
            Gets the dock drop right image.
            </summary>
            <value>The dock drop right image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.CaptionImages">
            <summary>
            Gets the caption images.
            </summary>
            <value>The caption images.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.BackPanel">
            <summary>
            Gets the back panel.
            </summary>
            <value>The back panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.Windows">
            <summary>
            Gets the list of docked windows.
            </summary>
            <value>The windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.FloatWindows">
            <summary>
            Gets the list of floating windows.
            </summary>
            <value>The float windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.AutoHideWindow">
            <summary>
            Gets the auto hide window.
            </summary>
            <value>The auto hide window.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.AllItems">
            <summary>
            Enumerates all items.
            </summary>
            <value>All items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.AutoHidePanels">
            <summary>
            Gets the collection of all auto hide panels.
            </summary>
            <value>The auto hide panels.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.TopAutoHidePanel">
            <summary>
            Gets the top auto hide panel.
            </summary>
            <value>The top auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.BottomAutoHidePanel">
            <summary>
            Gets the bottom auto hide panel.
            </summary>
            <value>The bottom auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.LeftAutoHidePanel">
            <summary>
            Gets the left auto hide panel.
            </summary>
            <value>The left auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.RightAutoHidePanel">
            <summary>
            Gets the right auto hide panel.
            </summary>
            <value>The right auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.WindowCaption">
            <summary>
            Gets the window caption brush.
            </summary>
            <value>The window caption brush.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.CapturedWindowCaption">
            <summary>
            Gets the captured window caption brush.
            </summary>
            <value>The captured window caption brush.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.WindowCaptionText">
            <summary>
            Gets the window caption text brush.
            </summary>
            <value>The window caption text brush.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.WindowBorderPen">
            <summary>
            Gets the window border pen brush.
            </summary>
            <value>The window border pen brush.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.TabsListPadding">
            <summary>
            Gets or sets the tabs list padding.
            </summary>
            <value>The tab list padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.TabsListHeight">
            <summary>
            Gets or sets the height of the tabs list.
            </summary>
            <value>The height of the tab list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.CaptionHeight">
            <summary>
            Gets or sets the height of the caption.
            </summary>
            <value>The height of the caption.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.AutoHideWindows">
            <summary>
            Enumerates the auto hide windows.
            </summary>
            <value>The auto hide windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockedWindows">
            <summary>
            Enumerates the docked windows.
            </summary>
            <value>The docked windows.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockTabsList">
            <summary>
            Defines a Control that renders a Window's tabs list.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockTabsList.Radius">
            <summary>
            Defines the tabs radius.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.#ctor(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockTabsList"/> class.
            </summary>
            <param name="window">The owning window.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.GetItemAt(System.Int32,System.Int32)">
            <summary>
            Gets the item at a specified position.
            </summary>
            <param name="x">The position x-coordinate.</param>
            <param name="y">The position y-coordinate.</param>
            <returns>An instance of the DockItem class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.GetItemBounds(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Gets the bounds of a specified item.
            </summary>
            <param name="item">The item. May not be null.</param>
            <returns>An instance of the Rectangle structure.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Layout"/> event.
            </summary>
            <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.ComputeLayout">
            <summary>
            Computes the layout.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockTabsList.Window">
            <summary>
            Gets the owning window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindow">
            <summary>
            Defines a window in the DockPanel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockWindow"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:Layout"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.CreateCaption">
            <summary>
            Creates an instance of the DockCaption class.
            </summary>
            <returns>An instance of the DockCaption class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.CreateTabsList">
            <summary>
            Creates an instance of the DockTabsList class.
            </summary>
            <returns>An instance of the DockTabsList class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.CreateChildPanel">
            <summary>
            Creates an instance of the DockChildPanel class.
            </summary>
            <returns>An instance of the DockChildPanel class.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Caption">
            <summary>
            Gets the caption control.
            </summary>
            <value>The caption.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.TabsList">
            <summary>
            Gets the tabs list control.
            </summary>
            <value>The tab list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.ChildPanel">
            <summary>
            Gets the child panel.
            </summary>
            <value>The child panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Items">
            <summary>
            Gets the collection of items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.SplitterDistance">
            <summary>
            Gets the splitter distance.
            </summary>
            <value>The splitter distance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.AutoHidePanel">
            <summary>
            Gets the auto hide panel if the window is auto hidden.
            </summary>
            <value>The auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.HideTabsListIfOnlyOneItem">
            <summary>
            Gets or sets a value indicating whether to hide tabs list if the window contains only one item.
            </summary>
            <value>
            	<c>true</c> if the tabs list is hidden when the window contains only one item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.PositionRelativeTo">
            <summary>
            Gets or sets the window this window position is relative to.
            </summary>
            <value>The window this window position is relative to or null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.SelectedItem">
            <summary>
            Gets the selected item.
            </summary>
            <value>The selected item or null..</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindowCollection">
            <summary>
            Defines a collection of DockWindows.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.IndexOf(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Insert(System.Int32,CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Add(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Contains(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.CopyTo(CodeFluent.Runtime.Design.DockWindow[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Remove(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockWindowCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindowCollection.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.DockWindow"/> at the specified index.
            </summary>
            <value>A window item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindowCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindowMenuItem">
            <summary>
            Defines the list of well-known menu items for a window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMenuItem.Dock">
            <summary>
            Docks the window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMenuItem.Float">
            <summary>
            Transform the window in a floating window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMenuItem.Hide">
            <summary>
            Hide the window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMenuItem.AutoHide">
            <summary>
            Transform the window in an auto hide window.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindowMode">
            <summary>
            Defines a window mode.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMode.Dock">
            <summary>
            The window is docked.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMode.Hide">
            <summary>
            The window is hidden.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMode.AutoHide">
            <summary>
            The window is auto hidden.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindowPosition">
            <summary>
            Defines position for a docked window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowPosition.Top">
            <summary>
            The window is positioned at the top.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowPosition.Bottom">
            <summary>
            The window is positioned at the bottom.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowPosition.Left">
            <summary>
            The window is positioned at the left.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowPosition.Right">
            <summary>
            The window is positioned at the right.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.EnumTypeConverter">
            <summary>
            Defines a type converter that displays flags enum without the value that corresponds to zero.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.OpenDialog">
            <summary>
            Prompts the user to open a file or directory.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.OpenDialog"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenDialog.OnFiltersCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the filters collection has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenDialog.ShowDialog(System.Windows.Interop.IWin32Window)">
            <summary>
            Shows the dialog.
            </summary>
            <param name="owner">The owner.</param>
            <returns>The dialog result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
            Shows the dialog.
            </summary>
            <param name="owner">The owner.</param>
            <returns>The dialog result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenDialog.ShowDialog(System.IntPtr)">
            <summary>
            Shows the dialog.
            </summary>
            <param name="owner">The owner.</param>
            <returns>The dialog result.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.ItemPath">
            <summary>
            Gets or sets the file or directory path. May be null.
            </summary>
            <value>
            The item path.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.InitialDirectory">
            <summary>
            Gets or sets the initial directory. May be null.
            </summary>
            <value>
            The initial directory.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.Title">
            <summary>
            Gets or sets the dialog title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.Filters">
            <summary>
            Gets the filters.
            </summary>
            <value>
            The filters.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.FilterIndex">
            <summary>
            Gets or sets the filter index.
            </summary>
            <value>
            The filter index.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.Filter">
            <summary>
            Gets or sets the filters represented as a string compatible with the OpenFileDialog class.
            </summary>
            <value>
            The filters as a string.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.PickFolders">
            <summary>
            Gets or sets a value indicating whether to present an Open dialog that offers a choice of folders rather than files.
            </summary>
            <value>
            <c>true</c> if presenting an Open dialog that offers a choice of folders rather than files; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.AddToRecendDocuments">
            <summary>
            Gets or sets a value indicating whether adding the item being opened or saved to the recent documents list.
            </summary>
            <value>
            <c>true</c> if adding the item being opened or saved to the recent documents list; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.DereferenceLinks">
            <summary>
            Gets or sets a value indicating whether shortcuts should not be treated as their target items. This allows an application to open a .lnk file rather than what that file is a shortcut to.
            </summary>
            <value>
            <c>true</c> if shortcuts should not be treated as their target items; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.CreatePrompt">
            <summary>
            Gets or sets a value indicating whether prompting for creation if the item returned in the save dialog does not exist. Note that this does not actually create the item.
            </summary>
            <value>
            <c>true</c> if prompting for creation if the item returned in the save dialog does not exist; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.OverwritePrompt">
            <summary>
            Gets or sets a value indicating whether when saving a file, prompt before overwriting an existing file of the same name.
            </summary>
            <value>
            <c>true</c> if prompt before overwriting an existing file of the same name; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.HideMruPlaces">
            <summary>
            Gets or sets a value indicating whether hiding the list of places from which the user has recently opened or saved items. This value is not supported as of Windows 7.
            </summary>
            <value>
            <c>true</c> if hiding the list of places from which the user has recently opened or saved items; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.HidePinnedPlaces">
            <summary>
            Gets or sets a value indicating whether hiding items shown by default in the view's navigation pane.
            </summary>
            <value>
            <c>true</c> if hiding items shown by default in the view's navigation pane; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.TestFileCreate">
            <summary>
            Gets or sets a value indicating whether testing whether creation of the item as specified in the Save dialog will be successful. If this flag is not set, the calling application must handle errors, such as denial of access, discovered when the item is created.
            </summary>
            <value>
            <c>true</c> if testing whether creation of the item as specified in the Save dialog will be successful; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.ReturnReadOnly">
            <summary>
            Gets or sets a value indicating whether returning read-only items.
            </summary>
            <value>
            <c>true</c> if returning read-only items; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.ChangeDirectory">
            <summary>
            Gets or sets a value indicating whether the dialog can change the current directory.
            </summary>
            <value>
            <c>true</c> if the dialog can change the current directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.ForcePreviewPaneOn">
            <summary>
            Gets or sets a value indicating whether indicating to the Open dialog box that the preview pane should always be displayed.
            </summary>
            <value>
            <c>true</c> if indicating to the Open dialog box that the preview pane should always be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.ForceShowHidden">
            <summary>
            Gets or sets a value indicating whether including hidden and system items.
            </summary>
            <value>
            <c>true</c> if including hidden and system items; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.ForceFileSystem">
            <summary>
            Gets or sets a value indicating whether returned items are file system items.
            </summary>
            <value>
            <c>true</c> if returned items are file system items; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.EnableAllNonStorageItems">
            <summary>
            Gets or sets a value indicating whether enabling the user to choose any item in the Shell namespace.
            </summary>
            <value>
            <c>true</c> if the user is enabled to choose any item in the Shell namespace; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.Validate">
            <summary>
            Gets or sets a value indicating whether checking for situations that would prevent an application from opening the selected file, such as sharing violations or access denied errors.
            </summary>
            <value>
            <c>true</c> if checking for situations that would prevent an application from opening the selected file, such as sharing violations or access denied errors; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.CheckPathExists">
            <summary>
            Gets or sets a value indicating whether the item returned must be in an existing folder.
            </summary>
            <value>
            <c>true</c> if the item returned must be in an existing folder; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenDialog.CheckFileExists">
            <summary>
            Gets or sets a value indicating whether the item returned must exist.
            </summary>
            <value>
            <c>true</c> if the item returned must exist; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.GuidEditor">
            <summary>
            Defines a UITypeEditor for Guid types.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.GuidEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.GuidEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="F:CodeFluent.Runtime.Design.GuidEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.GuidEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.GuidEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.IComponentWrapper">
            <summary>
            This class supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IComponentWrapper.Component">
            <summary>
            Gets the wrapped component.
            </summary>
            <value>The wrapped component.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.IEditorForm">
            <summary>
            This class supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.IEditorForm.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IEditorForm.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IEditorForm.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IEditorForm.Value">
            <summary>
            Gets or sets the edited value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.NameTypeConverter">
            <summary>
            Provides a simple type converter to display a name for any object.
            Uses IDisplayable interface, ICodeFluentEntity interface and ultimately searches for a property called DisplayName or Name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.NameTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.NameTypeConverter"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.NameTypeConverter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.NameTypeConverter"/> class.
            </summary>
            <param name="propertyName">Name of the property to search. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.NameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.NameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.NormalPropertyTab">
            <summary>
            The normal property tab. Used with the design property grid.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.NormalPropertyTab.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.NormalPropertyTab"/> class.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.NormalPropertyTab.TabName">
            <summary>
            Gets the name of the tab.
            </summary>
            <value>The name of the tab.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.NumberTextBox`1">
            <summary>
            Defines a TextBox that only accept numbers.
            </summary>
            <typeparam name="T">The number type.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Design.NumberTextBox`1.HandleOnKeyPress(System.Windows.Forms.TextBoxBase,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Handles the processing of the KeyPress event.
            </summary>
            <param name="textBox">The text box. May not be null.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.NumberTextBox`1.HandleWndProc(System.Windows.Forms.TextBoxBase,System.Windows.Forms.Message@)">
            <summary>
            Handles the processing of Windows messages.
            </summary>
            <param name="textBox">The text box. May not be null.</param>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.NumberTextBox`1.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.NumberTextBox`1.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.NumberTextBox`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.OpenDialogFilter">
            <summary>
            Defines a filter for the OpenDialog class.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.OpenDialogFilter.Name">
            <summary>
            Defines the friendly name of the filter.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.OpenDialogFilter.Spec">
            <summary>
            Defines the filter pattern.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenDialogFilter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.OpenUrlEditor">
            <summary>
            Defines a UITypeEditor that navigates to the url defined by the associated property.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenUrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenUrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.OpenUrlEditorAttribute">
            <summary>
            Defines an attribute used by the OpenUrlEditor.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenUrlEditorAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.OpenUrlEditorAttribute"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenUrlEditorAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.OpenUrlEditorAttribute"/> class.
            </summary>
            <param name="urlFormat">The URL format to use. If null, the "{0}" will be used.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenUrlEditorAttribute.UrlFormat">
            <summary>
            Gets or sets the URL format. The {0} token corresponds to the property value.
            </summary>
            <value>
            The URL format.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.OpenUrlEditorAttribute.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.OpenUrlEditorAttributeOptions">
            <summary>
            Defines options for the OpenUrlEditorAttribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.OpenUrlEditorAttributeOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.OpenUrlEditorAttributeOptions.UseInternetExplorer">
            <summary>
            Use Internet Explorer
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.OpenUrlEditorAttributeOptions.UseWindowsExplorer">
            <summary>
            Use Windows Explorer.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.OpenWithEditor">
            <summary>
            Defines a UITypeEditor for file paths.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenWithEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenWithEditor.Open(System.String)">
            <summary>
            Opens the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenWithEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.Preview">
            <summary>
            Defines a form to display blob images preview.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.Preview.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.Preview"/> class.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.Preview.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.Preview.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.Preview.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.PreviewEditor">
            <summary>
            Provides a user interface for displaying blob image data. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PreviewEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"></see> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"></see> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"></see> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"></see>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PreviewEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"></see> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.PreviewObject">
            <summary>
            Defines an object used for previewing blob image data.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PreviewObject.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.PreviewObject"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.PreviewObject.Value">
            <summary>
            Gets the current instance value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.PreviewObject.DisplayName">
            <summary>
            Gets the current instance display name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ReadOnlyCollectionEditor">
            <summary>
            Defines a read-only collection editor.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReadOnlyCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.ReadOnlyCollectionEditor"/> class.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReadOnlyCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm"/> to provide as the user interface for editing the collection.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonButton">
            <summary>
            Defines a ribbon button.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonItem">
            <summary>
            Defines a ribbon item.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonControl.IClickable">
            <summary>
            Defines an interface implemented by ribbon items that can be clicked.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonControl">
            <summary>
            Defines a simple ribbon control.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonControl.IconSize">
            <summary>
            Defines the icon size. Currently equal to 32.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonControl.SmallIconSize">
            <summary>
            Defines the small icon size. Currently equal to 16.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonControl.ArrowWidth">
            <summary>
            Defines the arrow width. Currently equal to 6.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonControl.ArrowHeight">
            <summary>
            Defines the arrow height. Currently equal to 4.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonControl"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left"/> property value of the control.</param>
            <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top"/> property value of the control.</param>
            <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width"/> property value of the control.</param>
            <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height"/> property value of the control.</param>
            <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified"/> values.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.CreateAccessibilityInstance">
            <summary>
            Creates a new accessibility object for the control.
            </summary>
            <returns>
            A new <see cref="T:System.Windows.Forms.AccessibleObject"/> for the control.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.GetItemAt(System.Drawing.Point)">
            <summary>
            Gets the item at a given position.
            </summary>
            <param name="position">The position.</param>
            <returns>An instance of a ribbon item or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnItemMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is clicked on an item.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:Layout"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RaiseClick(CodeFluent.Runtime.Design.RibbonControl.IClickable)">
            <summary>
            Raises click events.
            </summary>
            <param name="clickable">The clickable object. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RaiseClick(CodeFluent.Runtime.Design.RibbonControl.IClickable,System.Windows.Forms.MouseButtons)">
            <summary>
            Raises click events.
            </summary>
            <param name="clickable">The clickable object. May not be null.</param>
            <param name="buttons">The buttons.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RaiseClick(CodeFluent.Runtime.Design.RibbonControl.IClickable,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises click events.
            </summary>
            <param name="clickable">The clickable object. May not be null.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.ComputeActiveTabBounds">
            <summary>
            Computes the active tab bounds.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.ComputeBounds">
            <summary>
            Computes the ribbon and children bounds.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.MeasureOptimalText(CodeFluent.Runtime.Design.RibbonItemMode,System.String,System.Int32)">
            <summary>
            Measures the optimal size for a given text.
            </summary>
            <param name="mode">The ribbon item mode.</param>
            <param name="text">The input text.</param>
            <param name="maxLines">The maximumn number of lines.</param>
            <returns>A size instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:PaintBackground"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Design.RibbonControl.ItemMouseClick">
            <summary>
            Occurs when the mouse is clicked on an item. An Item can be a ribbon item or a ribbon dropdown item.
            An item implements the IClickable interface.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonImages">
            <summary>
            Gets the built-in ribbon images.
            </summary>
            <value>The ribbon images.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.Style">
            <summary>
            Gets or sets the ribbon style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ItemsPadding">
            <summary>
            Gets or sets the items padding.
            </summary>
            <value>The items padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.SmallItemsPadding">
            <summary>
            Gets or sets the small items padding.
            </summary>
            <value>The small items padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.PanelsPadding">
            <summary>
            Gets or sets the panels padding.
            </summary>
            <value>The panels padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabHeaderPadding">
            <summary>
            Gets or sets the tab header padding.
            </summary>
            <value>The tab header padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabHeaderRadius">
            <summary>
            Gets or sets the tab header radius.
            </summary>
            <value>The tab header radius.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabHeaderTopPadding">
            <summary>
            Gets or sets the tab header top padding.
            </summary>
            <value>The tab header top padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ShadowSize">
            <summary>
            Gets or sets the size of the shadow.
            </summary>
            <value>The size of the shadow.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabHeaderSeparatorWidth">
            <summary>
            Gets or sets the width of the tab header separator.
            </summary>
            <value>The width of the tab header separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Drawing.Font"/> to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont"/> property.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.FirstTabOffset">
            <summary>
            Gets or sets the first tab offset.
            </summary>
            <value>The first tab offset.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IsMinimizeBoxHighlighted">
            <summary>
            Gets or sets a value indicating whether this instance minimize box is highlighted.
            </summary>
            <value>
            	<c>true</c> if this instance minimize box is highlighted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.MinimizeBox">
            <summary>
            Gets or sets a value indicating whether a minimize box must be shown.
            </summary>
            <value><c>true</c> if a minimize box must be shown; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IsMinimized">
            <summary>
            Gets or sets a value indicating whether this instance is minimized.
            </summary>
            <value>
            	<c>true</c> if this instance is minimized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ImageList">
            <summary>
            Gets or sets the image list used for icons.
            </summary>
            <value>The image list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.AutoImageList">
            <summary>
            Gets the 32x32 image list computed from the SmallImageList.
            </summary>
            <value>The auto image list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.AutoSmallImageList">
            <summary>
            Gets the 16x16 image list computed from the ImageList.
            </summary>
            <value>The auto small image list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.SmallImageList">
            <summary>
            Gets or sets the image list used for small icons.
            </summary>
            <value>The small image list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ActiveTab">
            <summary>
            Gets the active tab.
            </summary>
            <value>The active tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabsPanelsBounds">
            <summary>
            Gets the tabs panels bounds.
            </summary>
            <value>The tabs panels bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabsHeadersBounds">
            <summary>
            Gets the tabs headers bounds.
            </summary>
            <value>The tabs headers bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.SuspendTooltips">
            <summary>
            Gets or sets a value indicating whether tooltips are suspended.
            </summary>
            <value><c>true</c> if tooltips are suspended; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ShowHeaderSeparators">
            <summary>
            Gets or sets a value indicating whether header separators must be shown.
            </summary>
            <value>
            	<c>true</c> if header separators must be shown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.VisibleItems">
            <summary>
            Gets the visible items.
            </summary>
            <value>The visible items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.VisibleTabs">
            <summary>
            Gets the visible tabs.
            </summary>
            <value>The visible tabs.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.Tabs">
            <summary>
            Gets the tabs.
            </summary>
            <value>The tabs.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.MinimizeBoxBackBounds">
            <summary>
            Gets the minimize box background bounds.
            </summary>
            <value>The minimize box back bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.MinimizeBoxBounds">
            <summary>
            Gets the minimize box bounds.
            </summary>
            <value>The minimize box bounds.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonControl.IClickable">
            <summary>
            Defines an interface implemented by ribbon items that can be clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.IClickable.RaiseOnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the on mouse click event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IClickable.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IClickable.RaiseRibbonMouseClick">
            <summary>
            Gets a value indicating whether mouse click must be raised at ribbon control level.
            </summary>
            <value>
            	<c>true</c> if mouse click must be raised at ribbon control; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IClickable.Location">
            <summary>
            Gets the click location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon control.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonControl)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>
            The number of children belonging to an accessible object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the accessible child corresponding to the specified index.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.Name">
            <summary>
            Gets or sets the accessible object name.
            </summary>
            <value></value>
            <returns>
            The accessible object name.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.Owner">
            <summary>
            Gets the owner of the accessible object.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Windows.Forms.Control"/> that owns the <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonItem"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonItem"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.OnMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is clicked on this item.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.ComputeBounds">
            <summary>
            Computes the item and children bounds.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the item.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.PaintHighlighted(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the highlighted box.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Design.RibbonItem.MouseClick">
            <summary>
            Occurs when the mouse is clicked on this item.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Y">
            <summary>
            Gets or sets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.TooltipText">
            <summary>
            Gets or sets the tooltip text.
            </summary>
            <value>The tooltip text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Icon">
            <summary>
            Gets the icon.
            </summary>
            <value>The icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.SmallIcon">
            <summary>
            Gets the small icon.
            </summary>
            <value>The small icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.RaiseItemMouseClick">
            <summary>
            Gets a value indicating whether mouse click must be raised at ribbon control level.
            </summary>
            <value>
            	<c>true</c> if mouse click must be raised at ribbon control; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ComputedMode">
            <summary>
            Gets or sets the computed mode.
            </summary>
            <value>The computed mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IconIndex">
            <summary>
            Gets or sets the index of the icon.
            </summary>
            <value>The index of the icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.SmallIconIndex">
            <summary>
            Gets or sets the index of the small icon.
            </summary>
            <value>The index of the small icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IsDisabled">
            <summary>
            Gets a value indicating whether this instance is disabled.
            </summary>
            <value>
            	<c>true</c> if this instance is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IsHighlighted">
            <summary>
            Gets or sets a value indicating whether this instance is highlighted.
            </summary>
            <value>
            	<c>true</c> if this instance is highlighted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ColumnIndex">
            <summary>
            Gets the index of the column in the panel.
            </summary>
            <value>The index of the column.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.LineIndex">
            <summary>
            Gets the index of the line in the panel.
            </summary>
            <value>The index of the line.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Panel">
            <summary>
            Gets the owner panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.AccessibleObject">
            <summary>
            Gets the accessible object.
            </summary>
            <value>The accessible object.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon item.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject"/> class.
            </summary>
            <param name="item">The owner item.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Item">
            <summary>
            Gets the owner item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Description">
            <summary>
            Gets a string that describes the visual appearance of the specified object. Not all objects have a description.
            </summary>
            <value></value>
            <returns>
            A description of the object's visual appearance to the user, or null if the object does not have a description.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonButton"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonButton"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonButton.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the item.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonButton.DrawText">
            <summary>
            Gets a value indicating whether text will be drawn.
            </summary>
            <value><c>true</c> if text will be drawn; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonButton.ForeColor">
            <summary>
            Gets the text color.
            </summary>
            <value>The text color.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownItem">
            <summary>
            Defines a ribbon dropdown item.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.OnMouseClick(System.Object,System.EventArgs)">
            <summary>
            Called when the mouse is clicked on this item.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Design.RibbonDropDownItem.MouseClick">
            <summary>
            Occurs when the mouse is clicked on the item.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.AccessibleObject">
            <summary>
            Gets the accessible object.
            </summary>
            <value>The accessible object.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Icon">
            <summary>
            Gets the icon.
            </summary>
            <value>The icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.IconIndex">
            <summary>
            Gets or sets the index of the icon.
            </summary>
            <value>The index of the icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.IsChecked">
            <summary>
            Gets or sets a value indicating whether this instance is checked.
            </summary>
            <value>
            	<c>true</c> if this instance is checked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.List">
            <summary>
            Gets the owner list.
            </summary>
            <value>The list.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon dropdown item.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject"/> class.
            </summary>
            <param name="item">The owner item.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Item">
            <summary>
            Gets the owner item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownItemCollection">
            <summary>
            Defines a collection of ribbon dropdown items.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.EnableAll(System.Boolean)">
            <summary>
            Enables or disable all items.
            </summary>
            <param name="enable">if set to <c>true</c> enable all.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.IndexOf(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Insert(System.Int32,CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Add(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Contains(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.CopyTo(CodeFluent.Runtime.Design.RibbonDropDownItem[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Remove(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.List">
            <summary>
            Gets the owner list.
            </summary>
            <value>The list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem"/> with the specified title.
            </summary>
            <value>A ribbon dropdown item instance or null if not found.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem"/> at the specified index.
            </summary>
            <value>A ribbon dropdown item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value>The number of elements.</value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownList">
            <summary>
            Defines a ribbon dropdown list button.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownList"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownList"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.OnMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is clicked on this button.
            </summary>
            <param name="sender">The sender.</param>
            <param name="ev">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.OnItemClick(System.Object,System.EventArgs)">
            <summary>
            Called when an item is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the item.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.ComputeBounds">
            <summary>
            Computes the item and children bounds.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.AccessibleObject">
            <summary>
            Gets the accessible object.
            </summary>
            <value>The accessible object.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.VisibleItems">
            <summary>
            Gets the visible items.
            </summary>
            <value>The visible items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.RaiseItemMouseClick">
            <summary>
            Gets a value indicating whether mouse click must be raised at ribbon control level.
            </summary>
            <value>
            	<c>true</c> if mouse click must be raised at ribbon control; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.ComputedMode">
            <summary>
            Gets or sets the computed mode.
            </summary>
            <value>The computed mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DrawText">
            <summary>
            Gets a value indicating whether text will be drawn.
            </summary>
            <value><c>true</c> if text will be drawn; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon dropdown list.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonDropDownList)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject"/> class.
            </summary>
            <param name="item">The owner item.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>
            The number of children belonging to an accessible object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the accessible child corresponding to the specified index.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Item">
            <summary>
            Gets the owner item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Description">
            <summary>
            Gets a string that describes the visual appearance of the specified object. Not all objects have a description.
            </summary>
            <value></value>
            <returns>
            A description of the object's visual appearance to the user, or null if the object does not have a description.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownSeparator">
            <summary>
            Defines a ribbon dropdown separator.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownSeparator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownSeparator"/> class.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonItemCollection">
            <summary>
            Defines a collection of ribbon items.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.EnableAll(System.Boolean)">
            <summary>
            Enables or disable all items.
            </summary>
            <param name="enable">if set to <c>true</c> enable all.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.IndexOf(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Insert(System.Int32,CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Add(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Contains(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.CopyTo(CodeFluent.Runtime.Design.RibbonItem[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Remove(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItemCollection.Panel">
            <summary>
            Gets the owner panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItemCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Design.RibbonItem"/> with the specified title.
            </summary>
            <value>A ribbon item instance or null if not found.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.RibbonItem"/> at the specified index.
            </summary>
            <value>A ribbon item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonItemMode">
            <summary>
            Defines a ribbon item mode.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonItemMode.Icon">
            <summary>
            The item will be displayed as an icon of size 32x32.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonItemMode.SmallIcon">
            <summary>
            The item will be displayed as an icon of size 16x16.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonItemMode.SmallIconNoText">
            <summary>
            The item will be displayed as an icon of size 16x16 without text.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonPanel">
            <summary>
            Defines a ribbon panel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.GetColumnWidth(System.Int32)">
            <summary>
            Gets the width of the specified column.
            </summary>
            <param name="column">The column index.</param>
            <returns>The column width in pixels.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.MinimalClick">
            <summary>
            The panel has been clicked in the minimal mode.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.OnItemClick(System.Object,System.EventArgs)">
            <summary>
            Called when an item has been clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.ComputeBounds(System.Int32)">
            <summary>
            Computes the panel and children bounds.
            </summary>
            <param name="maxWidth">The maximum panel width.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.PaintMinimal(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the panel in minimal mode.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the panel.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.MinimalIconIndex">
            <summary>
            Gets or sets the index of the minimal icon.
            </summary>
            <value>The index of the minimal icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.MinimalIcon">
            <summary>
            Gets the minimal icon.
            </summary>
            <value>The minimal icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.IsHighlighted">
            <summary>
            Gets or sets a value indicating whether this instance is highlighted.
            </summary>
            <value>
            	<c>true</c> if this instance is highlighted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.ShowMinimal">
            <summary>
            Gets or sets a value indicating whether the panel is shown using the minimal icon.
            </summary>
            <value><c>true</c> if the panel is shown using the minimal icon; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.ColumnsCount">
            <summary>
            Gets the columns count.
            </summary>
            <value>The columns count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.HeaderBounds">
            <summary>
            Gets the header bounds.
            </summary>
            <value>The header bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.VisibleItems">
            <summary>
            Gets the visible items.
            </summary>
            <value>The visible items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Tab">
            <summary>
            Gets the owner tab.
            </summary>
            <value>The tab.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon panel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject"/> class.
            </summary>
            <param name="panel">The owner panel.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>
            The number of children belonging to an accessible object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the accessible child corresponding to the specified index.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Panel">
            <summary>
            Gets the owner panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonPanelCollection">
            <summary>
            Defines a collection of ribbon panels.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.EnableAll(System.Boolean)">
            <summary>
            Enables or disable all panels.
            </summary>
            <param name="enable">if set to <c>true</c> enable all.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.EnableAll(System.Boolean,System.Boolean)">
            <summary>
            Enables or disable all panels.
            </summary>
            <param name="enable">if set to <c>true</c> enable all.</param>
            <param name="recursive">if set to <c>true</c> items are also enabled or disabled.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.IndexOf(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Insert(System.Int32,CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Add(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Contains(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.CopyTo(CodeFluent.Runtime.Design.RibbonPanel[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Remove(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanelCollection.Tab">
            <summary>
            Gets the owner tab.
            </summary>
            <value>The tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanelCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel"/> with the specified title.
            </summary>
            <value></value>
            <value>A ribbon panel instance or null if not found.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanelCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel"/> at the specified index.
            </summary>
            <value>A ribbon tab instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanelCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonStyle">
            <summary>
            Defines the ribbon style
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintSeparator(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints a separator.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintHighlightedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the highlighted tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintSelectedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the selected tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.GetTooltipBackgroundBrush(System.Drawing.Rectangle)">
            <summary>
            Gets the tooltip background brush.
            </summary>
            <param name="rect">The rect.</param>
            <returns>A brush instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintButtonBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)">
            <summary>
            Paints a button background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rect.</param>
            <param name="state">The button state.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.Ribbon">
            <summary>
            Gets or sets the ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TabHeaderRadius">
            <summary>
            Gets the tab header radius.
            </summary>
            <value>The tab header radius.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TooltipEllipseSize">
            <summary>
            Gets the size of the tooltip ellipse.
            </summary>
            <value>The size of the tooltip ellipse.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.ShadowSize">
            <summary>
            Gets the shadow size.
            </summary>
            <value>The shadow size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TabHeaderTitleColor">
            <summary>
            Gets the color of the tab header title.
            </summary>
            <value>The color of the tab header title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TabHeaderTitleSelectedColor">
            <summary>
            Gets the color of the selected tab header title.
            </summary>
            <value>The color of the selected tab header title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TabHeaderTitleHighlightedColor">
            <summary>
            Gets the color of the highlighted tab header title.
            </summary>
            <value>The color of the highlighted tab header title.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style">
            <summary>
            Defines the Office 2010 ribbon style.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.GetTooltipBackgroundBrush(System.Drawing.Rectangle)">
            <summary>
            Gets the tooltip background brush.
            </summary>
            <param name="rect">The rect.</param>
            <returns>A brush instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintSeparator(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints a separator.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintHighlightedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the highlighted tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintSelectedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the selected tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintButtonBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)">
            <summary>
            Paints a button background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rect.</param>
            <param name="state">The button state.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle">
            <summary>
            Defines the Modern ribbon style.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.GetTooltipBackgroundBrush(System.Drawing.Rectangle)">
            <summary>
            Gets the tooltip background brush.
            </summary>
            <param name="rect">The rect.</param>
            <returns>A brush instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintSeparator(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints a separator.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintHighlightedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the highlighted tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintSelectedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the selected tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintButtonBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)">
            <summary>
            Paints a button background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rect.</param>
            <param name="state">The button state.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.TooltipEllipseSize">
            <summary>
            Gets the size of the tooltip ellipse.
            </summary>
            <value>The size of the tooltip ellipse.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.ShadowSize">
            <summary>
            Gets the shadow size.
            </summary>
            <value>The shadow size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.TabHeaderRadius">
            <summary>
            Gets the tab header radius.
            </summary>
            <value>The tab header radius.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.TabHeaderTitleSelectedColor">
            <summary>
            Gets the color of the selected tab header title.
            </summary>
            <value>The color of the selected tab header title.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonTab">
            <summary>
            Defines a ribbon tab.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonTab"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonTab"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.ComputeBounds">
            <summary>
            Computes the tab and children bounds.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the tab.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.PaintPanels(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the panels.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.PaintTitle(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the title.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.PaintHighlightedHeader(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints a highlighted tab header.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.PaintSelectedHeader(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the selected header.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.GetSelectedTabPath(System.Int32)">
            <summary>
            Gets the selected tab path.
            </summary>
            <param name="radius">The radius.</param>
            <returns>A graphics path or null if the tab cannot be drawn.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.IsHighlighted">
            <summary>
            Gets or sets a value indicating whether this instance is highlighted.
            </summary>
            <value>
            	<c>true</c> if this instance is highlighted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
            	<c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.HeaderBounds">
            <summary>
            Gets the header bounds.
            </summary>
            <value>The header bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.VisiblePanels">
            <summary>
            Gets the visible panels.
            </summary>
            <value>The visible panels.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.VisibleItems">
            <summary>
            Gets the visible items.
            </summary>
            <value>The visible items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Panels">
            <summary>
            Gets or sets the panels.
            </summary>
            <value>The panels.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.PreviousTab">
            <summary>
            Gets the previous tab.
            </summary>
            <value>The previous tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.NextTab">
            <summary>
            Gets the next tab.
            </summary>
            <value>The next tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon tab.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject"/> class.
            </summary>
            <param name="tab">The owner tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>
            The number of children belonging to an accessible object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the accessible child corresponding to the specified index.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Tab">
            <summary>
            Gets the owner tab.
            </summary>
            <value>The tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonTabCollection">
            <summary>
            Defines a collection of ribbon tabs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.IndexOf(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Insert(System.Int32,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Add(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Contains(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.CopyTo(CodeFluent.Runtime.Design.RibbonTab[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Remove(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTabCollection.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTabCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Design.RibbonTab"/> with the specified title.
            </summary>
            <value>A ribbon tab instance or null if not found.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTabCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.RibbonTab"/> at the specified index.
            </summary>
            <value>A ribbon tab instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTabCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonUtilities">
            <summary>
            As set of utility methods used by the RibbonControl.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.GetDisabledImage(System.Drawing.Image)">
            <summary>
            Creates a grayscale image for a given image.
            </summary>
            <param name="image">The image.</param>
            <returns>A grayscal image.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawArrow(System.Drawing.Graphics,System.Int32,System.Int32,System.Windows.Forms.ArrowDirection,System.Drawing.Color)">
            <summary>
            Draws an arrow.
            </summary>
            <param name="graphics">The Graphics used to draw the arrow. May not be null.</param>
            <param name="x">The x-coordinate of the arrow.</param>
            <param name="y">The y-coordinate of the arrow.</param>
            <param name="direction">The direction in which the arrow points.</param>
            <param name="color">The color of the arrow.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawArrow(System.Drawing.Graphics,System.Drawing.Point,System.Windows.Forms.ArrowDirection,System.Drawing.Color)">
            <summary>
            Draws an arrow.
            </summary>
            <param name="graphics">The Graphics used to draw the arrow. May not be null.</param>
            <param name="location">The coordinates of the arrow.</param>
            <param name="direction">The direction in which the arrow points.</param>
            <param name="color">The color of the arrow.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DecodeMessage(System.Windows.Forms.Message)">
            <summary>
            Decodes a Windows message.
            </summary>
            <param name="message">The message.</param>
            <returns>A text representing the message.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawSeparator(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws a separator line.
            </summary>
            <param name="graphics">The Graphics used to draw the separator line. May not be null.</param>
            <param name="rectangle">The rectangle that defines the separator bounds.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Int32)">
            <summary>
            Draws a rounded rectangle.
            </summary>
            <param name="graphics">The Graphics used to draw the rectangle. May not be null.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="pen">The pen used to draw the rectangle.</param>
            <param name="radius">The corner radius.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Brush,System.Int32)">
            <summary>
            Fills a rounded rectangle.
            </summary>
            <param name="graphics">The Graphics used to draw the rectangle. May not be null.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="brush">The brush used to fill the rectangle.</param>
            <param name="radius">The corner radius.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Brush,System.Int32,System.Drawing.Pen)">
            <summary>
            Fills a rounded rectangle.
            </summary>
            <param name="graphics">The Graphics used to draw the rectangle. May not be null.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="brush">The brush used to fill the rectangle.</param>
            <param name="radius">The corner radius.</param>
            <param name="border">The pen used as a border. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.GetRoundedRectanglePath(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Gets a rounded rectangle path.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="radius">The corner radius.</param>
            <returns>A graphics path that represents a rounded rectangle.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawDropShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition,System.Single,System.Boolean)">
            <summary>
            Draws a drop shadow.
            </summary>
            <param name="graphics">The Graphics used to draw the shadow. May not be null.</param>
            <param name="sourceRectangle">The source rectangle.</param>
            <param name="baseColor">The base color.</param>
            <param name="shadowDepth">The shadow depth.</param>
            <param name="lightSourcePosition">The light source position.</param>
            <param name="lightSourceIntensity">The light source intensity.</param>
            <param name="roundEdges">if set to <c>true</c> the rectangle will have round edges.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonUtilities.IsApplicationActive">
            <summary>
            Gets a value indicating whether this application is active (owns the foreground window).
            </summary>
            <value>
            	<c>true</c> if this application active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition">
            <summary>
            Defines a light source position for a drop shadow.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Bottom">
            <summary>
            Light is positioned at bottom.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Center">
            <summary>
            Light is positioned on center.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Left">
            <summary>
            Light is positioned on the left.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Right">
            <summary>
            Light is positioned on the right.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Top">
            <summary>
            Light is positioned at top.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.StringZoomEditor">
            <summary>
            Defines a UITypeEditor that will open a Form with the value displayed in a multiline text box.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.StringZoomEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.StringZoomEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.DxDiagContainer">
            <summary>
            Represents a managed wrapper on the DirectX diagnostics tool (dxdiag.exe).
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.DxDiagContainer.GetChildContainer(System.String)">
            <summary>
            Gets a child container instance.
            </summary>
            <param name="name">The child container name. May not be null.</param>
            <returns>The child container instance or null if an error occured or it does not exist.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.DxDiagContainer.GetPropertyValue(System.String)">
            <summary>
            Get a property value by its name.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <returns>
            The property value if it was found; null otherwise. Note a property value can be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.DxDiagContainer.GetPropertyValue``1(System.String,``0)">
            <summary>
            Get a property value by its name.
            </summary>
            <typeparam name="T">The property value expected type.</typeparam>
            <param name="name">The property name. May not be null.</param>
            <param name="defaultValue">The default value to use if an error occurs or if the property was not found.</param>
            <returns>
            true if the property was found; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.DxDiagContainer.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Get a property value by its name.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="value">The value.</param>
            <returns>true if the property was found; false otherwise.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.DxDiagContainer.Root">
            <summary>
            Gets the root container. May be null if an error occured.
            </summary>
            <value>
            The root container instance.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.DxDiagContainer.SystemInfo">
            <summary>
            Gets the system info container. May be null if an error occured.
            </summary>
            <value>
            The system info container instance.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.DxDiagContainer.ChildContainersCount">
            <summary>
            Gets the number of child containers to this instance.
            </summary>
            <value>
            The child containers count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.DxDiagContainer.ChildContainersNames">
            <summary>
            Gets the child containers names.
            </summary>
            <value>
            The child containers names.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.DxDiagContainer.PropertiesCount">
            <summary>
            Gets the number of properties to this instance.
            </summary>
            <value>
            The properties count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.DxDiagContainer.PropertiesNames">
            <summary>
            Gets the properties names.
            </summary>
            <value>
            The properties names.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers">
            <summary>
            Defines number for CodeFluent errors written to the Windows Journal.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.ListServiceException">
            <summary>
            An error occured in the List Service.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BlobHttpHandlerException">
            <summary>
            An error occured in the BLOB handler.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.SendErrorMessageException">
            <summary>
            An error occured trying to send an error message.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerHttpListenerException">
            <summary>
            An HttpListenerException error occured in the BITS Server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerIOException">
            <summary>
            An IOException error occured in the BITS Server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerException">
            <summary>
            An error occured in the BITS Server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerWriteException">
            <summary>
            An error occured in the BITS Server trying to write to a client.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerCloseException">
            <summary>
            An error occured in the BITS Server trying to close the communication with a client.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerResponseWriteException">
            <summary>
            An error occured in the BITS Server trying to write an HTML response to a client.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.ProjectDescriptorException">
            <summary>
            An error occured in the Project Descriptor.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentFactory">
            <summary>
            Represents a CodeFluent object factory.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentFactory.TryCreateObject``1(``0@,System.Object[])">
            <summary>
            Creates an object instance.
            </summary>
            <typeparam name="T">The expected instance type.</typeparam>
            <param name="instance">The instance.</param>
            <param name="arguments">The optional arguments.</param>
            <returns>
            true if the instance was created; false otherwise.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentPersistenceHook2">
            <summary>
            Provides required functions and properties for a CodeFluent persistence hook version 2 class.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentPersistenceHook2.BinaryServicesEntityConfigurationTypeName">
            <summary>
            Gets the type name of the binary services entity configuration object type.
            </summary>
            <value>The type name of the binary services  entity configuration object type.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.BinaryLargeObjectValueConverter2">
            <summary>
            Provides a type converter to convert BinaryLargeObject objects to and from various other representations. 
            Supports only the conversion of image blobs into ImageSource or UIElement target types.
            This implementation caches the target bitmap in memory.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.BinaryLargeObjectValueConverter2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"></see>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> indicates that the converter produced no value and that the binding uses the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see>, if available, or the default value instead.A return value of <see cref="T:System.Windows.Data.Binding"></see>.<see cref="F:System.Windows.Data.Binding.DoNothing"></see> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> or default value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.BinaryLargeObjectValueConverter2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates a value from the binding target to the binding source.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"></see>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> indicates that the converter produced no value and that to the binding uses the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see>, if available, or the default value instead.A return value of <see cref="T:System.Windows.Data.Binding"></see>.<see cref="F:System.Windows.Data.Binding.DoNothing"></see> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> or default value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.EnumEditor`1">
            <summary>
            Defines a base UITypeEditor that displays a ListBox for an Enum type.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.EnumEditor">
            <summary>
            Defines a UITypeEditor for all enum types, including enums with the FlagsAttribute set.
            This editor supports any underlying enum types.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.GetName(System.Object)">
            <summary>
            Retrieves the name of the constant in the specified enumeration that has the specified value.
            </summary>
            <param name="value">The value of a particular enumerated constant in terms of its underlying type.</param>
            <returns>A string containing the name of the enumerated constant in enumType whose value is value, or null if no such constant is found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.Parse(System.String,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
            A parameter specifies whether the operation is case-sensitive.
            </summary>
            <param name="value">A string containing the name or value to convert.</param>
            <param name="ignoreCase">If true, ignore case; otherwise, regard case.</param>
            <returns>An object of required type whose value is represented by value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.ToObject(System.UInt64)">
            <summary>
            Returns an instance of the specified enumeration type set to the specified 64-bit unsigned integer value.
            </summary>
            <param name="value">The value to set.</param>
            <returns>An instance of the enumeration set to value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.ShowToolTip(System.Windows.Forms.ListBox)">
            <summary>
            Shows the tool tip.
            </summary>
            <param name="listBox">The list box. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.EditorService">
            <summary>
            Gets the editor service.
            </summary>
            <value>The editor service.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.DefaultZeroName">
            <summary>
            Gets the default name of the zero value for flags enum.
            Override this if you need a localized version of the EnumEditor class.
            </summary>
            <value>The default name of the zero value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.DecamelizeOptions">
            <summary>
            Determines if names are decamelized or not.
            </summary>
            <value>The decamelize options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.EnumType">
            <summary>
            Gets the enum type. May be null.
            </summary>
            <value>The enum type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.Values">
            <summary>
            Gets the possible list of values. May be null.
            </summary>
            <returns>A list of values.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.Names">
            <summary>
            Gets the list of names. May be null.
            </summary>
            <returns>A list of names.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.UnderlyingType">
            <summary>
            Gets the enum underlying type. If null, the edited value type will be used.
            </summary>
            <value>The enum underlying type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.DisplayNames">
            <summary>
            Gets a list of display names. May be null.
            </summary>
            <value>The display names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.IsListBoxSorted">
            <summary>
            Gets a value indicating whether the list box is sorted for non flags enumerations.
            </summary>
            <value>
            	<c>true</c> if the list box is sorted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.IsFlags">
            <summary>
            Gets a value indicating whether the enum is a multi-valued enum.
            </summary>
            <value><c>true</c> if the enum is a multi-valued enum; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.InitialValue">
            <summary>
            Gets the initial value.
            </summary>
            <value>The initial value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.FinalValue">
            <summary>
            Gets the final value.
            </summary>
            <value>The final value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.Context">
            <summary>
            Gets the type descriptor context.
            </summary>
            <value>The type descriptor context.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.ServiceProvider">
            <summary>
            Gets the service provider.
            </summary>
            <value>The service provider.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor`1.InitialValue">
            <summary>
            Gets the initial value.
            </summary>
            <value>The initial value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor`1.FinalValue">
            <summary>
            Gets the final value.
            </summary>
            <value>The final value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.PropertyGridPage">
            <summary>
            Defines a page for displaying a property grid.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.WizardPage">
            <summary>
            Defines a wizard page.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.SetCurrentPage(CodeFluent.Runtime.Design.WizardPage)">
            <summary>
            Sets the current page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnActivated">
            <summary>
            Called when the page is activated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnDeactivated">
            <summary>
            Called when the page is deactivated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnNext">
            <summary>
            Called when the next button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnPrevious">
            <summary>
            Called when the previous button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnFinish">
            <summary>
            Called when the finish button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnCancel">
            <summary>
            Called when the cancel button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnButtonsUpdated">
            <summary>
            Called when the buttons have been updated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.GetNextPage">
            <summary>
            Gets the next page.
            </summary>
            <returns>The next page instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.GetPreviousPage">
            <summary>
            Gets the previous page.
            </summary>
            <returns>The previous page instance.</returns>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.NextPage">
            <summary>
            Gets or sets the next page.
            </summary>
            <value>The next page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.PreviousPage">
            <summary>
            Gets or sets the previous page.
            </summary>
            <value>The previous page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.HeaderLabel">
            <summary>
            Gets or sets the header label.
            </summary>
            <value>The header label.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.Form">
            <summary>
            Gets or sets the main wizard form.
            </summary>
            <value>The form.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.ConfirmClose">
            <summary>
            Gets or sets a value indicating whether the close buttons pops up a confirmation message box.
            </summary>
            <value><c>true</c> if confirmation is requested; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.PropertyGridPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.OnButtonsUpdated">
            <summary>
            Called when the buttons have been updated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.ValidateSelectedObject">
            <summary>
            Validates the object being configured using the IDataErrorInfo interface.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.PropertyGridPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.PropertyGridPage.ConfigurationPropertyGrid">
            <summary>
            The configuration property grid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.PropertyGridPage.ConfigurationLabel">
            <summary>
            The configuration label.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.PropertyGridPage.LayoutPanel">
            <summary>
            The layout panel.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CultureEditor">
            <summary>
            Defines a UITypeEditor for culture types.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.CultureEditor"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.AddChosenCulture(System.Globalization.CultureInfo)">
            <summary>
            Adds a culture to the list of chosen cultures.
            </summary>
            <param name="culture">The culture. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.ResetChosenCultures">
            <summary>
            Resets the remembered chosen cultures.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.RememberChosenCultures">
            <summary>
            Gets a value indicating whether the editor should remember chosen cultures.
            </summary>
            <value>
            	<c>true</c> if the editor should remember chosen cultures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.ItemsCount">
            <summary>
            Gets the items count.
            </summary>
            <value>The items count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.SeparatorWidth">
            <summary>
            Gets the width of the separator.
            </summary>
            <value>The width of the separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.CultureTypes">
            <summary>
            Gets the culture types.
            </summary>
            <value>The culture types.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CultureEditor.CultureComparer">
            <summary>
            Defines a CultureInfo comparer utility class
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.CultureComparer.System#Collections#Generic#IComparer{System#Globalization#CultureInfo}#Compare(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value
            Condition
            Less than zero
            <paramref name="x"/> is less than <paramref name="y"/>.
            Zero
            <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero
            <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DropDownListEditor">
            <summary>
            Defines a base UITypeEditor that displays a ListBox.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.FillListBoxItems(System.Windows.Forms.ListBox,System.Object)">
            <summary>
            Fills the list box with items.
            </summary>
            <param name="listBox">The list box. May not be null.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.ConvertFrom(System.Object)">
            <summary>
            Converts the input value to the target type.
            </summary>
            <param name="value">The input value.</param>
            <returns>A converted value</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.ConvertTo(System.Object)">
            <summary>
            Converts the selected value to the target type.
            </summary>
            <param name="value">The selected value.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.OnListBoxSelectedValueChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the selected value changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.CloseOnSelect">
            <summary>
            Gets a value indicating whether list box is closed when an item is selected.
            </summary>
            <value><c>true</c> if list box is closed when an item is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.EditorService">
            <summary>
            Gets the editor service.
            </summary>
            <value>The editor service.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.Context">
            <summary>
            Gets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.BaseValue">
            <summary>
            Gets the base value.
            </summary>
            <value>The base value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.EncodingConverter">
            <summary>
            Provides a type converter to convert Encoding objects to and from various other representations.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.EncodingEditor">
            <summary>
            Defines a UITypeEditor for encoding types.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingEditor.FillListBoxItems(System.Windows.Forms.ListBox,System.Object)">
            <summary>
            Fills the list box items.
            </summary>
            <param name="listBox">The list box.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ChangeTypeConverter`1">
            <summary>
            Defines a generic type converter based on CodeFluent conversion routines.
            </summary>
            <typeparam name="T">Any type.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.ChangeTypeConverter`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance [can convert to] the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if this instance [can convert to] the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ListBoxPage">
            <summary>
            Defines a page that contains a list box.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ListBoxPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.ListBoxPage"/> class.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ListBoxPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ListBoxPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ListBoxPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ListBoxPage.ChoiceListBox">
            <summary>
            The choice list box.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ListBoxPage.ChoiceText">
            <summary>
            The choice text.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ListBoxPage.LayoutPanel">
            <summary>
            The layout panel.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ProgressPage">
            <summary>
            Defines a page that displays a progress bar and supports a background worker.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.ProgressPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnCancel">
            <summary>
            Called when the cancel button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnWorkerDoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Called when the worker starts its work.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.DoWorkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnWorkerRunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Called when the worker has completed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnWorkerProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Called when the worker progress changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.ProgressChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnActivated">
            <summary>
            Called when the page is activated.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ProgressPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ProgressPage.StatusLabel">
            <summary>
            The status label.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ProgressPage.Progress">
            <summary>
            The progress bar.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ProgressPage.DescriptionLabel">
            <summary>
            The description label.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.ProgressPage.ProgressStateIsDescription">
            <summary>
            Gets or sets a value indicating whether the progress state is a string passed in the user state.
            </summary>
            <value>
            	<c>true</c> if the progress state is a string passed in the user state; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.ProgressPage.Worker">
            <summary>
            Gets the background worker.
            </summary>
            <value>The worker.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ReportPage">
            <summary>
            Defines a page for displaying actions report.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.ReportPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.OnActivated">
            <summary>
            Called when the page is activated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.OnPrevious">
            <summary>
            Called when the previous button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.OnFinish">
            <summary>
            Called when the finish button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.ShowReport">
            <summary>
            Shows the report.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ReportPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ReportPage.ReportTextBox">
            <summary>
            The report text box.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ReportPage.ReportLabel">
            <summary>
            The report label.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ReportPage.LayoutPanel">
            <summary>
            The layout panel.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.SummaryPage">
            <summary>
            Defines a page for displaying the list of actions.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.SummaryPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.OnActivated">
            <summary>
            Called when the page is activated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.ShowActions">
            <summary>
            Shows the actions.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.SummaryPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.SummaryPage.ActionsTextBox">
            <summary>
            The actions text box.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.SummaryPage.LayoutPanel">
            <summary>
            The layout panel.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.SummaryPage.ActionsLabel">
            <summary>
            The actions panel.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.SummaryPage.ActionSeparator">
            <summary>
            Gets or sets the action separator.
            </summary>
            <value>The action separator.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.WizardAction">
            <summary>
            Defines a wizard action. Wizard actions are used in summary or report pages.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardAction"/> class.
            </summary>
            <param name="category">The action category. May not be null.</param>
            <param name="text">The action text. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardAction"/> class.
            </summary>
            <param name="id">The action id. May not be null.</param>
            <param name="category">The action category. May not be null.</param>
            <param name="text">The action text. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardAction"/> class.
            </summary>
            <param name="id">The action id. May not be null.</param>
            <param name="category">The action category. May not be null.</param>
            <param name="text">The action text. May not be null.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.CompareTo(CodeFluent.Runtime.Design.WizardAction)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Error">
            <summary>
            Gets or sets an exception.
            </summary>
            <value>The error.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Tag">
            <summary>
            Gets or sets a custom object.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.SortOrder">
            <summary>
            Gets or sets the action sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Id">
            <summary>
            Gets the action id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Category">
            <summary>
            Gets the action category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Text">
            <summary>
            Gets the action text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.WizardForm">
            <summary>
            Defines a base form to create a wizard.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.BoldFont">
            <summary>
            Defines the bold font used by the Wizard forms.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.RegularFont">
            <summary>
            Defines the base font used by the Wizard forms.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardForm"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.ClearErrors">
            <summary>
            Clears the errors.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.AddReport(System.Exception)">
            <summary>
            Adds an exception report to display in the report page.
            </summary>
            <param name="report">The report exception. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.AddReport(CodeFluent.Runtime.Design.WizardAction)">
            <summary>
            Adds a report to display in the report page.
            </summary>
            <param name="report">The report to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.GetAction(System.String)">
            <summary>
            Gets an action using its key.
            </summary>
            <param name="id">The id. May not be null.</param>
            <returns>An instance of the WizardAction class, or null if it was not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.ClearActions">
            <summary>
            Clears the actions.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.AddAction(CodeFluent.Runtime.Design.WizardAction)">
            <summary>
            Adds an action to display in the summary page.
            </summary>
            <param name="action">The action to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.AddPage(CodeFluent.Runtime.Design.WizardPage)">
            <summary>
            Adds a page.
            </summary>
            <param name="page">The page to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnCancel">
            <summary>
            Called when the cancel button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnFinish">
            <summary>
            Called when the finish button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnPrevious">
            <summary>
            Called when the previous button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnNext">
            <summary>
            Called when the next button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.SetCurrentPage(CodeFluent.Runtime.Design.WizardPage)">
            <summary>
            Sets the current page to a specified page.
            </summary>
            <param name="page">The page. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.UpdateButtons">
            <summary>
            Updates the buttons.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Closing"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.HeaderLabel">
            <summary>
            The header label.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.Header">
            <summary>
            The header panel.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.LabelLogo">
            <summary>
            The label logo.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.FinishButton">
            <summary>
            The finish button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.NextButton">
            <summary>
            The next button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.CloseButton">
            <summary>
            The cancel button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.Page">
            <summary>
            The page container control.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.PreviousButton">
            <summary>
            The previous button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.FooterLabel">
            <summary>
            The footer label.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.ShowExceptions">
            <summary>
            Gets or sets a value indicating whether the wizard shows exceptions on mouse clicks.
            </summary>
            <value><c>true</c> if exceptions are shown; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.CancelOnClose">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.WizardForm"/> will return a cancel if closed.
            </summary>
            <value><c>true</c> if cancel on close; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.Reports">
            <summary>
            Gets the declared reports so far.
            </summary>
            <value>The reports.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.HasErrors">
            <summary>
            Gets a value indicating whether this instance has errors.
            </summary>
            <value>
            	<c>true</c> if this instance has errors; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.Errors">
            <summary>
            Gets the list of errors.
            </summary>
            <value>A list of errors.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.Actions">
            <summary>
            Gets the declared actions so far.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.CurrentPage">
            <summary>
            Gets the current page.
            </summary>
            <value>The current page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.PreviousPage">
            <summary>
            Gets the previous page.
            </summary>
            <value>The previous page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.NextPage">
            <summary>
            Gets the next page.
            </summary>
            <value>The next page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.FinishPage">
            <summary>
            Gets the finish page.
            </summary>
            <value>The finish page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.LastPage">
            <summary>
            Gets the last page.
            </summary>
            <value>The last page.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.ExceptionHandler">
            <summary>
            A utility class to report unhandled exceptions.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.HandleException(System.Exception,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Handles the exception.
            </summary>
            <param name="exception">The exception. May not be null.</param>
            <param name="context">The context.</param>
            <returns>The result of the exception handling.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.HandleException(System.Exception,System.Windows.Forms.IWin32Window,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Handles the exception.
            </summary>
            <param name="exception">The exception. May not be null.</param>
            <param name="owner">The owner.</param>
            <param name="context">The context.</param>
            <returns>The result of the exception handling.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.HandleException(CodeFluent.Runtime.Diagnostics.ExceptionHandler.ExceptionHandledCallback,System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Runs a piece of code with exception being handled.
            </summary>
            <param name="callback">The code to run. May not be null.</param>
            <param name="reThrow">if set to <c>true</c> the exception will be rethrown.</param>
            <param name="context">The context. May be null.</param>
            <returns>
            true if an exception was handled; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.HandleException(CodeFluent.Runtime.Diagnostics.ExceptionHandler.ExceptionHandledCallback,System.Windows.Forms.IWin32Window,System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Runs a piece of code with exception being handled.
            </summary>
            <param name="callback">The code to run. May not be null.</param>
            <param name="owner">The owner. May be null.</param>
            <param name="reThrow">if set to <c>true</c> the exception will be rethrown.</param>
            <param name="context">The context. May be null.</param>
            <returns>true if an exception was handled; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.CreateManual">
            <summary>
            Creates a manual report.
            </summary>
            <returns>An instance of the ExceptionHandler type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.CreateThreadExceptionDialog(System.Exception,System.String)">
            <summary>
            Creates an instance of the ThreadExceptionDialog dialog with a custom message.
            </summary>
            <param name="exception">The exception. May not be null.</param>
            <param name="message">The message. May be null.</param>
            <returns>
            true if the change succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.Report(System.Exception)">
            <summary>
            Reports the specified exception.
            </summary>
            <param name="exception">The exception. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.Report(System.Exception,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Reports the specified exception and an optional array of values.
            </summary>
            <param name="exception">The exception. May be null</param>
            <param name="context">The context. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.ExceptionHandler.Current">
            <summary>
            Gets the current handler.
            </summary>
            <value>The current handler.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.ExceptionHandler.ReportsPathSuffix">
            <summary>
            Gets or sets the reports path suffix. Must be set before any report is created.
            </summary>
            <value>
            The reports path suffix.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.ExceptionHandler.ReportsSpecialFolder">
            <summary>
            Gets or sets the reports special folder. Must be set before any report is created.
            </summary>
            <value>
            The reports special folder.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.ExceptionHandler.ReportPath">
            <summary>
            Gets or sets the handler report path.
            </summary>
            <value>The report path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.ExceptionHandler.ReportsPath">
            <summary>
            Gets the reports directory path.
            </summary>
            <value>The reports directory path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.ExceptionHandler.ExceptionHandledCallback">
            <summary>
            Defines a delegate.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.EntityDisplayNameComparer">
            <summary>
            Defines a Comparer class that compares entities using their display name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.EntityDisplayNameComparer.Compare(CodeFluent.Runtime.ICodeFluentEntity,CodeFluent.Runtime.ICodeFluentEntity)">
            <summary>
            Compares two entities and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first entity to compare.</param>
            <param name="y">The second entity to compare.</param>
            <returns>
            Value
            Condition
            Less than zero
            <paramref name="x"/> is less than <paramref name="y"/>.
            Zero
            <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero
            <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentLightEntity">
            <summary>
            Represents a CodeFluent lightweight instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentLightEntity.ReadRecord(System.Data.IDataReader)">
            <summary>
            Reads the record.
            </summary>
            <param name="reader">The reader instance. May not be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentSummaryValidator">
            <summary>
            Defines a CodeFluent summary validator instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentSummaryValidator.Validate(System.Globalization.CultureInfo,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException})">
            <summary>
            Validates the current instance.
            </summary>
            <param name="culture">The culture to use. May not be null.</param>
            <param name="results">A list of results. May not be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ByteArrayConverter">
            <summary>
            Provides a type converter to convert byte arrays (System.Byte[]) objects to and from various other representations. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.GetBitmap(System.Byte[])">
            <summary>
            Gets the bitmap representation of the array of bytes.
            </summary>
            <param name="bytes">The array of bytes.</param>
            <returns>A bitmap instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.GetBitmap(System.Byte[],System.String,System.Single)">
            <summary>
            Gets the bitmap representation of the array of bytes.
            </summary>
            <param name="bytes">The array of bytes.</param>
            <param name="fontFamilyName">Name of the font family.</param>
            <param name="fontEmSize">Size of the font.</param>
            <returns>A bitmap instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentCollectionEntity`1">
            <summary>
            Defines a CodeFluent entity that has a collection key.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentEntity">
            <summary>
            Represents a CodeFluent instance.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentObject">
            <summary>
            Defines a CodeFluent entity or set instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentObject.Trace(System.CodeDom.Compiler.IndentedTextWriter)">
            <summary>
            Traces the current instance.
            </summary>
            <param name="writer">The output writer.</param>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentValidator">
            <summary>
            Defines a CodeFluent validator instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentValidator.Validate(System.Globalization.CultureInfo)">
            <summary>
            Validates the current instance.
            </summary>
            <param name="culture">The culture to use. May not be null.</param>
            <returns>null if validation was successful; otherwise a culture specific error message.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentEntity.ReadRecord(System.Data.IDataReader)">
            <summary>
            Reads the record.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave(System.Data.IDataReader)">
            <summary>
            Reads the record on save.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentEntity.Save">
            <summary>
            Saves this instance.
            </summary>
            <returns>true if the instance was really saved; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentEntity.Delete">
            <summary>
            Deletes this instance.
            </summary>
            <returns>true if the instance was really deleted; otherwise false.</returns>
        </member>
        <member name="E:CodeFluent.Runtime.ICodeFluentEntity.EntityAction">
            <summary>
            Occurs for every action on the instance.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentEntity.EntityState">
            <summary>
            Gets or sets the state of the instance.
            </summary>
            <value>The state of the instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentEntity.EntityDisplayName">
            <summary>
            Gets the display name of the instance.
            </summary>
            <value>The display name of the instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentEntity.EntityKey">
            <summary>
            Gets or sets the instance combined key.
            </summary>
            <value>The instance combined key. May be null if the instance is just created.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IKeyable`1">
            <summary>
            Defines an item that has a key.
            </summary>
            <typeparam name="Tk">The type of the key.</typeparam>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.IKeyable`1.KeyChanged">
            <summary>
            Occurs when the key has changed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IKeyable`1.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentMemberValidator">
            <summary>
            Defines a CodeFluent instance member validator.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentMemberValidator.Validate(System.Globalization.CultureInfo,System.String,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException})">
            <summary>
            Validates a member of the current instance.
            </summary>
            <param name="culture">The culture to use. May not be null.</param>
            <param name="memberName">Name of the member to validate. If null, the whole instance will be validated.</param>
            <param name="results">A list of results. May not be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Design.BinaryLargeObjectValueConverter">
            <summary>
            Provides a type converter to convert BinaryLargeObject objects to and from various other representations. 
            Supports only the conversion of image blobs into ImageSource or UIElement target types.
            This implementation does not caches the bitmap in memory.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.BinaryLargeObjectValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"></see>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> indicates that the converter produced no value and that the binding uses the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see>, if available, or the default value instead.A return value of <see cref="T:System.Windows.Data.Binding"></see>.<see cref="F:System.Windows.Data.Binding.DoNothing"></see> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> or default value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.BinaryLargeObjectValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates a value from the binding target to the binding source.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"></see>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> indicates that the converter produced no value and that to the binding uses the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see>, if available, or the default value instead.A return value of <see cref="T:System.Windows.Data.Binding"></see>.<see cref="F:System.Windows.Data.Binding.DoNothing"></see> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> or default value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.BinaryLargeObjectTypeConverter2">
            <summary>
            Provides a type converter to convert BinaryLargeObject objects to and from various other representations. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.BinaryLargeObjectTypeConverter2.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets a collection of properties for the type of object specified by the value parameter.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"></see> that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that will be used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> with the properties that are exposed for the component, or null if there are no properties.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.BinaryLargeObjectTypeConverter2.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.BinaryLargeObjectTypeConverter2.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts to the specified destination type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The culture to use for conversion.</param>
            <param name="value">The input value.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>A converted object.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.IServiceHost">
            <summary>
            Defines a host service class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.IServiceHost.Log(System.Object)">
            <summary>
            Logs information.
            </summary>
            <param name="value">An object to log. May be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Model.EnumerationDescriptor">
            <summary>
            Defines a class that describes partially the CodeFluent Entities enumeration model at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EnumerationDescriptor.#ctor(CodeFluent.Runtime.Model.ProjectDescriptor,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.EnumerationDescriptor"/> class.
            </summary>
            <param name="project">The project. May not be null.</param>
            <param name="enumerationType">The enumeration type. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EnumerationDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EnumerationDescriptor.IsFlags">
            <summary>
            Gets or sets a value indicating whether this instance is a multi-valued enumeration.
            </summary>
            <value><c>true</c> if this instance is a multi-valued enumeration; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EnumerationDescriptor.Tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
            <value>
            The tag. May be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EnumerationDescriptor.Project">
            <summary>
            Gets the project.
            </summary>
            <value>The project.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EnumerationDescriptor.EnumerationType">
            <summary>
            Gets the enumeration type.
            </summary>
            <value>The enumeration type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EnumerationDescriptor.Values">
            <summary>
            Gets the collection of values declared by this enumeration.
            </summary>
            <value>The collection of values.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.EnumerationValueDescriptor">
            <summary>
            Defines a class that describes partially the CodeFluent Entities enumeration value model at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EnumerationValueDescriptor.#ctor(CodeFluent.Runtime.Model.EnumerationDescriptor,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.EnumerationValueDescriptor"/> class.
            </summary>
            <param name="enumeration">The declaring enumeration. May not be null.</param>
            <param name="name">The enumeration value name. May not be null.</param>
            <param name="value">The enumeration value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EnumerationValueDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EnumerationValueDescriptor.Enumeration">
            <summary>
            Gets the declaring enumeration.
            </summary>
            <value>The enumeration.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EnumerationValueDescriptor.Tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
            <value>
            The tag. May be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EnumerationValueDescriptor.Name">
            <summary>
            Gets the parameter name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EnumerationValueDescriptor.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.JsonExceptionObject">
            <summary>
            A utility class specially designed to carry .NET exceptions to javascript clients.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.JsonExceptionObject.GetReturnStream(System.Exception)">
            <summary>
            Gets a JSON-oriented stream for a given exception.
            </summary>
            <param name="exception">The exception. May not be null.</param>
            <returns>A Stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.JsonExceptionObject.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.JsonExceptionObject"/> class.
            </summary>
            <param name="exception">The exception. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Model.JsonExceptionObject.IsJsonExceptionObject">
            <summary>
            Gets a value indicating whether this is a json exception object.
            Used by json parser to check a json text is in fact an error.
            </summary>
            <value>Always return true.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.JsonExceptionObject.Exception">
            <summary>
            Gets or sets the .NET exception object.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.JsonExceptionObject.Code">
            <summary>
            Gets the CodeFluent exception code.
            </summary>
            <value>A number representing the exception or 0.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.JsonExceptionObject.Message">
            <summary>
            Gets a textual representation of the exception, including inner exceptions.
            </summary>
            <value>The interesting message.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.JsonExceptionObject.FullMessage">
            <summary>
            Gets a textual representation of the exception, including inner exceptions with exception code.
            </summary>
            <value>The interesting message.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ParameterDescriptorOptions">
            <summary>
            Defines a method parameter descriptor options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ParameterDescriptorOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ProjectInvokeOptionsConverter">
            <summary>
            Defines a type converter for ProjectInvokeOptions.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeOptionsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeOptionsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeOptionsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ProjectInvokeProperty">
            <summary>
            Defines a dynamic view property.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeProperty.DefaultSortOrder">
            <summary>
            The default sort order value.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.ProjectInvokeProperty"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeProperty.Name">
            <summary>
            Gets or sets the property name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeProperty.Format">
            <summary>
            Gets or sets the property format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeProperty.Expression">
            <summary>
            Gets or sets the property expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeProperty.Options">
            <summary>
            Gets or sets the property options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeProperty.SortOrder">
            <summary>
            Gets or sets the property sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ProjectInvokeOptions">
            <summary>
            Defines the parameter for a dynamic method call.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeOptions.MethodParameterDefaultPrefix">
            <summary>
            Defines the default prefix to use for method parameters.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeOptions.PropertiesHeaderName">
            <summary>
            Defines the default prefix to use for method parameters.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.ProjectInvokeOptions"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeOptions.AddProperties(System.String)">
            <summary>
            Adds properties to the current set of properties.
            </summary>
            <param name="serialized">A string representing a list of serialized property descriptors. Format is 'Name,Format,Expression,Options,SortOrder'.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeOptions.GetFromRequestUri">
            <summary>
            Gets an instance of the ProjectInvokeOptions class from the current request uri.
            </summary>
            <returns>
            An instance of the ProjectInvokeOptions class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeOptions.GetUriMethodParameters(System.Web.HttpRequest)">
            <summary>
            Gets method parameters concatenated as a URI string.
            </summary>
            <param name="request">The input request. May not be null.</param>
            <returns>
            A string representing the method parameters.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeOptions.GetUriMethodParameters(System.Uri)">
            <summary>
            Gets the URI method parameters concatenated as a URI string.
            </summary>
            <param name="uri">The URI.</param>
            <returns>A string representing the method parameters.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeOptions.GetFromUri(System.Uri)">
            <summary>
            Gets an instance of the ProjectInvokeOptions class from a specified uri.
            </summary>
            <param name="uri">The uri.</param>
            <returns>An instance of the ProjectInvokeOptions class.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.ResultOptions">
            <summary>
            Gets or sets the result options.
            </summary>
            <value>The result options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.InvokeType">
            <summary>
            Gets or sets the type of call.
            </summary>
            <value>The type of call.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.BlobDefaultFormat">
            <summary>
            Gets or sets the format to use by default for blobs.
            </summary>
            <value>The blob default format.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.EntityTypeName">
            <summary>
            Gets or sets the entity type name. For a method call, this or EntityType must be defined.
            </summary>
            <value>The entity type name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.EnumerationTypeName">
            <summary>
            Gets or sets the entity type name. For a method call, this or EnumerationType must be defined.
            </summary>
            <value>The entity type name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.EntityType">
            <summary>
            Gets or sets the entity type. For a method call, this or EntityTypeName must be defined.
            </summary>
            <value>The entity type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.EnumerationType">
            <summary>
            Gets or sets the entity type. For a method call, this or EnumerationTypeName must be defined.
            </summary>
            <value>The entity type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.ViewName">
            <summary>
            Gets or sets the name of the view to use. If unspecified, the entities are serialized directly without projection.
            </summary>
            <value>The view name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.MethodName">
            <summary>
            Gets or sets the method name when calling a method.
            </summary>
            <value>The method name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.CultureName">
            <summary>
            Gets or sets a culture name to use for method calls.
            </summary>
            <value>The name of the culture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.MethodOptions">
            <summary>
            Gets or sets the method options.
            </summary>
            <value>The method options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.JsonSerializationOptions">
            <summary>
            Gets or sets the JSON serialization options.
            </summary>
            <value>The JSON serialization options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.PageIndex">
            <summary>
            Gets or sets the page index for methods that support paging operations.
            </summary>
            <value>The page index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.PageSize">
            <summary>
            Gets or sets the page size for methods that support paging operations.
            </summary>
            <value>The page size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.MethodCallOptions">
            <summary>
            Gets or sets the method call options.
            </summary>
            <value>The method call options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.Parameters">
            <summary>
            Gets or sets the parameters for method calls.
            </summary>
            <value>An array of parameters.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.Properties">
            <summary>
            Gets or sets the properties for dynamic view projection.
            </summary>
            <value>An array of properties.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeOptions.OrderByArguments">
            <summary>
            Gets or sets order by arguments for method that support order by arguments.
            </summary>
            <value>The order by arguments.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ProjectInvokeParameter">
            <summary>
            Defines a method call parameter.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectInvokeParameter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeParameter.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectInvokeParameter.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ProjectInvokeResultOptions">
            <summary>
            Defines options for the call returned object.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.JsonFormat">
            <summary>
            The result is serialized as a JSON string
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.XmlFormat">
            <summary>
            The result is serialized as an XML string.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.ViewUsesFormat">
            <summary>
            Views projections are formatted as strings.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.ViewContinueOnEvaluateException">
            <summary>
            Continue processing if errors occur in views projections evaluation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.PropertiesDefineView">
            <summary>
            The array of properties defines a dynamically created view.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.TraceExceptions">
            <summary>
            Trace errors.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.WriteExceptionsToLog">
            <summary>
            Write errors into Windows Journal.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.EnsureRelatedEntitiesKeys">
            <summary>
            Always return related entities entity keys.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.EnsureRowVersion">
            <summary>
            Always returns the row version value if the entity defines it.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.EnsureEntityKey">
            <summary>
            Always returns the entity key value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.EnsureEntityDisplayName">
            <summary>
            Always returns the entity display name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.JqGridFormat">
            <summary>
            The result has the default jqGrid expected format. see http://www.trirand.com/jqgridwiki/doku.php?id=wiki:retrieving_data for more information.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.WrapExceptionsAsJson">
            <summary>
            Exceptions are sent as a JSON text.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeResultOptions.EnsureIdentity">
            <summary>
            Always returns the entity key value and the row version value if the entity defines it.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ProjectInvokeType">
            <summary>
            Defines the type of dynamic call.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeType.None">
            <summary>
            The call will return null. Used for ping-like operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeType.MethodCall">
            <summary>
            The call is an entity method call.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeType.ModelDefinition">
            <summary>
            The call will return a schema describing the runtime model.
            Not yet implemented.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeType.EntityDeleteCall">
            <summary>
            The call is an entity delete call.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeType.EntitySaveCall">
            <summary>
            The call is an entity update call.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ProjectInvokeType.EnumerationDefinition">
            <summary>
            The call will return the an enumeration definition (names and values).
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Model.MethodCallOptions">
            <summary>
            Defines options for the method call.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.MethodCallOptions.None">
            <summary>
            No option is specified.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.MethodCallOptions.IndexIsRowIndex">
            <summary>
            The page index is in fact a row index.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.MethodCallOptions.ForceParameterConversion">
            <summary>
            Force parameter conversion when calling a method.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Model.RelatedEntityDescriptor">
            <summary>
            Defines a class that describes a related entity.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.RelatedEntityDescriptor.#ctor(CodeFluent.Runtime.Model.EntityDescriptor,CodeFluent.Runtime.Model.EntityDescriptor,System.Reflection.PropertyInfo,CodeFluent.Runtime.Model.RelatedEntityOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.RelatedEntityDescriptor"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="relatedEntity">The related entity.</param>
            <param name="property">The property.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.RelatedEntityDescriptor.SetRelatedEntities(CodeFluent.Runtime.ICodeFluentEntity,System.Object)">
            <summary>
            Sets the related entities using some input.
            Input can be an comma separated list of entity keys, or a dictionary, or a list of entities.
            </summary>
            <param name="entity">The entity instance. May not be null.</param>
            <param name="input">The input.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.RelatedEntityDescriptor.BuildEntityKeysDictionary(System.Object)">
            <summary>
            Builds a dictionary of entity keys from any input.
            </summary>
            <param name="input">The input object.</param>
            <returns>A dictionary of entity keys.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.RelatedEntityDescriptor.IsCollection">
            <summary>
            Gets or sets a value indicating whether the property is a collection.
            </summary>
            <value>
            	<c>true</c> if this property is a collection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.RelatedEntityDescriptor.Tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
            <value>
            The tag. May be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.RelatedEntityDescriptor.Entity">
            <summary>
            Gets the declaring entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.RelatedEntityDescriptor.Property">
            <summary>
            Gets the holding property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.RelatedEntityDescriptor.RelatedEntity">
            <summary>
            Gets the related entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.RelatedEntityDescriptor.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.RelatedEntityDescriptor.SetCollectionMethod">
            <summary>
            Gets or sets the method that allows to set the collection of a many to many relation.
            </summary>
            <value>The set method.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.RelatedEntityOptions">
            <summary>
            Defines a related entity options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.RelatedEntityOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ViewDescriptorOptions">
            <summary>
            Defines a view descriptor options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewDescriptorOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewDescriptorOptions.Dynamic">
            <summary>
            The view has been dynamically created.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Model.EntityDescriptor">
            <summary>
            Defines a class that describes partially the CodeFluent Entities entity model at runtime.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.EntityDescriptor.PagePrefix">
            <summary>
            Defines the Page prefix constant.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.#ctor(CodeFluent.Runtime.Model.ProjectDescriptor,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.EntityDescriptor"/> class.
            </summary>
            <param name="project">The project. May not be null.</param>
            <param name="entityType">The entity type. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.DiscoverRelatedEntities">
            <summary>
            Discovers the related entities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.CreateInstance">
            <summary>
            Creates an instance of this entity.
            </summary>
            <returns>An newly created entity instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.GetBlob(CodeFluent.Runtime.ICodeFluentEntity,System.String)">
            <summary>
            Gets a blob property value.
            </summary>
            <param name="entity">The instance. May not be null.</param>
            <param name="propertyName">The blob property name.</param>
            <returns>An instance of the BaseBinaryLargeObject type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.SaveBlob(CodeFluent.Runtime.ICodeFluentEntity,System.String,System.Object)">
            <summary>
            Gets a blob property value.
            Supported input object types are: HttpPostedFile, BinaryLargeObject, XmlSerializableBinaryLargeObject, Array of bytes, Stream, and string (representing a file path).
            </summary>
            <param name="entity">The instance. May not be null.</param>
            <param name="propertyName">The blob property name.</param>
            <param name="data">The blob data.</param>
            <returns>
            true if the object was handled; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.SaveByEntityKey(System.String,System.Byte[],System.Collections.IDictionary)">
            <summary>
            Saves an entity using its entity key.
            </summary>
            <param name="entityKey">The entity key.</param>
            <param name="rowVersion">The row version. May be null if the entity does not manage optimistic concurrency.</param>
            <param name="values">The values.</param>
            <returns>An entity instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.SaveByEntityKey(System.String,System.Byte[],System.Collections.IDictionary,System.Boolean,System.Collections.Generic.IDictionary{System.Type,System.Type})">
            <summary>
            Saves an entity using its entity key.
            </summary>
            <param name="entityKey">The entity key.</param>
            <param name="rowVersion">The row version. May be null if the entity does not manage optimistic concurrency.</param>
            <param name="values">The values.</param>
            <param name="deep">if set to <c>true</c> value copy is recursive.</param>
            <param name="createInstanceTypeMappings">A collection of type mappings used when to create properties instances when necessary.</param>
            <returns>An entity instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.DeleteByEntityKey(System.String,System.Byte[])">
            <summary>
            Deletes an entity using its entity key.
            </summary>
            <param name="entityKey">The entity key.</param>
            <param name="rowVersion">The row version. May be null if the entity does not manage optimistic concurrency.</param>
            <returns>An entity instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.DeleteByEntityKey(System.String,System.Byte[],System.Boolean)">
            <summary>
            Deletes an entity using its entity key.
            If the entity manages optimistic concurrency and the rowVersion argument is null, the entity will be loaded first.
            </summary>
            <param name="entityKey">The entity key.</param>
            <param name="rowVersion">The row version. May be null if the entity does not manage optimistic concurrency.</param>
            <param name="loadFirst">if set to <c>true</c> the entity is loaded before being deleted.</param>
            <returns>An entity instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.LoadOrCreateInstance(System.Collections.IDictionary)">
            <summary>
            Loads an entity using a dictionary values or create a new instance.
            </summary>
            <param name="dictionary">The input dictionary.</param>
            <returns>An entity instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.LoadByEntityKey(System.String)">
            <summary>
            Loads an entity using its entity key.
            </summary>
            <param name="entityKey">The entity key.</param>
            <returns>An entity instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.CoerceEntity(System.Object)">
            <summary>
            Coerces the object into an entity instance or null.
            </summary>
            <param name="obj">The input object.</param>
            <returns>An entity instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.CoerceEntity(System.Object,System.Boolean)">
            <summary>
            Coerces the object into an entity instance or null.
            </summary>
            <param name="obj">The input object.</param>
            <param name="throwIfNotPossible">if set to <c>true</c> the method will throw if coercion is not possible.</param>
            <returns>An entity instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.CopyFrom(CodeFluent.Runtime.ICodeFluentEntity,System.Collections.IDictionary)">
            <summary>
            Copies data from a dictionay to a target entity.
            Dictionary values are mapped to properties corresponding to the dictionay entry key name.
            </summary>
            <param name="entity">The target entity. May not be null.</param>
            <param name="values">The dictionary that contains the values.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.CopyFrom(CodeFluent.Runtime.ICodeFluentEntity,System.Collections.IDictionary,System.Boolean)">
            <summary>
            Copies data from a dictionay to a target entity.
            Dictionary values are mapped to properties corresponding to the dictionay entry key name.
            </summary>
            <param name="entity">The target entity. May not be null.</param>
            <param name="values">The dictionary that contains the values.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.CopyFrom(CodeFluent.Runtime.ICodeFluentEntity,System.Collections.IDictionary,System.Boolean,System.Collections.Generic.IDictionary{System.Type,System.Type})">
            <summary>
            Copies data from a dictionay to a target entity.
            Dictionary values are mapped to properties corresponding to the dictionay entry key name.
            </summary>
            <param name="entity">The target entity. May not be null.</param>
            <param name="values">The dictionary that contains the values.</param>
            <param name="deep">if set to <c>true</c> copy is recursive.</param>
            <param name="createInstanceTypeMappings">A collection of type mappings used when to create properties instances when necessary.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.CopyFrom(CodeFluent.Runtime.ICodeFluentEntity,System.Collections.IDictionary,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.Type,System.Type})">
            <summary>
            Copies data from a dictionay to a target entity.
            Dictionary values are mapped to properties corresponding to the dictionay entry key name.
            </summary>
            <param name="entity">The target entity. May not be null.</param>
            <param name="values">The dictionary that contains the values.</param>
            <param name="deep">if set to <c>true</c> copy is recursive.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <param name="createInstanceTypeMappings">A collection of type mappings used to create properties instances when necessary.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.ReadRelatedEntityPropertyKeys(CodeFluent.Runtime.ICodeFluentEntity)">
            <summary>
            Copies values to related entity properties.
            </summary>
            <param name="entity">The instance that contains the properties that will be set.</param>
            <returns>A collection of entity keys</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.CopyToRelatedEntityProperties(CodeFluent.Runtime.ICodeFluentEntity,System.Collections.IDictionary,System.Boolean)">
            <summary>
            Copies values to related entity properties.
            </summary>
            <param name="entity">The instance that contains the properties that will be set.</param>
            <param name="values">The input values.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.GetMethodDescriptor(System.String,CodeFluent.Runtime.Model.MethodDescriptorOptions,System.Type[])">
            <summary>
            Gets a method descriptor from a method name.
            </summary>
            <param name="name">The method name. May not be null.</param>
            <param name="filter">The method filter.</param>
            <param name="argumentTypes">The argument types.</param>
            <returns>
            An instance of the MethodDescriptor class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.GetMethodDescriptor(System.String,CodeFluent.Runtime.Model.MethodDescriptorOptions,System.Type[],System.Boolean)">
            <summary>
            Gets a method descriptor from a method name.
            </summary>
            <param name="name">The method name. May not be null.</param>
            <param name="filter">The method filter.</param>
            <param name="argumentTypes">The argument types.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>An instance of the MethodDescriptor class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.NewViewDescriptor(CodeFluent.Runtime.Model.EntityDescriptor,System.String,CodeFluent.Runtime.Model.ViewDescriptorOptions)">
            <summary>
            Creates an instance of the MethodDescriptor class.
            </summary>
            <param name="entity">The entity descriptor. May not be null.</param>
            <param name="name">The method name. may not be null.</param>
            <param name="options">The options.</param>
            <returns>An instance of the MethodDescriptor class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.NewRelatedEntityDescriptor(CodeFluent.Runtime.Model.EntityDescriptor,CodeFluent.Runtime.Model.EntityDescriptor,System.Reflection.PropertyInfo,CodeFluent.Runtime.Model.RelatedEntityOptions)">
            <summary>
            Creates an instance of the MethodDescriptor class.
            </summary>
            <param name="entity">The entity descriptor. May not be null.</param>
            <param name="relatedEntity">The related entity descriptor. May not be null.</param>
            <param name="property">The property. May not be null.</param>
            <param name="options">The options.</param>
            <returns>
            An instance of the RelatedEntityDescriptor class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.NewMethodDescriptor(CodeFluent.Runtime.Model.EntityDescriptor,System.Reflection.MethodInfo,CodeFluent.Runtime.Model.MethodDescriptorOptions)">
            <summary>
            Creates an instance of the MethodDescriptor class.
            </summary>
            <param name="entity">The entity descriptor. May not be null.</param>
            <param name="methodInfo">The method info.</param>
            <param name="filter">The filter.</param>
            <returns>An instance of the MethodDescriptor class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.FindMethodDescriptor(System.String)">
            <summary>
            Finds a method descriptor from a method name.
            </summary>
            <param name="name">The method name. May not be null.</param>
            <returns>
            An instance of the MethodDescriptor class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.FindMethodDescriptor(System.String,CodeFluent.Runtime.Model.MethodDescriptorOptions,System.Boolean)">
            <summary>
            Finds a method descriptor from a method name.
            </summary>
            <param name="name">The method name. May not be null.</param>
            <param name="options">The method options.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>An instance of the MethodDescriptor class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.FindMethodInfo(System.String,CodeFluent.Runtime.Model.MethodDescriptorOptions,System.Type[])">
            <summary>
            Finds a method info from a method name.
            </summary>
            <param name="name">The method name. May not be null.</param>
            <param name="filter">The filter to use.</param>
            <param name="argumentTypes">The argument types.</param>
            <returns>An instance of the MethodInfo class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.GetRowVersion(CodeFluent.Runtime.ICodeFluentEntity)">
            <summary>
            Gets the row version of an entity instance.
            </summary>
            <param name="entity">The entity instance. May not be null</param>
            <returns>The row version or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.SetRowVersion(CodeFluent.Runtime.ICodeFluentEntity,System.Collections.IDictionary)">
            <summary>
            Sets the row version of an entity instance from a dictionary.
            </summary>
            <param name="entity">The entity instance. May not be null</param>
            <param name="dictionary">The dictionary. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.SetRowVersion(CodeFluent.Runtime.ICodeFluentEntity,System.Byte[])">
            <summary>
            Sets the row version of an entity instance.
            </summary>
            <param name="entity">The entity instance. May not be null</param>
            <param name="rowVersion">The row version.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.Trace(CodeFluent.Runtime.ICodeFluentEntity)">
            <summary>
            Traces the specified entity.
            </summary>
            <param name="entity">The entity instance to trace. May be null.</param>
            <returns>A string representing the instance trace or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.EntityDescriptor.GetViewDescriptor(System.String,System.Boolean)">
            <summary>
            Gets a view descriptor from a view name.
            </summary>
            <param name="name">The view name. May not be null.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>An instance of the ViewDescriptor class.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.Project">
            <summary>
            Gets the project.
            </summary>
            <value>The project.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.EntityType">
            <summary>
            Gets the entity type.
            </summary>
            <value>The entity type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.BaseEntityDescriptor">
            <summary>
            Gets the base entity descriptor. May be null.
            </summary>
            <value>
            The base entity descriptor.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.Tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
            <value>
            The tag. May be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.RootEntityDescriptor">
            <summary>
            Gets the root entity descriptor. May be null.
            </summary>
            <value>
            The root entity descriptor.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.CopyFromMethod">
            <summary>
            Gets the CopyFrom method.
            </summary>
            <value>The CopyFrom method.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.LoadByEntityKeyMethod">
            <summary>
            Gets the LoadByEntityKey method.
            </summary>
            <value>The LoadByEntityKey method.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.SaveMethod">
            <summary>
            Gets the Save method.
            </summary>
            <value>The save method.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.DeleteMethod">
            <summary>
            Gets the Delete method.
            </summary>
            <value>The delete method.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.CollectionType">
            <summary>
            Gets the entity collection type. May be null for lightweight entities.
            </summary>
            <value>The entity collection type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.RowVersionPropertyInfo">
            <summary>
            Gets the RowVersion property.
            </summary>
            <value>The row version property.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.Views">
            <summary>
            Gets the collection of views declared by this entity.
            </summary>
            <value>The collection of views.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.RelatedEntityProperties">
            <summary>
            Gets the collection of related entities properties declared by this entity.
            </summary>
            <value>The collection of related entities properties.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.EntityDescriptor.Methods">
            <summary>
            Gets the collection of methods declared by this entity.
            </summary>
            <value>The collection of methods.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.MethodDescriptor">
            <summary>
            Defines a class that describes partially the CodeFluent Entities method model at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.MethodDescriptor.#ctor(CodeFluent.Runtime.Model.EntityDescriptor,System.Reflection.MethodInfo,CodeFluent.Runtime.Model.MethodDescriptorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.MethodDescriptor"/> class.
            </summary>
            <param name="entity">The declaring entity. May not be null.</param>
            <param name="methodInfo">The method info. May not be null.</param>
            <param name="options">The method options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.MethodDescriptor.IsPagedMethod(System.Reflection.ParameterInfo[])">
            <summary>
            Determines whether a list of parameters describe a paged method.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>
            	<c>true</c> if the list of parameters describe a paged method; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.MethodDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.MethodDescriptor.Invoke(System.Object,System.Object[])">
            <summary>
            Invokes the method on the target object.
            </summary>
            <param name="obj">The target object.</param>
            <param name="parameters">A list of parameters to use.</param>
            <returns>The result of the method call.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.MethodDescriptor.BuildParametersValues(System.Collections.Generic.IEnumerable{CodeFluent.Runtime.Model.ProjectInvokeParameter},System.Boolean)">
            <summary>
            Builds a list of parameter values for this method, coerced using the required types.
            </summary>
            <param name="parameters">The input parameters.</param>
            <param name="throwOnError">if set to <c>true</c>, errors can be thrown.</param>
            <returns>A list of parameter values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.MethodDescriptor.ChangeToParameterType(System.Object,System.Reflection.ParameterInfo,System.Boolean)">
            <summary>
            Changes the type of an object to match the required target type..
            </summary>
            <param name="value">The value.</param>
            <param name="parameter">The parameter. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c>, errors can be thrown.</param>
            <returns>
            The value represented as the target type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.MethodDescriptor.Invoke(System.Object,System.Collections.Generic.IEnumerable{CodeFluent.Runtime.Model.ProjectInvokeParameter},System.Boolean)">
            <summary>
            Invokes this method on the target object.
            </summary>
            <param name="obj">The target object.</param>
            <param name="parameters">A list of parameters to use.</param>
            <param name="throwOnError">if set to <c>true</c>, errors can be thrown.</param>
            <returns>The result of the method call.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.MethodDescriptor.GetParameter(System.String)">
            <summary>
            Gets a method parameter using its name.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <returns>An instance of the ParameterDescriptor class.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.Options">
            <summary>
            Gets or sets the method options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.Tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
            <value>
            The tag. May be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.Entity">
            <summary>
            Gets the declaring entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.Name">
            <summary>
            Gets the method name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.IsOnCollection">
            <summary>
            Gets a value indicating whether this method is defined on the entity collection type.
            </summary>
            <value>
            	<c>true</c> if this method is defined on the entity collection type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.IsPaged">
            <summary>
            Gets a value indicating whether this method supports paged operations.
            </summary>
            <value><c>true</c> if this method supports paged operations; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.IsStatic">
            <summary>
            Gets a value indicating whether this method is static.
            </summary>
            <value><c>true</c> if this method is static; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.ReturnsCollection">
            <summary>
            Gets a value indicating whether this method returns an entity type collection.
            </summary>
            <value>
            	<c>true</c> if this method returns an entity type collection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.ParametersInfo">
            <summary>
            Gets the underlying parameters info.
            </summary>
            <value>The parameters info.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.MethodDescriptor.MethodInfo">
            <summary>
            Gets the underlying method info.
            </summary>
            <value>The method info.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.MethodDescriptorOptions">
            <summary>
            Defines a method descriptor options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.MethodDescriptorOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.MethodDescriptorOptions.IsOnCollection">
            <summary>
            The method is defined on the collection type, instead of the entity type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.MethodDescriptorOptions.IsPaged">
            <summary>
            The method supports paging operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.MethodDescriptorOptions.IsStatic">
            <summary>
            The method is defined as static, instead of instance.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ParameterDescriptor">
            <summary>
            Defines a class that describes partially the CodeFluent Entities parameter model at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ParameterDescriptor.#ctor(CodeFluent.Runtime.Model.MethodDescriptor,System.Reflection.ParameterInfo,CodeFluent.Runtime.Model.ParameterDescriptorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.ParameterDescriptor"/> class.
            </summary>
            <param name="method">The declaring method.</param>
            <param name="parameter">The parameter name.</param>
            <param name="options">The parameter options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ParameterDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ParameterDescriptor.Tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
            <value>
            The tag. May be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ParameterDescriptor.Method">
            <summary>
            Gets the declaring method.
            </summary>
            <value>The delcaring method.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ParameterDescriptor.Name">
            <summary>
            Gets the parameter name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ParameterDescriptor.DefaultValue">
            <summary>
            Gets the default value to use.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ParameterDescriptor.Options">
            <summary>
            Gets the parameter options.
            </summary>
            <value>The parameter options.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ProjectDescriptor">
            <summary>
            Defines a class that describes partially the CodeFluent Entities project model at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.JsonGet(CodeFluent.Runtime.Model.ProjectInvokeOptions)">
            <summary>
            Makes a call and return the value as a streamed JSON text.
            If an exception occurs and the WrapExceptionsAsJson result option is set, the result is a JSON stream representing the exception.
            </summary>
            <param name="options">The options to use.</param>
            <returns>A JSON text as a stream.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.JsonSerialize(CodeFluent.Runtime.Model.ProjectInvokeOptions,System.IO.TextWriter,System.Object)">
            <summary>
            Serializes an object using JSON.
            </summary>
            <param name="options">The options to use.</param>
            <param name="writer">The input writer. May not be null.</param>
            <param name="obj">The object to serialize.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.JsonPost(CodeFluent.Runtime.Model.ProjectInvokeOptions,System.IO.Stream)">
            <summary>
            Makes an update or delete JSON call.
            The result of the operation is returned as a JSON stream.
            If an exception occurs and the WrapExceptionsAsJson result option is set, the result is a JSON stream representing the exception.
            </summary>
            <param name="options">The options to use.</param>
            <param name="data">The input data.</param>
            <returns>A JSON stream or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.UnstreamedJsonPost(CodeFluent.Runtime.Model.ProjectInvokeOptions,System.IO.Stream)">
            <summary>
            Makes an update or delete call.
            The result of the operation is returned as an object.
            </summary>
            <param name="options">The options to use.</param>
            <param name="data">The input data.</param>
            <returns>A object that can be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.DynamicLoad(CodeFluent.Runtime.Model.ProjectInvokeOptions)">
            <summary>
            Dynamically load data from the project.
            </summary>
            <param name="options">The options to use.</param>
            <returns>An object with a type that depends on the input request.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.NewEntityDescriptor(System.Type)">
            <summary>
            Creates a new entity descriptor.
            </summary>
            <param name="entityType">The entity type.</param>
            <returns>A new instance of the EntityDescriptor type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.NewEnumerationDescriptor(System.Type)">
            <summary>
            Creates a new enumeration descriptor.
            </summary>
            <param name="enumerationType">The enumeration type.</param>
            <returns>A new instance of the EntityDescriptor type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.GetEnumerationDescriptor(System.Type,System.Boolean)">
            <summary>
            Gets an enumeration descriptor from its type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>An instance of the EnumerationDescriptor type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.GetEnumerationDescriptor(System.String,System.Boolean)">
            <summary>
            Gets an enumeration descriptor from its type name.
            </summary>
            <param name="assemblyQualifiedTypeName">The entity type name, optionally qualified with the defining assembly name.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>
            An instance of the EnumerationDescriptor type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.BuildEnumerationDescriptor(System.String,System.Boolean)">
            <summary>
            Builds an enumeration descriptor.
            </summary>
            <param name="assemblyQualifiedTypeName">The enumeration type name, optionally qualified with the defining assembly name.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>
            An instance of the EnumerationDescriptor type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.BuildEnumerationDescriptor(System.Type,System.Boolean)">
            <summary>
            Builds an enumeration descriptor.
            </summary>
            <param name="enumerationType">The enumeration type.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>
            An instance of the EnumerationDescriptor type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.GetEntityDescriptor(System.Type,System.Boolean)">
            <summary>
            Gets an entity descriptor from its type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>An instance of the EntityDescriptor type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.GetEntityDescriptor(System.Type,System.Boolean,System.Boolean)">
            <summary>
            Gets an entity descriptor from its type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <param name="expectEntityType">if set to <c>true</c> the type must implement the ICodeFluentEntity interface.</param>
            <returns>An instance of the EntityDescriptor type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.GetEntityDescriptor(System.String,System.Boolean)">
            <summary>
            Gets an entity descriptor from its type name.
            </summary>
            <param name="assemblyQualifiedTypeName">The entity type name, optionally qualified with the defining assembly name.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>
            An instance of the EntityDescriptor type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.GetEntityDescriptor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets an entity descriptor from its type name.
            </summary>
            <param name="assemblyQualifiedTypeName">The entity type name, optionally qualified with the defining assembly name.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <param name="expectEntityType">if set to <c>true</c> the type must implement the ICodeFluentEntity interface.</param>
            <returns>
            An instance of the EntityDescriptor type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.BuildEntityDescriptor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Builds an entity descriptor.
            </summary>
            <param name="assemblyQualifiedTypeName">The entity type name, optionally qualified with the defining assembly name.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <param name="expectEntityType">if set to <c>true</c> the type must implement the ICodeFluentEntity interface.</param>
            <returns>
            An instance of the EntityDescriptor type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.BuildEntityDescriptor(System.Type,System.Boolean)">
            <summary>
            Builds an entity descriptor.
            </summary>
            <param name="entityType">The entity type.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <returns>
            An instance of the EntityDescriptor type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ProjectDescriptor.BuildEntityDescriptor(System.Type,System.Boolean,System.Boolean)">
            <summary>
            Builds an entity descriptor.
            </summary>
            <param name="entityType">The entity type.</param>
            <param name="throwIfNotFound">if set to <c>true</c> the method will throw an error if not found.</param>
            <param name="expectEntityType">if set to <c>true</c> the type must implement the ICodeFluentEntity interface.</param>
            <returns>
            An instance of the EntityDescriptor type.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectDescriptor.OutputsPasswords">
            <summary>
            Gets a value indicating whether this instance outputs passwords.
            </summary>
            <value><c>true</c> if this instance outputs passwords; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectDescriptor.Tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
            <value>
            The tag. May be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ProjectDescriptor.Current">
            <summary>
            Gets the current project descriptor.
            </summary>
            <value>An instance of the ProjectDescriptor class.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ViewDescriptor">
            <summary>
            Defines a class that describes partially the CodeFluent Entities view model at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewDescriptor.#ctor(CodeFluent.Runtime.Model.EntityDescriptor,System.String,CodeFluent.Runtime.Model.ViewDescriptorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.ViewDescriptor"/> class.
            </summary>
            <param name="entity">The declaring entity. May not be null.</param>
            <param name="name">The view name. May not be null.</param>
            <param name="options">The view options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewDescriptor.EnsurePropertyDescriptor(CodeFluent.Runtime.Model.ViewDescriptor,System.String,System.Type,CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions)">
            <summary>
            Ensures the given property descriptor is declared on this view.
            </summary>
            <param name="view">The view.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="options">The options.</param>
            <returns>The view property descriptor.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewDescriptor.Project(System.Collections.IEnumerable,CodeFluent.Runtime.Model.ViewProjection)">
            <summary>
            Projects the specified enumerable using this view.
            </summary>
            <param name="enumerable">The enumerable.</param>
            <param name="projection">The projection to use.</param>
            <returns>An enumerable object of objects projected using this view.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewDescriptor.Project(System.Object,CodeFluent.Runtime.Model.ViewProjection)">
            <summary>
            Projects the specified object using this view.
            </summary>
            <param name="obj">The object to project.</param>
            <param name="projection">The projection to use.</param>
            <returns>An object projected using this view.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewDescriptor.Tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
            <value>
            The tag. May be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewDescriptor.Entity">
            <summary>
            Gets the declaring entity.
            </summary>
            <value>The declaring entity.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewDescriptor.Name">
            <summary>
            Gets the view name.
            </summary>
            <value>The view name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewDescriptor.Options">
            <summary>
            
            Gets the view options.
            </summary>
            <value>The view options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewDescriptor.Properties">
            <summary>
            Gets the properties declared by this view.
            </summary>
            <value>A dictionary of properties.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ViewProjection">
            <summary>
            Defines how view are projected as result data.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewProjection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.ViewProjection"/> class.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewProjection.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewProjection.BlobDefaultFormat">
            <summary>
            Gets or sets the blobs default format.
            </summary>
            <value>The blobs default format.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewProjection.MaximumByteDumpSize">
            <summary>
            Gets or sets the maximum size of bytes dump.
            </summary>
            <value>The maximum size of bytes dump.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ViewProjectionOptions">
            <summary>
            Defines projection options when projecting an entity from to a view.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewProjectionOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewProjectionOptions.ContinueOnEvaluateException">
            <summary>
            Continue processing if errors occur in views projections evaluation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewProjectionOptions.UsesFormat">
            <summary>
            View properties are evaluated using string formatting.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ViewPropertyDescriptor">
            <summary>
            Defines a class that describes partially the CodeFluent Entities view property model at runtime.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptor.RowId">
            <summary>
            Defines the column representing a combination of EntityKey and Row Version.
            Used for example by JqGrid as for the unique row id.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptor.EntityKey">
            <summary>
            Defines the name of the EntityKey property.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptor.EntityDisplayName">
            <summary>
            Defines the name of the EntityDisplayName property.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptor.RowVersion">
            <summary>
            Defines the name of the RowVersion property.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptor.TypeName">
            <summary>
            Defines the name of the TypeName property.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptor.EntityState">
            <summary>
            Defines the name of the EntityState property.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptor.RaisePropertyChangedEvents">
            <summary>
            Defines the name of the RaisePropertyChangedEvents property.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewPropertyDescriptor.#ctor(CodeFluent.Runtime.Model.ViewDescriptor,System.String,System.Type,CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Model.ViewPropertyDescriptor"/> class.
            </summary>
            <param name="view">The declaring view. May not be null.</param>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="options">The property options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewPropertyDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewPropertyDescriptor.EvaluateRowId(System.Object,CodeFluent.Runtime.Model.ViewProjection)">
            <summary>
            Evaluates the row id of a component.
            </summary>
            <param name="component">The component.</param>
            <param name="projection">The projection to use.</param>
            <returns>The evaluated value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewPropertyDescriptor.BuildRowId(System.String,System.Byte[])">
            <summary>
            Builds a row id.
            </summary>
            <param name="entityKey">The entity key.</param>
            <param name="rowVersion">The row version.</param>
            <returns>A string representing the row id</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewPropertyDescriptor.ParseRowId(System.String,System.String@,System.Byte[]@)">
            <summary>
            Parses a row id string. The row id string has been created
            </summary>
            <param name="text">The text.</param>
            <param name="entityKey">The entity key.</param>
            <param name="rowVersion">The row version.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewPropertyDescriptor.Evaluate(System.Object,CodeFluent.Runtime.Model.ViewProjection)">
            <summary>
            Evaluates the property value for the specified component.
            </summary>
            <param name="component">The component.</param>
            <param name="projection">The projection to use.</param>
            <returns>The evaluated value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewPropertyDescriptor.ResolvePropertyInfo(System.Boolean)">
            <summary>
            Resolves the property information for this property.
            </summary>
            <param name="refresh">if set to <c>true</c> refresh information.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewPropertyDescriptor.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings:
            Value
            Meaning
            Less than zero
            This instance is less than <paramref name="obj"/>.
            Zero
            This instance is equal to <paramref name="obj"/>.
            Greater than zero
            This instance is greater than <paramref name="obj"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Model.ViewPropertyDescriptor.CompareTo(CodeFluent.Runtime.Model.ViewPropertyDescriptor)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.TypeConverter">
            <summary>
            Gets the type converter. May be null.
            </summary>
            <value>The type converter.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.PropertyInfo">
            <summary>
            Gets the property info. May be null for view or dynamic properties.
            </summary>
            <value>The property info.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.Tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
            <value>
            The tag. May be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.IsBinaryLargeObject">
            <summary>
            Gets a value indicating whether this property is a binary large object.
            </summary>
            <value>
            	<c>true</c> if this property is binary large object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.View">
            <summary>
            Gets the declaring view.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.PropertyType">
            <summary>
            Gets the property type.
            </summary>
            <value>The property type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.Name">
            <summary>
            Gets the property name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.Options">
            <summary>
            Gets or sets the property options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.SortOrder">
            <summary>
            Gets or sets the property sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.Format">
            <summary>
            Gets or sets the property format. Used when the entity is projected to a view using string formatting.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Model.ViewPropertyDescriptor.Expression">
            <summary>
            Gets or sets the property expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions">
            <summary>
            Defines a view descriptor options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions.IsKey">
            <summary>
            The property is a key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions.IsEntity">
            <summary>
            The property type is an entity type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions.IsCollection">
            <summary>
            The property type is an entity collection type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions.IsBlob">
            <summary>
            The property is a binary large object.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions.IsRowId">
            <summary>
            The property is a combination of EntityKey and RowVersion.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions.IsDynamic">
            <summary>
            The property is dynamic.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Model.ViewPropertyDescriptorOptions.IsPassword">
            <summary>
            The property is a password.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CompareValidator">
            <summary>
            Provides comparions the value with a constant value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.ValueValidator">
            <summary>
            Acts as a base class for deriving a validation class so that a value of an object can be verified.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ValueValidator.MessagePrefix">
            <summary>
            Defines the prefix for Value Validator resource messages.
            Currently defined as "CFV".
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.ValueValidator"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.ValueValidator"/> class.
            </summary>
            <param name="failureHandler">The failure handler. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.Globalization.CultureInfo,System.String,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException},CodeFluent.Runtime.Rules.ValueValidator,System.Object)">
            <summary>
            Helper method to validated a member's value.
            </summary>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="memberName">The member name. May not be null.</param>
            <param name="results">The list of results. May not be null.</param>
            <param name="validator">The validator instance. May not be null.</param>
            <param name="value">The value to validate. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.Object,System.Globalization.CultureInfo,System.String,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException},CodeFluent.Runtime.Rules.ValueValidator,System.Object)">
            <summary>
            Helper method to validated a member's value.
            </summary>
            <param name="owner">The owner object.</param>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="memberName">The member name. May not be null.</param>
            <param name="results">The list of results. May not be null.</param>
            <param name="validator">The validator instance. May not be null.</param>
            <param name="value">The value to validate. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.Object)">
            <summary>
            Determines whether the value of an object is valid. 
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">The name of a member being validated. May be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">The name of a member being validated. May be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.ValidateMember(System.Object,System.String)">
            <summary>
            Determines whether the value of an object's member is valid using Reflection.
            </summary>
            <param name="instance">The object instance. May not be null.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.ValidateMember(System.Object,System.Globalization.CultureInfo,System.String)">
            <summary>
            Determines whether the value of an object's member is valid using Reflection.
            </summary>
            <param name="instance">The object instance. May not be null.</param>
            <param name="culture">The culture. May be null.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <returns>
            null if the value is valid; otherwise an error message in the current UI culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.ValidateMember(System.Object,System.Globalization.CultureInfo,System.String,System.Reflection.BindingFlags)">
            <summary>
            Determines whether the value of an object's member is valid using Reflection.
            </summary>
            <param name="instance">The object instance. May not be null.</param>
            <param name="culture">The culture. May be null.</param>
            <param name="memberName">Name of the object's member.</param>
            <param name="bindingAttr">The binding attributes.</param>
            <returns>null if the value is valid; otherwise an error message in the current UI culture.</returns>
        </member>
        <member name="E:CodeFluent.Runtime.Rules.ValueValidator.PropertyChanged">
            <summary>
            Occurs when a property changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.ValueValidator.FailureHandler">
            <summary>
            Gets or sets the failure handler.
            </summary>
            <value>The failure handler.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,CodeFluent.Runtime.Rules.CompareValidatorOperator,System.Object,System.Object,System.Object,CodeFluent.Runtime.Rules.CompareValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CompareValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="operator">The comparison operator.</param>
            <param name="valueToCompare">The value to compare. May be null.</param>
            <param name="maximumValue">The maximum value. May be null.</param>
            <param name="minimumValue">The minimum value. May be null.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.Evaluate(System.Object,System.Object,CodeFluent.Runtime.Rules.CompareValidatorOperator,CodeFluent.Runtime.Rules.CompareValidatorOptions,System.Globalization.CultureInfo)">
            <summary>
            Compares two values using the specified operator.
            </summary>
            <param name="value">The value input value.</param>
            <param name="valueToCompare">The value to compare.</param>
            <param name="operator">The operator.</param>
            <param name="options">The options.</param>
            <param name="culture">The culture to use for possible type coercion.</param>
            <returns>
            true if the comparison succeed; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.Evaluate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Compares the value with the constant value.
            </summary>
            <param name="value">The value to compare.</param>
            <param name="culture">The culture to use for possible type coercion.</param>
            <returns>
            true if the comparison succeed; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.ValueToCompare">
            <summary>
            Gets or sets the comparison value.
            </summary>
            <value>The comparison value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.MaximumValue">
            <summary>
            Gets or sets the maximum value of the validation range.
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.MinimumValue">
            <summary>
            Gets or sets the minimum value of the validation range.
            </summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.Operator">
            <summary>
            Gets or sets the comparison operator
            </summary>
            <value>The comparison operator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.Options">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CompareValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidator.FailureCode.Failed">
            <summary>
            The comparison has failed.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CompareValidatorOperator">
            <summary>
            Specifies the validation comparison operators used by the System.Web.UI.WebControls.CompareValidator
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.Equal">
            <summary>
            A comparison for equality.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.NotEqual">
            <summary>
            A comparison for inequality.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.GreaterThan">
            <summary>
            A comparison for greater than.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.GreaterThanEqual">
            <summary>
            A comparison for greater than or equal to.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.LessThan">
            <summary>
            A comparison for less than.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.LessThanEqual">
            <summary>
            A comparison for less than or equal to.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.DataTypeCheck">
            <summary>
            A comparison for data type only.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.Between">
            <summary>
            A range comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.BetweenEqual">
            <summary>
            A range comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.StartsWith">
            <summary>
            A comparison between the beginning of this instance and the specified string. This instance is converted to a string if needed before comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.EndsWith">
            <summary>
            A comparison between the beginning of this instance and the specified string. This instance is converted to a string if needed before comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.Contains">
            <summary>
            A comparison between this instance content and the specified string. This instance is converted to a string if needed before comparison.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CompareValidatorOptions">
            <summary>
            Defines validation options for comparison validator.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.IgnoreCase">
            <summary>
            String comparisons ignore case.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.NullAllowed">
            <summary>
            A null value is allowed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.EmptyAllowed">
            <summary>
            An empty string value is allowed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.Trim">
            <summary>
            The string for EmptyAllowed test is trimmed before being validated.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.LookupValidator">
            <summary>
            Provides validation of a string using a list of allowed values.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.SimpleStringValidator">
            <summary>
            Defines a base class for simple string validation.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.SimpleStringValidator"/> class.
            </summary>
            <param name="failureHandler">The failure handler.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.GetFailureCode(System.Object,System.String,System.Enum)">
            <summary>
            Gets the failure code.
            </summary>
            <param name="owner">The owner.</param>
            <param name="memberName">Name of the member.</param>
            <param name="code">The code.</param>
            <returns>A string representing the failure code.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.SimpleStringValidator.Options">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.SimpleStringValidator.BaseFailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.SimpleStringValidator.BaseFailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.SimpleStringValidator.BaseFailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LookupValidator.DefaultSeparator">
            <summary>
            Defines the default separator value.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LookupValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.String,System.Char,System.Boolean,System.StringComparison,System.Type,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.LookupValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="values">A comma-separated list of values.</param>
            <param name="separator">The separator character.</param>
            <param name="allowMultiple">if set to <c>true</c> a combination of allowed string is valid.</param>
            <param name="comparison">The comparison rule to use.</param>
            <param name="enumType">An enum type name.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LookupValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LookupValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string is in a list of allowed values.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.ValuesList">
            <summary>
            Gets the list of allowed values.
            </summary>
            <value>The list of allowed values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.Separator">
            <summary>
            Gets or sets the separator character.
            </summary>
            <value>The separator character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.AllowMultiple">
            <summary>
            Gets or sets a value indicating whether a combination of allowed values is valid.
            </summary>
            <value><c>true</c> if a combination of allowed values is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.Values">
            <summary>
            Gets or sets the list of allowed values.
            </summary>
            <value>The comma-separated list of values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.Comparison">
            <summary>
            Gets or sets the comparison rule to use.
            </summary>
            <value>The comparison rule to use.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.EnumType">
            <summary>
            Gets or sets the type of an enumeration class that will provide the list of allowed values.
            </summary>
            <value>The enumeration class type name.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.LookupValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LookupValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LookupValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LookupValidator.FailureCode.Failed">
            <summary>
            The string is not in the list of available values.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RequiredValidator">
            <summary>
            Provides validation of an object that must not be null or empty.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RequiredValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.LuhnValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="trim">if set to <c>true</c> the value is trimmed if it's a string.</param>
            <param name="allowEmpty">if set to <c>true</c> empty strings are allowed.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RequiredValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RequiredValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">The name of a member being validated. May be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RequiredValidator.Trim">
            <summary>
            Gets or sets a value indicating whether a string only composed of whitespaces is allowed.
            </summary>
            <value><c>true</c> if a string only composed of whitespace characters is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RequiredValidator.AllowEmpty">
            <summary>
            Gets or sets a value indicating whether an empty string is allowed.
            </summary>
            <value><c>true</c> if an empty string is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RequiredValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RequiredValidator.FailureCode.Null">
            <summary>
            The object is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RequiredValidator.FailureCode.Empty">
            <summary>
            The object is an empty string.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.LuhnValidator">
            <summary>
            Provides validation of a string using the Luhn algorithm.
            See http://en.wikipedia.org/wiki/Luhn_algorithm for more information
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.Boolean,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.LuhnValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="allowWhitespaces">if set to <c>true</c> whitespace characters are allowed.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string has a valid Luhn checksum.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.IsLuhnValid(System.String,System.Boolean)">
            <summary>
            Determines whether the specified string has a valid Luhn checksum.
            </summary>
            <param name="value">The input text. If null, false, will be returned.</param>
            <param name="allowWhitespaces">if set to <c>true</c> whitespace characters are allowed.</param>
            <returns>
            	<c>true</c> if the specified string has a valid Luhn checksum; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.CalculateLuhnCheckDigit(System.String,System.Boolean)">
            <summary>
            Calculates the luhn check digit.
            </summary>
            <param name="value">The input text.</param>
            <param name="allowWhitespaces">if set to <c>true</c> whitespace characters are allowed.</param>
            <returns>
            The Luhn checksum or -1 if the input string contains invalid characters.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.CalculateLuhnCheckDigit(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calculates the luhn check digit.
            </summary>
            <param name="value">The input text.</param>
            <param name="start">The start offset in the input text.</param>
            <param name="count">The count of digits to consider in the input text.</param>
            <param name="allowWhitespaces">if set to <c>true</c> whitespace characters are allowed.</param>
            <returns>
            The Luhn checksum or -1 if the input string contains invalid characters.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LuhnValidator.AllowWhitespaces">
            <summary>
            Gets or sets a value indicating whether whitespace characters are allowed.
            </summary>
            <value><c>true</c> if whitespace characters are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.LuhnValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LuhnValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LuhnValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LuhnValidator.FailureCode.Failed">
            <summary>
            The string is not a valid Luhn string.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.EmailValidator">
            <summary>
            Provides validation of an email string.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.DefaultExpression">
            <summary>
            Defines the default regular expression for email address validation as per RFC 2822.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.Html5Expression">
            <summary>
            Defines the regular expression for email address validation as per HTML5 forms. http://www.w3.org/TR/html5/forms.html#valid-e-mail-address
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.EmailValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.String,System.String,System.Text.RegularExpressions.RegexOptions,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.EmailValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="validDomains">A comma separated list of valid domains.</param>
            <param name="expression">A string that specifies the regular expression to use.</param>
            <param name="regexOptions">Regular expression options.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.EmailValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string is a valid email.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.EmailValidator.ValidDomains">
            <summary>
            Gets or sets a list of valid domain names. If null or empty, all domain names are allowed.
            Only used if the regular expression defines a match 'domain' group, which is the default case.
            The first character of a specified name may be the wildcard '*' character.
            </summary>
            <value>The valid domain names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.EmailValidator.Expression">
            <summary>
            Gets or sets the regular expression that validates email.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.EmailValidator.RegexOptions">
            <summary>
            Gets or sets optional flags for the regular expression that validates email.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.EmailValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.FailureCode.Failed">
            <summary>
            The string is not a valid email.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.FailureCode.InvalidDomain">
            <summary>
            The domain name is invalid.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.ObjectValidator">
            <summary>
            Provides validation of an object, preferrably an entity or a collection.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ObjectValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.ObjectValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="allowNullOrEmpty">if set to <c>true</c> if empty collections or null entities are allowed.</param>
            <param name="enumerate">if set to <c>true</c> IEnumerable should be used if implemented.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ObjectValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ObjectValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">The name of a member being validated. May be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.ObjectValidator.Enumerate">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Rules.ObjectValidator"/> should enumerate objects implementing IEnumerable.
            </summary>
            <value><c>true</c> if IEnumerable should be used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.ObjectValidator.AllowNullOrEmpty">
            <summary>
            Gets or sets a value indicating whether empty collections or null entities are allowed.
            </summary>
            <value><c>true</c> if empty collections or null entities are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.ObjectValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ObjectValidator.FailureCode.Null">
            <summary>
            The entity is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ObjectValidator.FailureCode.Empty">
            <summary>
            The collection is empty.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RegularExpressionValidator">
            <summary>
            Provides validation of a string based on the rules provided by a regular expression.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RegularExpressionValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.String,System.Text.RegularExpressions.RegexOptions,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RegularExpressionValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="expression">A string that specifies a regular expression.</param>
            <param name="regexOptions">Regular expression options.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RegularExpressionValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RegularExpressionValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RegularExpressionValidator.Expression">
            <summary>
            Gets or sets the regular expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RegularExpressionValidator.RegexOptions">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RegularExpressionValidator.Options">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RegularExpressionValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RegularExpressionValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RegularExpressionValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RegularExpressionValidator.FailureCode.RegexFailed">
            <summary>
            The string failed regex validation.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler">
            <summary>
            Defines the default validation failure handler.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.IValueValidationFailureHandler">
            <summary>
            Defines an interface for value validation failure.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.IValueValidationFailureHandler.Handle(System.Object,System.Globalization.CultureInfo,CodeFluent.Runtime.Rules.ValueValidator,System.String,System.Object[])">
            <summary>
            Handles a validation failure for a specific value.
            </summary>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <param name="validator">The validator instance.</param>
            <param name="failureCode">The failure code.</param>
            <param name="arguments">The arguments.</param>
            <returns>The validation failure message. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.GetMessage(System.Globalization.CultureInfo,CodeFluent.Runtime.Rules.ValueValidator,System.String,System.Object[])">
            <summary>
            Gets a validation failure message.
            </summary>
            <param name="culture">The culture. May be null.</param>
            <param name="validator">The validator instance. May not be null.</param>
            <param name="failureCode">The failure code. May be null.</param>
            <param name="arguments">The arguments.</param>
            <returns>The validation failure message. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.GetCode(CodeFluent.Runtime.Rules.ValueValidator,System.String)">
            <summary>
            Gets the resource code for a failure code.
            </summary>
            <param name="validator">The validator instance. May not be null.</param>
            <param name="failureCode">The failure code. May be null.</param>
            <returns>The resource code. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.Handle(System.Object,System.Globalization.CultureInfo,CodeFluent.Runtime.Rules.ValueValidator,System.String,System.Object[])">
            <summary>
            Handles a validation failure for a specific value.
            </summary>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <param name="validator">The validator instance.</param>
            <param name="failureCode">The failure code.</param>
            <param name="arguments">The arguments.</param>
            <returns>
            The validation failure message. May not be null.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.Default">
            <summary>
            Gets the handler for CodeFluent default messages.
            </summary>
            <value>The handler for CodeFluent default messages.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RuleParameterAttribute">
            <summary>
            Used to specify a rule parameter.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="name">The model name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="name">The model name.</param>
            <param name="defaultValue">The default value for the parameter.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="defaultValue">The default value for the parameter.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(CodeFluent.Runtime.Rules.RuleParameterAttribute.RuleParameterOptions,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="options">An optional set of flags.</param>
            <param name="defaultValue">The default value for the parameter.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(System.String,CodeFluent.Runtime.Rules.RuleParameterAttribute.RuleParameterOptions,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="name">The model name.</param>
            <param name="options">An optional set of flags.</param>
            <param name="defaultValue">The default value for the parameter.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RuleParameterAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RuleParameterAttribute.DefaultValue">
            <summary>
            Gets the default value. May be null.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RuleParameterAttribute.RuleParameterOptions">
            <summary>
            Defines rule parameter options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RuleParameterAttribute.RuleParameterOptions.None">
            <summary>
            The rule parameter has no options.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RuleWrapper">
            <summary>
            Defines a rule engine wrapper.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RuleWrapper.BindingFlagsSettingName">
            <summary>
            Defines the binding flags setting name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RuleWrapper.MethodNameSettingName">
            <summary>
            Defines the method name setting name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleWrapper.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleWrapper"/> class.
            </summary>
            <param name="methodTypeName">Type name of the method. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleWrapper.#ctor(System.String,CodeFluent.Runtime.Utilities.Pair{System.String,System.Object}[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleWrapper"/> class.
            </summary>
            <param name="settings">The static settings to use. May be null.</param>
            <param name="methodTypeName">Type name of the method. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleWrapper.#ctor(System.String,System.Collections.Specialized.IOrderedDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleWrapper"/> class.
            </summary>
            <param name="settings">The static settings to use. May be null.</param>
            <param name="methodTypeName">Type name of the method. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleWrapper.Invoke(System.Collections.Specialized.IOrderedDictionary)">
            <summary>
            Invokes the specified rule.
            </summary>
            <param name="arguments">The method arguments. May be null.</param>
            <returns>An object whose value depends on the invoked rule. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleWrapper.Invoke(System.Collections.Specialized.IOrderedDictionary,System.Collections.Specialized.IOrderedDictionary)">
            <summary>
            Invokes the specified rule.
            </summary>
            <param name="settings">The static settings to use. May be null.</param>
            <param name="arguments">The method arguments. May be null.</param>
            <returns>An object whose value depends on the invoked rule. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleWrapper.Invoke(System.Collections.Specialized.IOrderedDictionary,System.Type,System.IFormatProvider,System.Object)">
            <summary>
            Invokes the specified rule.
            </summary>
            <param name="arguments">The method arguments. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="defaultValue">The default value if an error occurs. May be null.</param>
            <returns>An object whose value depends on the invoked rule. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleWrapper.Invoke(System.Collections.Specialized.IOrderedDictionary,System.Collections.Specialized.IOrderedDictionary,System.Type,System.IFormatProvider,System.Object)">
            <summary>
            Invokes the specified rule.
            </summary>
            <param name="settings">The static settings to use. May be null.</param>
            <param name="arguments">The method arguments. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="defaultValue">The default value if an error occurs. May be null.</param>
            <returns>An object whose value depends on the invoked rule. May be null.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RuleWrapper.Settings">
            <summary>
            Gets the settings. May be null.
            </summary>
            <value>The settings.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RuleWrapper.MethodTypeName">
            <summary>
            Gets the type name of the method.
            </summary>
            <value>The type name. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RuleWrapper.Instance">
            <summary>
            Gets the rule instance.
            </summary>
            <value>The rule instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RuleWrapper.InstanceType">
            <summary>
            Gets the type of the rule instance.
            </summary>
            <value>The type of the rule instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RuleWrapper.Method">
            <summary>
            Gets the rule engine instance.
            </summary>
            <value>The instance object. May be null.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.ScriptingRule">
            <summary>
            Defines the implementation of the ActiveX Scripting rule engine for CodeFluent.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.IMethod">
            <summary>
            Defines the interface that a CodeFluent rule engine must implement.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.IMethod.Invoke(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Invokes the specified rule.
            </summary>
            <param name="settings">The static settings. May be null.</param>
            <param name="arguments">The arguments. May be null.</param>
            <returns>An object whose value depends on the invoked rule. May be null.</returns>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ScriptingRule.CacheDomainName">
            <summary>
            Defines the caching domain name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ScriptingRule.CacheKeySettingName">
            <summary>
            Defines the name of the cache key setting.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ScriptingRule.RuleLanguageSettingName">
            <summary>
            Defines the name of the rule language setting.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ScriptingRule.AllowUISettingName">
            <summary>
            Defines the name of the allow ui setting.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ScriptingRule.RuleFunctionNameSettingName">
            <summary>
            Defines the name of the rule body setting.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ScriptingRule.ExportRuleBodySettingName">
            <summary>
            Defines the name of the export rule body setting.
            If ExportRuleBody is true, the script rule body will be saved to the file system.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ScriptingRule.BodyFileExtensionSettingName">
            <summary>
            Defines the name of the rule body file extension setting.
            If ExportRuleBody is true, the script rule body will be saved to the file system with then specified extension.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ScriptingRule.NameSettingName">
            <summary>
            Defines the name of the name setting.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ScriptingRule.RuleBodySettingName">
            <summary>
            Defines the name of the rule body setting.
            The RuleBody setting defines the rule body in the target ActiveX scripting language.
            Currently, only VBScript and Javascript are fully supported.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ScriptingRule.Invoke(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Invokes the specified rule.
            </summary>
            <param name="settings">The static settings. May not be null.</param>
            <param name="arguments">The arguments. May not be null.</param>
            <returns>
            An object depending on the invoked rule. May be null.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.StringValidator">
            <summary>
            Provides validation of a string value.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.StringValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.Int32,System.Int32,System.String,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.StringValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="minLength">An integer that specifies the minimum length of the string value.</param>
            <param name="maxLength">An integer that specifies the maximum length of the string value.</param>
            <param name="invalidCharacters">A string that represents invalid characters.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.StringValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.StringValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.StringValidator.MinLength">
            <summary>
            Gets or sets the minimum length of the string.
            </summary>
            <value>The minimum length of the string.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.StringValidator.MaxLength">
            <summary>
            Gets or sets the maximum length of the string.
            </summary>
            <value>The maximum length of the string.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.StringValidator.Options">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.StringValidator.InvalidCharacters">
            <summary>
            Gets or sets a string that represents invalid characters.
            </summary>
            <value>The a string that represents invalid characters.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.StringValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.MinLength">
            <summary>
            The string is too short.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.MaxLength">
            <summary>
            The string is too long.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.InvalidCharacters">
            <summary>
            The string has invalid characters.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.StringValidatorOptions">
            <summary>
            Defines validation options for string.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.NullDisallowed">
            <summary>
            A null value is disallowed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.EmptyDisallowed">
            <summary>
            An empty value is disallowed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.Trim">
            <summary>
            The string is trimmed before being validated.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.EmptyAllowed">
            <summary>
            An empty string is always valid, regardless of other rules. The EmptyDisallowed option has priority over this option.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.UrlValidator">
            <summary>
            Provides validation of an url string.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.UrlValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.UriKind,System.String,System.String,System.String,System.String,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.StringValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="kind">The kind.</param>
            <param name="validSchemes">A comma separated list of valid schemes.</param>
            <param name="validPorts">A comma separated list of valid ports.</param>
            <param name="validHostNames">A comma separated list of valid host names.</param>
            <param name="validHostNameTypes">A comma separated list of valid host name types.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.UrlValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string is a valid url.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.ValidHostNameTypes">
            <summary>
            Gets or sets a list of valid host name types. If null or empty, all host name types are allowed.
            Only used if the url is an absolute url.
            </summary>
            <value>The valid host name types.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.ValidHostNames">
            <summary>
            Gets or sets a list of valid host names. If null or empty, all host names are allowed.
            Only used if the url is an absolute url.
            </summary>
            <value>The valid host names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.ValidPorts">
            <summary>
            Gets or sets a list of valid ports. If null or empty, all ports are allowed.
            Only used if the url is an absolute url.
            </summary>
            <value>The valid ports.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.ValidSchemes">
            <summary>
            Gets or sets a list of valid schemes. If null or empty, all schemes are allowed.
            Only used if the url is an absolute url.
            </summary>
            <value>The valid schemes.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.Kind">
            <summary>
            Gets or sets the kind of uri. The default is Absolute.
            </summary>
            <value>The kind of the uri.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.UrlValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.Failed">
            <summary>
            The string is not a valid url.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.InvalidScheme">
            <summary>
            The scheme is invalid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.InvalidPort">
            <summary>
            The port is invalid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.InvalidHostName">
            <summary>
            The host name is invalid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.InvalidHostNameType">
            <summary>
            The host name type is invalid.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.SerializationMode">
            <summary>
            Defines the serialization mode.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.SerializationMode.Undefined">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.SerializationMode.None">
            <summary>
            The property must not be serialized.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.SerializationMode.Standard">
            <summary>
            The property will be serialized using the standard for the current underlying technology.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.SerializationMode.Default">
            <summary>
            The default value. Currently defined as Standard.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1">
            <summary>
            Provides the base implementation used to create Windows Communication Foundation (WCF) client objects that can call services.
            </summary>
            <typeparam name="TChannel">The channel to be used to connect to the service.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor(System.ServiceModel.InstanceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
            <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
            <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
            <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
            <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
            <param name="binding">The binding with which to make calls to the service.</param>
            <param name="remoteAddress">The address of the service endpoint.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
            <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
            <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
            <param name="remoteAddress">The address of the service endpoint.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
            <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
            <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
            <param name="remoteAddress">The address of the service endpoint.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
            <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
            <param name="binding">The binding with which to make calls to the service.</param>
            <param name="remoteAddress">The address of the service endpoint.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
            <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
            <param name="remoteAddress">The address of the service endpoint.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentClient`1"/> class.
            </summary>
            <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
            <param name="remoteAddress">The address of the service endpoint.</param>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs">
            <summary>
            Provides data for an action event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs.#ctor(CodeFluent.Runtime.ServiceModel.ICodeFluentEntity,CodeFluent.Runtime.CodeFluentEntityAction)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs"/> class.
            </summary>
            <param name="entity">The entity. may not be null.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs.#ctor(CodeFluent.Runtime.ServiceModel.ICodeFluentEntity,CodeFluent.Runtime.CodeFluentEntityAction,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs"/> class.
            </summary>
            <param name="entity">The entity. May not be null.</param>
            <param name="action">The action.</param>
            <param name="isCancelable">if set to <c>true</c> the event is cancelable.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs.#ctor(CodeFluent.Runtime.ServiceModel.ICodeFluentEntity,CodeFluent.Runtime.CodeFluentEntityAction,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs"/> class.
            </summary>
            <param name="entity">The entity. May not be null.</param>
            <param name="action">The action.</param>
            <param name="isCancelable">if set to <c>true</c> the event is cancelable.</param>
            <param name="argument">The argument. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs.Entity">
            <summary>
            Gets the entity instance that created the event.
            </summary>
            <value>The entity. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs.Action">
            <summary>
            Gets the action <see cref="T:CodeFluent.Runtime.CodeFluentEntityAction"/> type.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs.Culture">
            <summary>
            Gets or sets the culture used for event resolution.
            </summary>
            <value>The culture. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs.Argument">
            <summary>
            Gets or sets the event argument.
            The argument depends on the type of event action.
            </summary>
            <value>The argument. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs.IsCancelable">
            <summary>
            Gets a value indicating whether this event is cancelable.
            </summary>
            <value>
            	<c>true</c> if this event is cancelable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentEntityActionEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this event is canceled.
            </summary>
            <value><c>true</c> if this event is canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2">
            <summary>
            Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="Te">The item type for this class.</typeparam>
            <typeparam name="Tk">The key type for this class.</typeparam>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1">
            <summary>
            Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="Te">The item type for this class.</typeparam>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ISortableList`1">
            <summary>
            Defines a sortable list.
            </summary>
            <typeparam name="T">The type of items in the list.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ISortableList`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire list using the specified Comparison.
            </summary>
            <param name="comparison">The Comparison to use when comparing elements.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ISortableList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in a range of elements in list using the specified comparer.
            </summary>
            <param name="index">The length of the range to sort.</param>
            <param name="count">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or null to use the default comparer Default.</param>
        </member>
        <member name="F:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.EnumerationPagesRatios">
            <summary>
            Defines ratios suited for forward read operations (enumeration).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.NavigationPagesRatios">
            <summary>
            Defines ratios suited for end user paged navigation.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.BlockReentrancy">
            <summary>
            Blocks the reentrancy.
            </summary>
            <returns>A disposable interface.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.CheckReentrancy">
            <summary>
            Checks the reentrancy.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the list to an array, starting at a particular array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from list. The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An enumerator object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:CollectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ListChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.NotifyCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Notifies the collection has changed.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.NotifyCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,`0,System.Int32)">
            <summary>
            Notifies the collection has changed.
            </summary>
            <param name="action">The action.</param>
            <param name="item">The item.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the list.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Add(`0)">
            <summary>
            Adds an element to the list.
            </summary>
            <param name="item">The element to add to the list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.GetLastLoadedPageIndex">
            <summary>
            Gets the index of the last loaded page.
            </summary>
            <returns>The index of the last loaded page.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.ImportPage(System.Int32,CodeFluent.Runtime.ServiceModel.CodeFluentObservableList{`0})">
            <summary>
            Imports a page into the list.
            </summary>
            <param name="index">The page index.</param>
            <param name="list">The list to import from.</param>
            <returns>A new page.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific element in the list.
            </summary>
            <param name="item">The element to locate in the list.</param>
            <returns>
            The index of element if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an element to the list at the specified index.
            </summary>
            <param name="index">The zero-based index at which element should be inserted.</param>
            <param name="item">The element to insert into the list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Contains(`0)">
            <summary>
            Determines whether the list contains a specific element.
            </summary>
            <param name="item">The element to locate in the list.</param>
            <returns>
            true if element is found in the list; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the list to an array, starting at a particular array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from list. The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific element from the list.
            </summary>
            <param name="item">The element to remove from the list.</param>
            <returns>
            true if element was successfully removed from the list; otherwise, false. This method also returns false if element is not found in the original list.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.LoadKnownItems">
            <summary>
            Loads the items up to known count.
            </summary>
            <returns>The known items count.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.ToArray">
            <summary>
            Copies the elements of the list to a new array.
            </summary>
            <returns>An array containing copies of the elements of the list</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Clear">
            <summary>
            Removes all elements from the list.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an element to the list.
            </summary>
            <param name="item">The element to add to the list.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the list contains a specific element.
            </summary>
            <param name="item">The element to locate in the list.</param>
            <returns>
            	<c>true</c> if the element is found in the list; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="item">The element to locate in the list.</param>
            <returns>The index of the element or -1 if it was not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts the specified element at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The element to insert into the list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific element from the list.
            </summary>
            <param name="item">The element to remove from the list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Sort">
            <summary>
            Sorts the elements in the entire list using the default comparer.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire list using the specified comparer.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in a range of elements in the list using the specified comparer.
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or null to use the default comparer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in a range of elements in the list using the specified comparison.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1"/> class.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.#ctor(System.String,System.ServiceModel.Channels.IChannel,System.String,CodeFluent.Runtime.PageOptions,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1"/> class for paged reading.
            </summary>
            <param name="contextName">Name of the CodeFluent runtime context. May not be null.</param>
            <param name="channel">The input channel. May not be null.</param>
            <param name="pageMethodName">Name of the page method.</param>
            <param name="pageOptions">Options for the paging operation. May be null.</param>
            <param name="arguments">The optional arguments. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Construct(System.String,System.ServiceModel.Channels.IChannel,System.String,CodeFluent.Runtime.PageOptions,System.Object[])">
            <summary>
            Constructs the specified list.
            </summary>
            <param name="contextName">Name of the CodeFluent runtime context. May not be null.</param>
            <param name="channel">The input channel. May not be null.</param>
            <param name="pageMethodName">Name of the page method.</param>
            <param name="pageOptions">Options for the paging operation. May be null.</param>
            <param name="arguments">The optional arguments. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Enumerate(System.Predicate{`0})">
            <summary>
            Enumerates all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The predicate delegate that defines the conditions of the elements to search for.</param>
            <returns>A list containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.ReverseEnumerate(System.Predicate{`0})">
            <summary>
            Enumerates all the elements that match the conditions defined by the specified predicate in reverse order.
            </summary>
            <param name="match">The predicate delegate that defines the conditions of the elements to search for.</param>
            <returns>A list containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.BinarySearch(`0)">
            <summary>
            Searches the entire sorted list for an element using the default comparer and returns the zero-based index of the element.
            </summary>
            <param name="item">The object to locate. The value can be null for reference types.</param>
            <returns>
            The zero-based index of item in the sorted list, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than item or, if there is no larger element, the bitwise complement of Count.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
            <summary>
            Searches the entire sorted list for an element using the specified comparer and returns the zero-based index of the element.
            </summary>
            <param name="item">The object to locate. The value can be null for reference types.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or null to use the default comparer Default.</param>
            <returns>
            The zero-based index of item in the sorted list, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than item or, if there is no larger element, the bitwise complement of Count.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
            <summary>
            Searches a range of elements in the sorted list for an element using the specified comparer and returns the zero-based index of the element.
            </summary>
            <param name="index">The zero-based starting index of the range to search.</param>
            <param name="count">The length of the range to search.</param>
            <param name="item">The object to locate. The value can be null for reference types.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or null to use the default comparer Default.</param>
            <returns>The zero-based index of item in the sorted list, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than item or, if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.FindAll(CodeFluent.Runtime.ServiceModel.CodeFluentObservableList{`0},System.Predicate{`0})">
            <summary>
            Retrieves all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="list">The list to add found elements to.</param>
            <param name="match">The predicate delegate that defines the conditions of the elements to search for.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.FindAll(System.Predicate{`0})">
            <summary>
            Retrieves all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The predicate delegate that defines the conditions of the elements to search for.</param>
            <returns>A list containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.FindIndex(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire list.
            </summary>
            <param name="match">The predicate delegate that defines the conditions of the element to search for.</param>
            <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.FindIndex(System.Int32,System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the list that extends from the specified index to the last element.
            </summary>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="match">The predicate delegate that defines the conditions of the element to search for.</param>
            <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the list that starts at the specified index and contains the specified number of elements.
            </summary>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="count">The number of elements in the section to search.</param>
            <param name="match">The predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Find(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire list.
            </summary>
            <param name="match">The predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type T.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.ReverseForEach(System.Action{`0})">
            <summary>
            Performs the specified action on each element of the list in reverse order.
            </summary>
            <param name="action">The action delegate to perform on each element of the list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.ForEach(System.Action{`0})">
            <summary>
            Performs the specified action on each element of the list.
            </summary>
            <param name="action">The action delegate to perform on each element of the list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.TrueForAll(System.Predicate{`0})">
            <summary>
            Determines whether every element in the list matches the conditions defined by the specified predicate.
            </summary>
            <param name="match">The predicate delegate that defines the conditions to check against the elements.</param>
            <returns>true if every element in the list matches the conditions defined by the specified predicate; otherwise, false. If the list has no elements, the return value is true.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.op_Implicit(CodeFluent.Runtime.ServiceModel.CodeFluentObservableList{`0})~`0[]">
            <summary>
            Performs an implicit conversion from a list to an array.
            </summary>
            <param name="list">The input list.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.op_Implicit(`0[])~CodeFluent.Runtime.ServiceModel.CodeFluentObservableList{`0}">
            <summary>
            Performs an implicit conversion from an array to a list.
            </summary>
            <param name="array">The array.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Clone(System.Boolean)">
            <summary>
            Clones this list.
            </summary>
            <param name="deep">if set to <c>true</c> items in the list are cloned as well, if they implement the System.IClonable interface.</param>
            <returns>A new instance of this list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.CopyTo(CodeFluent.Runtime.ServiceModel.CodeFluentObservableList{`0},System.Boolean)">
            <summary>
            Clones this list into the specified list.
            </summary>
            <param name="list">The target list. May not be null.</param>
            <param name="deep">if set to <c>true</c> items in the list are cloned as well, if they implement the System.IClonable interface.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.AddNew">
            <summary>
            Adds a new item to the list.
            </summary>
            <returns>The item added to the list</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
            <summary>
            Raises the <see cref="E:AddingNew"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.AddingNewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the items.
            </summary>
            <param name="property">The property to sort by.</param>
            <param name="direction">The direction to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Returns the index of the row that has the given <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="property">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to search on.</param>
            <param name="key">The value of the <paramref name="property"/> parameter to search for.</param>
            <returns>
            The index of the row that has the given <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.GetUserMessage(System.Globalization.CultureInfo,CodeFluent.Runtime.UserExceptionType,System.String,System.Object[])">
            <summary>
            Gets an end user exception message.
            </summary>
            <param name="culture">The culture to use. If null, CultureInfo.CurrentUICulture will be used.</param>
            <param name="type">The type of the exception.</param>
            <param name="name">An extra name to use. May be null.</param>
            <param name="args">An optional array of arguments.</param>
            <returns>A text describing the exception.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.RemoveSort">
            <summary>
            Removes any sort applied using <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)"/>.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.AddingNew">
            <summary>
            Occurs before an item is added to the list.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.ListChanged">
            <summary>
            Occurs when the list changed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Pages">
            <summary>
            Gets the data pages.
            </summary>
            <value>The data pages.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Channel">
            <summary>
            Gets the WCF channel.
            </summary>
            <value>The channel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Arguments">
            <summary>
            Gets the arguments.
            </summary>
            <value>The arguments.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Context">
            <summary>
            Gets the CodeFluent runtime context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.PageMethod">
            <summary>
            Gets the page method.
            </summary>
            <value>The page method.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.IsCountExact">
            <summary>
            Gets a value indicating whether Count is valid.
            </summary>
            <value>
            	<c>true</c> if this Count is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.RealCount">
            <summary>
            Gets the real number of elements contained in the list.
            Returns System.Int32.MaxValue if the real count is still unknown.
            </summary>
            <value>The real number of elements contained in the list.</value>
            <returns>The real number of elements contained in the list.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.KnownCount">
            <summary>
            Gets the known number of elements at this time.
            </summary>
            <value>The known number of elements contained in the list.</value>
            <returns>The known number of elements contained in the list.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.MaxCount">
            <summary>
            Gets or sets the count that will be sent by the Count property if the real number of elements is still unknown.
            If this value is less or equal to 0, the Count property will be equals to KnownCount plus PageSize.
            The default is System.Int32.MaxValue.
            </summary>
            <value>The max count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.CheckPagedBindingList">
            <summary>
            Gets or sets a value indicating whether a check must be done.
            This value should be set to true (which the default) in WinForms or WPF (Windows Presentation Foundation) databinding contexts.
            </summary>
            <value>
            	<c>true</c> if the check must be done; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Count">
            <summary>
            Gets the number of elements contained in the list.
            Equals to RealCount if the real count is known; otherwise equals to KnownCount plus PageSize if MaxCount is 0 or less; otherwise equals to MaxCount.
            </summary>
            <value>The number of elements contained in the list.</value>
            <returns>The number of elements contained in the list.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.IsPaged">
            <summary>
            Gets a value indicating whether this instance is paged.
            </summary>
            <value><c>true</c> if this instance is paged; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.PageWaitTimeout">
            <summary>
            Gets the wait timeout in milliseconds.
            </summary>
            <value>The wait timeout.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.PageCount">
            <summary>
            Gets the count of the page.
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.PageSize">
            <summary>
            Gets the size of a page.
            </summary>
            <value>The size of a page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.PagesRatios">
            <summary>
            Gets or sets the page ratios. It must be an array of 4 elements. The sum of all 4 elements must be 100.
            </summary>
            <value>The page ratios.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.FirstPagesRatio">
            <summary>
            Gets the first page ratio.
            </summary>
            <value>The first page ratio.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.BeforePagesRatio">
            <summary>
            Gets the before page ratio.
            </summary>
            <value>The before page ratio.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.AfterPagesRatio">
            <summary>
            Gets the after page ratio.
            </summary>
            <value>The after page ratio.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.LastPagesRatio">
            <summary>
            Gets the last page ratio.
            </summary>
            <value>The last page ratio.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only.
            </summary>
            <value>true if the list is read-only; otherwise, false.</value>
            <returns>true if the list is read-only; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the list has a fixed size.
            </summary>
            <value>true if the list has a fixed size; otherwise, false.</value>
            <returns>true if the list has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the list is synchronized (thread safe).
            </summary>
            <value>true if access to the list is synchronized (thread safe); otherwise, false</value>
            <returns>true if access to the list is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the list.
            </summary>
            <value>An object that can be used to synchronize access to the list.</value>
            <returns>An object that can be used to synchronize access to the list.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <value>The element at the specified index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <value>The element.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.RaiseListChangedEvents">
            <summary>
            Gets or sets a value indicating whether list changed events must be raised.
            </summary>
            <value>
            	<c>true</c> if list changed events must be raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.RaiseCollectionChangedEvents">
            <summary>
            Gets or sets a value indicating whether collection changed events must be raised.
            </summary>
            <value>
            	<c>true</c> if collection changed events must be raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.BindingListManager">
            <summary>
            Gets the binding list manager.
            </summary>
            <value>The binding list manager.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.SupportsChangeNotification">
            <summary>
            Gets a value determining whether a <see cref="E:System.ComponentModel.IBindingList.ListChanged"/> event is raised when the list changes or an item in the list changes.
            </summary>
            <value></value>
            <returns>true if a <see cref="E:System.ComponentModel.IBindingList.ListChanged"/> event is raised when the list changes or when an item changes; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.SupportsSearching">
            <summary>
            Gets a value determining whether the list supports searching using the <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)"/> method.
            </summary>
            <value></value>
            <returns>true if the list supports searching using the <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)"/> method; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.SupportsSorting">
            <summary>
            Gets a value determining whether the list supports sorting.
            </summary>
            <value></value>
            <returns>true if the list supports sorting; otherwise, false.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Page">
            <summary>
            Defines a list page.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Page.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Page"/> class.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Page.#ctor(System.Int32,System.Collections.Generic.List{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Page"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Page.CompareTo(CodeFluent.Runtime.ServiceModel.CodeFluentObservableList{`0}.Page)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Page.Index">
            <summary>
            Gets the page index.
            </summary>
            <value>The page index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Page.List">
            <summary>
            Gets the page data list.
            </summary>
            <value>The page data list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableList`1.Page.CreationTime">
            <summary>
            Gets the page creation time.
            </summary>
            <value>The page creation time.</value>
        </member>
        <member name="F:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.BaseDictionary">
            <summary>
            Gets the underlying dictionary instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2"/> class.
            </summary>
            <param name="dictionary">The dictionary whose elements are copied to the new list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2"/> class.
            </summary>
            <param name="dictionary">The dictionary whose elements are copied to the new list.</param>
            <param name="comparer">The equality comparer implementation to use when comparing keys, or null to use the default equality comparer for the type of the key.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.#ctor(System.String,System.ServiceModel.Channels.IChannel,System.String,CodeFluent.Runtime.PageOptions,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2"/> class for paged reading.
            </summary>
            <param name="contextName">Name of the CodeFluent runtime context. May not be null.</param>
            <param name="channel">The input channel. May not be null.</param>
            <param name="pageMethodName">Name of the page method. May be null.</param>
            <param name="pageOptions">Options for the paging operation. May be null.</param>
            <param name="arguments">The optional arguments. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.#ctor(System.String,System.ServiceModel.Channels.IChannel,System.String,CodeFluent.Runtime.PageOptions,System.Collections.Generic.IEqualityComparer{`0},System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2"/> class for paged reading.
            </summary>
            <param name="contextName">Name of the CodeFluent runtime context. May not be null.</param>
            <param name="channel">The input channel. May not be null.</param>
            <param name="pageMethodName">Name of the page method. May be null.</param>
            <param name="pageOptions">Options for the paging operation. May be null.</param>
            <param name="comparer">A comparer to use. May be null.</param>
            <param name="arguments">The optional arguments. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Add(`0,`1)">
            <summary>
            Adds the specified element with the specified key to the dictionary.
            </summary>
            <param name="key">The key of the element to add. May not be null.</param>
            <param name="item">The element to add.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.ImportPage(System.Int32,CodeFluent.Runtime.ServiceModel.CodeFluentObservableList{`1})">
            <summary>
            Imports a page into the collection.
            </summary>
            <param name="index">The page index.</param>
            <param name="list">The list to import from.</param>
            <returns>A new page.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds an item to the  collection.
            </summary>
            <param name="item">The object to add to the  collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Insert(System.Int32,`0,`1)">
            <summary>
            Inserts an element at the specified index.
            </summary>
            <param name="index">The zero-based index at which element should be inserted.</param>
            <param name="key">The key. May not be null.</param>
            <param name="item">The element to insert.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Insert(System.Int32,System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Inserts an element at the specified index.
            </summary>
            <param name="index">The zero-based index at which element should be inserted.</param>
            <param name="item">The element to insert.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.ContainsKey(`0)">
            <summary>
            Determines whether the dictionary contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the dictionary. May not be null.</param>
            <returns>
            true if the dictionary contains an element with the key; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the  collection contains a specific value.
            </summary>
            <param name="item">The object to locate in the  collection.</param>
            <returns>
            true if item is found in the  collection; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the dictionary.
            </summary>
            <param name="key">The key of the element to remove. May not be null.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if key was not found in the original dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the first occurrence of a specific object from the  collection.
            </summary>
            <param name="item">The object to remove from the  collection.</param>
            <returns>
            true if item was successfully removed from the  collection; otherwise, false. This method also returns false if item is not found in the original  collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key to locate in the dictionary. May not be null.</param>
            <param name="item">The item.</param>
            <returns>true if the item was found; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.GetItem(`0)">
            <summary>
            Gets an item from the dictionary.
            </summary>
            <param name="key">The key. May not be null;</param>
            <returns>An item instance or the default value for type Te.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.SetItem(`0,`1)">
            <summary>
            Sets an item in the dictionary.
            </summary>
            <param name="key">The key. May not be null;</param>
            <param name="value">The item.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`1})">
            <summary>
            Sorts the elements in a range of elements in the list using the specified comparer.
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or null to use the default comparer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Add(`1)">
            <summary>
            Adds an element to the base list.
            Always throw an exception as this method is not supported in the CodeFluentObservableCollection context.
            </summary>
            <param name="item">The element to add to the dictionary.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Insert(System.Int32,`1)">
            <summary>
            Inserts an element to the base list at the specified index.
            Always throw an exception as this method is not supported in the CodeFluentObservableCollection context.
            </summary>
            <param name="index">The zero-based index at which element should be inserted.</param>
            <param name="item">The element to insert into the base list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Remove(`1)">
            <summary>
            Removes the first occurrence of a specific element from the base list.
            Always throw an exception as this method is not supported in the CodeFluentObservableCollection context.
            </summary>
            <param name="item">The element to remove from the base list.</param>
            <returns>
            true if element was successfully removed from the base list; otherwise, false. This method also returns false if element is not found in the dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index from the base list.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.GetByIndex(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The element index.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.SetByIndex(System.Int32,`1)">
            <summary>
            Sets the element at the specified index.
            </summary>
            <param name="index">The element index.</param>
            <param name="value">The element to set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Clear">
            <summary>
            Removes all elements from the dictionary.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Clone(System.Boolean)">
            <summary>
            Clones this list.
            </summary>
            <param name="deep">if set to <c>true</c> items in the list are cloned as well, if they implement the System.IClonable interface.</param>
            <returns>A new instance of this list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ListChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.OnKeyChanged(System.Object,CodeFluent.Runtime.Utilities.KeyChangedEventArgs{`0})">
            <summary>
            Called when an item's key changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Keys">
            <summary>
            Gets a collection containing the keys of the dictionary.
            </summary>
            <value></value>
            <returns>A collection containing the keys of the dictionary.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Values">
            <summary>
            Gets a collection containing the values in the dictionary.
            </summary>
            <value></value>
            <returns>A collection containing the values in dictionary.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Item(`0)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <value>The element at the specified index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentObservableCollection`2.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <value>The element at the specified index.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentRelationType">
            <summary>
            Defines the type of relation between two instances.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentRelationType.Added">
            <summary>
            The relation is new.
            An association between instances must be created.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentRelationType.Removed">
            <summary>
            The relation must be removed.
            The association between instances must be deleted.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentReloadOptions">
            <summary>
            Defines what properties of an instance must be reloaded during a reload operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentReloadOptions.Nothing">
            <summary>
            Nothing must be reloaded.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentReloadOptions.Properties">
            <summary>
            Model properties must be reloaded.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentReloadOptions.RowVersion">
            <summary>
            Only the rowversion must be reloaded.
            This flags is only used if the entity handles concurrency.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentReloadOptions.BinaryLargeObjects">
            <summary>
            Binary large objects must be reloaded.
            This flags is only used in SOA contexts
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentReloadOptions.ShadowProperties">
            <summary>
            Shadow properties must be reloaded.
            Currently not implemented.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentReloadOptions.Everything">
            <summary>
            Everything must be reloaded. Currently defined as Properties | RowVersion | BinaryLargeObjets.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CodeFluentReloadOptions.Default">
            <summary>
            The default value. Currently defined as Everything.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentRuntimeInternalException">
            <summary>
            The exception that is thrown when an internal error occurs in CodeFluent.
            Contact support@softfluent.com if such an error occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeInternalException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeInternalException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeInternalException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeInternalException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeInternalException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeInternalException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeInternalException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeInternalException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeInternalException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentSet">
            <summary>
            Represents a CodeFluent instance set.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentSet">
            <summary>
            Defines a CodeFluent set instance.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.ICodeFluentSet.CollectionChanged">
            <summary>
            Occurs when the set has changed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentSet.Relations">
            <summary>
            Gets the set relations.
            </summary>
            <value>The set relations. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentSet.Count">
            <summary>
            Gets the count of items in the set.
            </summary>
            <value>The count of items in the set.</value>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentSet"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentSet.GetAt(CodeFluent.Runtime.ICodeFluentSet,System.Int32)">
            <summary>
            Gets the entity at a given position.
            </summary>
            <param name="set">The set. May not be null.</param>
            <param name="index">The index.</param>
            <returns>An instance of an entity.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentSet.Add(System.Object)">
            <summary>
            Adds the specified entity instance to the collection.
            </summary>
            <param name="obj">The entity instance to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentSet.Trace(System.CodeDom.Compiler.IndentedTextWriter)">
            <summary>
            Traces the collection. Currently not implemented.
            </summary>
            <param name="writer">The output writer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentSet.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.CodeFluentSet.CollectionChanged">
            <summary>
            Occurs when the collection has changed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentSet.Relations">
            <summary>
            Gets the set's relations.
            </summary>
            <value>The relations dictionary. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentSet.Count">
            <summary>
            Gets the count of items in the set.
            </summary>
            <value>The count of items in the set.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentUser">
            <summary>
            Represents the current runtime user, using automatic or specific identification and authentication underlying systems.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentUser.#ctor(System.Security.Principal.IPrincipal)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentUser"/> class.
            </summary>
            <param name="principal">The principal to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentUser.Get(CodeFluent.Runtime.CodeFluentUserIdentityType)">
            <summary>
            Gets the current CodeFluent user using the specified identity type.
            </summary>
            <param name="identityType">Type of the identity.</param>
            <value>The current user. May not be null.</value>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentUser.IsInRole(System.String)">
            <summary>
            Determines whether the current principal belongs to the specified role.
            </summary>
            <param name="role">The name of the role for which to check membership.</param>
            <returns>
            true if the current principal is a member of the specified role; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentUser.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentUser.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentUser.Current">
            <summary>
            Gets the current CodeFluent user.
            </summary>
            <value>The current user. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentUser.IsAuthenticated">
            <summary>
            Gets a value that indicates whether the user has been authenticated.
            </summary>
            <value>true if the user was authenticated; otherwise, false.</value>
            <returns>true if the user was authenticated; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentUser.UserDomainName">
            <summary>
            Gets the network domain name associated with the current user.
            </summary>
            <value>The network domain name of the host computer.</value>
            <returns>The network domain name of the host computer.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentUser.UserName">
            <summary>
            Gets the user name of the current user.
            </summary>
            <value>The user name of the user on whose behalf the code is running.</value>
            <returns>The user name of the user on whose behalf the code is running.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentUser.Name">
            <summary>
            Gets the name of the current user.
            </summary>
            <value>The name of the user on whose behalf the code is running.</value>
            <returns>The name of the user on whose behalf the code is running.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentUser.AuthenticationType">
            <summary>
            Gets the type of authentication used.
            </summary>
            <value>The type of authentication used to identify the user.</value>
            <returns>The type of authentication used to identify the user.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentUser.Identity">
            <summary>
            Gets the identity of the current principal.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Security.Principal.IIdentity"/> object associated with the current principal.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentUser.Principal">
            <summary>
            Gets the current principal.
            </summary>
            <value>The current principal.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentValidationException">
            <summary>
            The exception that is thrown when an entity state is not valid.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.String,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="results">A list of exceptions.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="memberName">Name of the member that failed validation. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentValidationException.Results">
            <summary>
            Gets a list of validation exceptions. May be null.
            </summary>
            <value>The results.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentValidationException.MemberName">
            <summary>
            Gets the name of the member that failed the validation.
            </summary>
            <value>The name of the member. May be null.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentWebServiceException">
            <summary>
            The exception that is thrown when an error occurs at runtime in a Web Service generated by CodeFluent.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentWebServiceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentWebServiceException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentWebServiceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentWebServiceException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentWebServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentWebServiceException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentWebServiceException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentWebServiceException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentWebServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentWebServiceException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile">
            <summary>
            Represents a .ZIP file archive.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.NativeRuntimeLegacy">
            <summary>
            Defines the native legacy runtime name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.NativeRuntimeX86">
            <summary>
            Defines the native x86 runtime name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.NativeRuntimeX64">
            <summary>
            Defines the native x64 runtime name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.DefaultBufferSize">
            <summary>
            Defines the default size of the buffer for block operations.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.LoadNativeRuntime(System.String)">
            <summary>
            Loads the native runtime compression dll.
            </summary>
            <param name="filePath">The dll file path.</param>
            <returns>true if the dll was loaded; false it it's too late.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.#ctor(System.String,CodeFluent.Runtime.Compression.ZipFile.Mode)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile"/> class.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddStream(System.String)">
            <summary>
            Creates an entry to the archive using a stream, at the specified path.
            </summary>
            <param name="path">The path of the entry to create.</param>
            <returns>A writable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddStream(System.String,System.DateTime)">
            <summary>
            Creates an entry to the archive using a stream, at the specified path.
            </summary>
            <param name="path">The path of the entry to create.</param>
            <param name="lastWriteTime">The last write time.</param>
            <returns>A writable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddStream(System.String,System.String,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Creates an entry to the archive using a stream, at the specified path.
            </summary>
            <param name="path">The path of the entry to create.</param>
            <param name="password">The password.</param>
            <param name="crc">The CRC to use.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
            <param name="lastWriteTime">The entry last write time.</param>
            <returns>A writable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetStream(System.String)">
            <summary>
            Gets a readable stream from an existing entry in the archive.
            </summary>
            <param name="path">The entry relative path in the archive file.</param>
            <returns>A readable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetStream(System.String,System.String)">
            <summary>
            Gets a readable stream from an existing entry in the archive.
            </summary>
            <param name="path">The entry relative path in the archive file.</param>
            <param name="password">The password to use.</param>
            <returns>A readable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetStream(System.String,System.String,System.Int32,System.DateTime@)">
            <summary>
            Gets a readable stream from an existing entry in the archive.
            </summary>
            <param name="path">The entry relative path in the archive file.</param>
            <param name="password">The password to use.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
            <param name="lastWriteTime">The entry last write time.</param>
            <returns>A readable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddFile(System.String)">
            <summary>
            Adds an entry to the archive using a file on the disk.
            </summary>
            <param name="filePath">The source file path.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddFile(System.String,System.String)">
            <summary>
            Adds an entry to the archive using a file on the disk.
            </summary>
            <param name="filePath">The source file path.</param>
            <param name="path">The relative path of the entry in the archive file.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddFile(System.String,System.String,System.String)">
            <summary>
            Adds an entry to the archive using a file on the disk.
            </summary>
            <param name="filePath">The source file path.</param>
            <param name="path">The relative path of the entry in the archive file.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddFile(System.String,System.String,System.String,System.Int32)">
            <summary>
            Adds an entry to the archive using a file on the disk.
            </summary>
            <param name="filePath">The source file path.</param>
            <param name="path">The relative path of the entry in the archive file.</param>
            <param name="password">The password to use.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddDirectory(System.String)">
            <summary>
            Adds the content of a directory to the archive, keeping file paths relative to the root directory path.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddDirectory(System.String,System.String)">
            <summary>
            Adds the content of a directory to the archive.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="rootPath">The root relative path of files in the archive.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddDirectory(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds the content of a directory to the archive.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="rootPath">The root relative path of files in the archive.</param>
            <param name="recursive">if set to <c>true</c> sub directories are processed as well.</param>
            <param name="keepPaths">if set to <c>true</c> relative paths are kept identically.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddDirectory(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Adds the content of a directory to the archive.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="rootPath">The root relative path of files in the archive.</param>
            <param name="recursive">if set to <c>true</c> sub directories are processed as well.</param>
            <param name="keepPaths">if set to <c>true</c> relative paths are kept identically.</param>
            <param name="password">The password. Pass null if you don't want to put a password.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Create(System.String,System.String)">
            <summary>
            Creates the specified .ZIP archive file from the content of a directory.
            Also processes sub directories.
            </summary>
            <param name="zipFilePath">The target file path. May not be null.</param>
            <param name="directoryPath">The input directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Create(System.String,System.String,System.String)">
            <summary>
            Creates the specified .ZIP archive file from the content of a directory.
            Also processes sub directories.
            </summary>
            <param name="zipFilePath">The target file path. May not be null.</param>
            <param name="directoryPath">The input directory path. May not be null.</param>
            <param name="rootPath">The root relative path of files in the archive.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Create(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates the specified .ZIP archive file from the content of a directory.
            </summary>
            <param name="zipFilePath">The target file path. May not be null.</param>
            <param name="directoryPath">The input directory path. May not be null.</param>
            <param name="rootPath">The root relative path of files in the archive.</param>
            <param name="recursive">if set to <c>true</c> sub directories are processed as well.</param>
            <param name="keepPaths">if set to <c>true</c> relative path are kept identically.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetFile(System.String,System.String)">
            <summary>
            Saves an entry from the archive to a file on the disk.
            </summary>
            <param name="path">The relative path of the entry in the archive file. May not be null.</param>
            <param name="filePath">The output file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetFile(System.String,System.String,System.Int32,System.String)">
            <summary>
            Saves an entry from the archive to a file on the disk.
            </summary>
            <param name="path">The relative path of the entry in the archive file. May not be null.</param>
            <param name="filePath">The output file path. May not be null.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
            <param name="password">The password to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetFiles(System.String)">
            <summary>
            Saves the entire content of the archive to a directory on the disk.
            </summary>
            <param name="directoryPath">The output directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetFiles(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Saves the entire content of the archive to a directory on the disk.
            </summary>
            <param name="directoryPath">The output directory path. May not be null.</param>
            <param name="password">The password to use.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
            <param name="keepPaths">if set to <c>true</c> relative paths in the archive are conserved for output.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Close">
            <summary>
            Closes this instance and flush the data.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.ZipFile.OnGetFile">
            <summary>
            Occurs when a file is read from the archive.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.ZipFile.OnGotFile">
            <summary>
            Occurs when a file has been read from the archive.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.ZipFile.OnAddFile">
            <summary>
            Occurs when a file is being added to the archive.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.ZipFile.OnAddedFile">
            <summary>
            Occurs when a file has been added to the archive.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.IsZip64Format">
            <summary>
            Gets a value indicating whether this instance has the ZIP64 format.
            </summary>
            <value>
              <c>true</c> if this instance has the ZIP64 format; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipMode">
            <summary>
            Gets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.FilePath">
            <summary>
            Gets the archive file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.Entries">
            <summary>
            Gets all the entries in the archive.
            </summary>
            <value>An array of entries.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.Mode">
            <summary>
            Defines how a .ZIP file will be accessed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.Mode.Read">
            <summary>
            The file is open for read only operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.Mode.Overwrite">
            <summary>
            The file is open for write operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.Mode.Append">
            <summary>
            The file is open for write with append operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.Mode.Zip64">
            <summary>
            Use ZIP64 format for write operations. The file may be saved as a ZIP64 only if needed.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventHandler">
            <summary>
            Represents the method that handles a <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs"/> event. 
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs">
            <summary>
            Provides data for a zip file event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs"/> class.
            </summary>
            <param name="path">The relative path in the archive.</param>
            <param name="filePath">The .ZIP archive file path.</param>
            <param name="bufferSize">Size of the buffer to use for block operations.</param>
            <param name="password">The password to use, if needed.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.Path">
            <summary>
            Gets the relative path in the archive.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.BufferSize">
            <summary>
            Gets or sets the size of the buffer for block operations.
            </summary>
            <value>The size of the buffer.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.Password">
            <summary>
            Gets or sets the archive password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether a file must be skipped.
            </summary>
            <value><c>true</c> if skip; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.ZipEntry">
            <summary>
            Defines an entry in the .ZIP archive file.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.CompareTo(CodeFluent.Runtime.Compression.ZipFile.ZipEntry)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other" /> parameter.
            Zero
            This object is equal to <paramref name="other" />.
            Greater than zero
            This object is greater than <paramref name="other" />.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.Flags">
            <summary>
            Gets the general purpose bit flags.
            </summary>
            <value>
            The flags.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.Crc">
            <summary>
            Gets the crc.
            </summary>
            <value>
            The crc.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.Path">
            <summary>
            Gets the entry relative path in the archive.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.Method">
            <summary>
            Gets the store method name. Can be 'Stored', 'Deflated' or 'Unknown'.
            </summary>
            <value>The method name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.CompressionMethod">
            <summary>
            Gets the compression method.
            </summary>
            <value>
            The compression method.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.CompressedSize">
            <summary>
            Gets compressed entry size.
            </summary>
            <value>The compressed entry size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.UncompressedSize">
            <summary>
            Gets uncompressed entry size.
            </summary>
            <value>The uncompressed entry size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.LastWriteTime">
            <summary>
            Gets the entry last write time.
            </summary>
            <value>The entry last write time.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.ZipException">
            <summary>
            The exception that is thrown when an error occurs during any .ZIP operation.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.GetMessage(System.Int32)">
            <summary>
            Gets the exception text.
            </summary>
            <param name="code">The error code.</param>
            <returns>The text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
            <param name="hr">The hr.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.CopyOptions">
            <summary>
            Defines what is copied in a Copy operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CopyOptions.None">
            <summary>
            Nothing will be copied.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CopyOptions.Keys">
            <summary>
            The key properties.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CopyOptions.RowVersion">
            <summary>
            The row version property.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CopyOptions.Properties">
            <summary>
            All other properties.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CopyOptions.Sets">
            <summary>
            Enumerable (lists, collections, ...)
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CopyOptions.BinaryLargeObjects">
            <summary>
            Binary Large Object properties.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CopyOptions.Default">
            <summary>
            The default flags combination (Keys, RowVersion, Properties).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.CopyOptions.All">
            <summary>
            A combination of all flags.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.BinaryLargeObjectTypeConverter">
            <summary>
            Provides a type converter to convert BinaryLargeObject objects to and from various other representations. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.BinaryLargeObjectTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets a collection of properties for the type of object specified by the value parameter.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"></see> that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that will be used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> with the properties that are exposed for the component, or null if there are no properties.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CollectionTypeConverter">
            <summary>
            Provides a simple type converter to convert Collection objects to and from various other representations.
            Displays 'Count: ' and the number of items in the collections.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CollectionTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CollectionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.ConsoleListener">
            <summary>
            Represents a Trace listener that traces to the current Windows Console.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.WriteLine(System.String)">
            <summary>
            Writes a message to the listener you create in the derived class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.Write(System.String)">
            <summary>
            Writes the specified message to the listener you create in the derived class.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.Write(System.String,System.String)">
            <summary>
            Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener"></see> class.
            </summary>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.EnsureConsole">
            <summary>
            Ensures a console is available, even for a Windows process.
            </summary>
            <returns>true if the console was created; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.AttachParentProcessConsole">
            <summary>
            Attach the parent process console.
            </summary>
            <returns>true if attachment succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.AttachConsole(System.Diagnostics.Process)">
            <summary>
            Attach to a given process console.
            </summary>
            <param name="process">The process. May not be null.</param>
            <returns>true if attachment succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.CloseConsole">
            <summary>
            Closes the console.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.WriteLine(System.String,System.String)">
            <summary>
            Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener"></see> class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.TraceLevel">
            <summary>
            Defines trace levels for the current assembly.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.UnhandledException">
            <summary>
            Unhandled Exception.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.BinaryLargeObject">
            <summary>
            Binary Large Object trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.OfficeList">
            <summary>
            Data Synchronization producer trace range for lists.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.OfficeWebs">
            <summary>
            Data Synchronization producer trace range for webs.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Persistence">
            <summary>
            Persistence trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Context">
            <summary>
            Context trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Collections">
            <summary>
            Collections trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.ServiceHost">
            <summary>
            CodeFluent.Runtime.ServiceHost.exe trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Service">
            <summary>
            CodeFluent Service trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.SharePoint">
            <summary>
            CodeFluent SharePoint Runtime trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.SharePointVpp">
            <summary>
            CodeFluent SharePoint Runtime Virtual Path Provider trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Interop">
            <summary>
            CodeFluent Interop code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.RuntimeModel">
            <summary>
            CodeFluent Runtime Model trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Database">
            <summary>
            CodeFluent Runtime Database trace range.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.TraceRange">
            <summary>
            Represents a range of trace numbers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceRange.All">
            <summary>
            Represents a range that includes all trace numbers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceRange.None">
            <summary>
            Represents a range that includes no trace numbers.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRange.#ctor(System.Int32,System.Int32,CodeFluent.Runtime.Diagnostics.TraceRangeMode)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Diagnostics.TraceRange"/> class.
            </summary>
            <param name="minimum">The minimum trace number.</param>
            <param name="maximum">The maximum trace number.</param>
            <param name="mode">The tracing range mode.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRange.Mininum">
            <summary>
            Gets the mininum included trace number.
            </summary>
            <value>The mininum trace number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRange.Maximum">
            <summary>
            Gets the maximum included trace number.
            </summary>
            <value>The maximum trace number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRange.Mode">
            <summary>
            Gets the tracing mode for this range.
            </summary>
            <value>The current range tracing mode.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.TraceRangeCollection">
            <summary>
            Defines a collection of trace ranges
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.GetStackTrace">
            <summary>
            Gets the stack trace.
            </summary>
            <returns>A string representing the stack trace.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.GetStackTrace(System.Int32)">
            <summary>
            Gets the stack trace.
            </summary>
            <param name="maxLines">The maximum number of lines to return.</param>
            <returns>A string representing the stack trace.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(CodeFluent.Runtime.ICodeFluentObject)">
            <summary>
            Traces the specified CodeFluent object.
            </summary>
            <param name="obj">The object to trace. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(CodeFluent.Runtime.Diagnostics.ITraceable)">
            <summary>
            Traces the specified traceable object.
            </summary>
            <param name="obj">The object to trace. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Text.StringBuilder,CodeFluent.Runtime.ICodeFluentObject)">
            <summary>
            Traces the specified CodeFluent object.
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to trace the object to. May not null.</param>
            <param name="obj">The object to trace. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Text.StringBuilder,CodeFluent.Runtime.Diagnostics.ITraceable)">
            <summary>
            Traces the specified traceable object.
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to trace the object to. May not null.</param>
            <param name="obj">The object to trace. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="obj">The object to trace. May not be null.</param>
            <returns>A string representing the traced object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Text.StringBuilder,System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to trace the object to. May not null.</param>
            <param name="obj">The object to trace. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.ParseConfigurationTraceRanges(System.String)">
            <summary>
            Parses a formatted text and determines what trace ranges it defines.
            format is 'levelX-levelY;levelZ;!levelW;!LevelS-LevelX;'.
            * means all level.
            !* means no level.
            example 1: "*;!100-110" means all level, but 100 to 110
            example 2: "!*;100-110" means no level, but 100 to 110
            example 3: "" means no level (eq. to !*)
            </summary>
            <param name="name">The configuration parameter name to parse. May be null.</param>
            <returns>An array of TraceRange instances.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.ParseTraceRanges(System.String)">
            <summary>
            Parses a formatted text and determines what trace ranges it defines.
            format is 'levelX-levelY;levelZ;!levelW;!LevelS-LevelX;'.
            * means all level.
            !* means no level.
            example 1: "*;!100-110" means all level, but 100 to 110
            example 2: "!*;100-110" means no level, but 100 to 110
            example 3: "" means no level (eq. to !*)
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <returns>An array of TraceRange instances.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Add(CodeFluent.Runtime.Diagnostics.TraceRange)">
            <summary>
            Adds the specified range to the collection.
            </summary>
            <param name="range">The range to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTrace(System.Int64)">
            <summary>
            Determines if a given level must be traced.
            </summary>
            <param name="traceLevel">The trace level to check.</param>
            <returns>True if the level must be trace; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Int32,System.Collections.IDictionary,System.String)">
            <summary>
            Traces the specified dictionary.
            </summary>
            <param name="level">The trace level.</param>
            <param name="dictionary">The input dictionary. May be null.</param>
            <param name="prefix">The prefix to prepend to the trace. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Web.UI.Control)">
            <summary>
            Traces the specified control.
            </summary>
            <param name="control">The input control. If null, nothing will be traced.</param>
            <returns>A string representing the traced control.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Web.UI.Control,System.Boolean)">
            <summary>
            Traces the specified control.
            </summary>
            <param name="control">The input control. If null, nothing will be traced.</param>
            <param name="withIDOnly">if set to <c>true</c> traces will only contain control IDs.</param>
            <returns>
            A string representing the traced control.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Web.UI.Control,System.Int32,System.Collections.IDictionary,System.String)">
            <summary>
            Traces the specified dictionary.
            </summary>
            <param name="control">The control the dictionary belongs to. May be null.</param>
            <param name="level">The level.</param>
            <param name="dictionary">The input dictionary. May be null.</param>
            <param name="prefix">The prefix to prepend to the trace. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Web.UI.Control,System.Enum,System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="control">The control the object belongs to.</param>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Web.UI.Control,System.Int32,System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="control">The control the object belongs to.</param>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Collections.IDictionary)">
            <summary>
            Traces the specified dictionary.
            </summary>
            <param name="dictionary">The input dictionary. may be null.</param>
            <returns>
            A string representing the traced dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Int32,System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Enum,System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Int32,System.Object,System.Object[])">
            <summary>
            Traces the specified object.
            </summary>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Enum,System.Object,System.Object[])">
            <summary>
            Traces the specified object.
            </summary>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Int32,System.Enum,System.Object,System.Object[])">
            <summary>
            Traces the specified object.
            </summary>
            <param name="skipFrames">The number of frames to skip.</param>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.TraceAlways(System.Object)">
            <summary>
            Always traces the object, whether traces or trace levels are enabled.
            </summary>
            <param name="value">The input object. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Current">
            <summary>
            Gets the current trace range collection.
            </summary>
            <value>The current collection. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTraceLevels">
            <summary>
            Gets or sets a value indicating whether trace levels must be traced.
            </summary>
            <value><c>true</c> if trace levels must be traced; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTraceMethodName">
            <summary>
            Gets or sets a value indicating whether method name must be traced.
            </summary>
            <value>
            	<c>true</c> if method name must be traced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTraceTypeName">
            <summary>
            Gets or sets a value indicating whether originating type name must be traced.
            </summary>
            <value><c>true</c> if originating type name must be traced; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Text">
            <summary>
            Gets or sets the trace range original definition text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.DisplayName">
            <summary>
            Gets the trace range resulting text.
            </summary>
            <value>The result text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTraceAlways">
            <summary>
            Gets or sets a value indicating whether everything is traced, even if level does not match.
            </summary>
            <value><c>true</c> if trace always; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.IsEnabled">
            <summary>
            Gets or sets a value indicating whether tracing is enabled.
            </summary>
            <value>
            	<c>true</c> if tracing is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Count">
            <summary>
            Gets the count of ranges.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.TraceRangeMode">
            <summary>
            Defines if a trace range is excluded or included.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceRangeMode.Include">
            <summary>
            Trace range is included.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceRangeMode.Exclude">
            <summary>
            Trace range is excluded.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentEntitySource">
            <summary>
            Represents an entity source.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentEntitySource.LoadEntity(System.Collections.IDictionary)">
            <summary>
            Loads the entity.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentEntitySource.SaveEntity">
            <summary>
            Saves the entity.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentEntitySource.DeleteEntity">
            <summary>
            Deletes the entity.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentEntitySource.NewEntity">
            <summary>
            News the entity.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentEntitySource.Entity">
            <summary>
            Gets the entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentGraph">
            <summary>
            Represents an object that needs to be loaded as a graph prior to serialization.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentGraph.LoadContent">
            <summary>
            Loads the content of this instance.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentSerializable">
            <summary>
            Allows an object to control its own serialization and deserialization in CodeFluent persistence layer context.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentSerializable.Serialize(CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Serializes this instance.
            </summary>
            <param name="mode">The serialization mode.</param>
            <returns>The serialized instance. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentSerializable.Deserialize(System.Type,CodeFluent.Runtime.PersistenceSerializationMode,System.Object)">
            <summary>
            Deserializes the specified object instance.
            </summary>
            <param name="type">The serialized object instance type. May not be null.</param>
            <param name="mode">The serialization mode.</param>
            <param name="serializedInstance">The serialized object instance. May be null.</param>
            <returns>The deserialized instance. May be null.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentSetSource">
            <summary>
            Represents an entity source.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentSetSource.LoadSet(System.Collections.IDictionary,System.Int32,System.Int32,CodeFluent.Runtime.PageOptions)">
            <summary>
            Loads the entity's set.
            </summary>
            <param name="values">The values.</param>
            <param name="index">The index.</param>
            <param name="size">The size.</param>
            <param name="options">The options.</param>
        </member>
        <member name="P:CodeFluent.Runtime.ICodeFluentSetSource.Set">
            <summary>
            Gets the entity's set.
            </summary>
            <value>The entity's set.</value>
        </member>
        <member name="T:CodeFluent.Runtime.IKeyable">
            <summary>
            Defines an object that has a string key.
            This is used for caching operations.
            Objects that are part of parameters used in cached operation should implement this interface.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.IKeyable.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key. May not be null.</value>
        </member>
        <member name="T:CodeFluent.Runtime.OrderByArgument">
            <summary>
            Represents an argument used for order by persistence clause.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.OrderByArgument"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.OrderByArgument"/> class using an expression.
            The expression may end with ASC or DESC.
            </summary>
            <param name="expression">The expression. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgument.#ctor(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.OrderByArgument"/> class.
            </summary>
            <param name="name">The name to use. May be null.</param>
            <param name="direction">The direction of the parameter.</param>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgument.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.OrderByArgument.Key">
            <summary>
            Gets the argument's key.
            </summary>
            <value>The key. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.OrderByArgument.Name">
            <summary>
            Gets or sets the argument's name.
            </summary>
            <value>The name. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.OrderByArgument.Direction">
            <summary>
            Gets or sets the argument's direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="T:CodeFluent.Runtime.OrderByArgumentCollection">
            <summary>
            Represents a collection of <see cref="T:CodeFluent.Runtime.OrderByArgument"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgumentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.OrderByArgumentCollection"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgumentCollection.Add(System.String)">
            <summary>
            Adds an argument defined by the specified expression.
            </summary>
            <param name="expression">The expression. May be null.</param>
            <value>An <see cref="T:CodeFluent.Runtime.OrderByArgument"/> instance. May not be null.</value>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgumentCollection.Add(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Adds an argument defined by the specified name and direction.
            </summary>
            <param name="name">The name. May be null.</param>
            <param name="direction">The direction.</param>
            <value>An <see cref="T:CodeFluent.Runtime.OrderByArgument"/> instance. May not be null.</value>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgumentCollection.Add(System.Object)">
            <summary>
            Adds the specified instance.
            Instance must of <see cref="T:CodeFluent.Runtime.OrderByArgument"/> type.
            Supports the Codefluent infrastructure and is not intended to be used directly from your code. 
            </summary>
            <param name="obj">The instance to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgumentCollection.Add(CodeFluent.Runtime.OrderByArgument)">
            <summary>
            Adds the specified argument to the collection.
            </summary>
            <param name="argument">The argument to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgumentCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.OrderByArgumentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.OrderByArgumentCollection.Count">
            <summary>
            Gets the count of items in the collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.OrderByArgumentCollection.Key">
            <summary>
            Gets the collection's key.
            </summary>
            <value>The key. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.OrderByArgumentCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.OrderByArgument"/> at the specified index.
            </summary>
            <value>An <see cref="T:CodeFluent.Runtime.OrderByArgument"/> instance. May not be null.</value>
        </member>
        <member name="T:CodeFluent.Runtime.PageOptions">
            <summary>
            Represents a combination of options for paging operations.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.PageOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.PageOptions"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.PageOptions.#ctor(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.PageOptions"/> class and adds an order by argument to it.
            </summary>
            <param name="name">The name of the argument. May be null.</param>
            <param name="direction">The direction of the argument.</param>
        </member>
        <member name="M:CodeFluent.Runtime.PageOptions.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.PageOptions"/> class and adds a list of order by arguments.
            </summary>
            <param name="orderByArguments">The order by arguments to add. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.PageOptions.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.PageOptions.Key">
            <summary>
            Gets the page options key.
            </summary>
            <value>The key. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.PageOptions.DefaultPageSize">
            <summary>
            Gets or sets the size of the default page.
            </summary>
            <value>The size of the default page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.PageOptions.IndexParameterIsRowIndex">
            <summary>
            Gets or sets a value indicating whether the index parameter is a row index.
            </summary>
            <value>
            	<c>true</c> if the index parameter is a row index; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.PageOptions.OrderByArguments">
            <summary>
            Gets or sets the order by arguments collection.
            </summary>
            <value>The order by arguments collection. May be null.</value>
        </member>
        <member name="T:CodeFluent.Runtime.PersistenceSerializationMode">
            <summary>
            Defines the persistence serialization mode.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.None">
            <summary>
            The property must not be serialized.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Xml">
            <summary>
            The property will be serialized using Xml serialization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Soap">
            <summary>
            The property will be serialized using Soap serialization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Binary">
            <summary>
            The property will be serialized using Binary serialization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Custom">
            <summary>
            The property will be serialized using the ICodeFluentSerializable interface.
            The corresponding CLR type must implement this interface.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.ArrayOfBytesType">
            <summary>
            The property will be serialized as an array of bytes to the persistence layer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.StringType">
            <summary>
            The property will be serialized as a string to the persistence layer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Default">
            <summary>
            The default value. Currently defined as Binary | ArrayOfBytesType.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.ModeMask">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.TypeMask">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException">
            <summary>
            The exception that is thrown when a script error occurs in the ScriptingRule rule engine.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="language">The rule language used.</param>
            <param name="source">The error source.</param>
            <param name="description">The error description.</param>
            <param name="line">The error line number.</param>
            <param name="column">The column number of the line.</param>
            <param name="number">The error number.</param>
            <param name="text">The source text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="language">The rule language used.</param>
            <param name="source">The error source.</param>
            <param name="description">The error description.</param>
            <param name="line">The error line number.</param>
            <param name="column">The column number of the line.</param>
            <param name="number">The error number.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Description">
            <summary>
            Gets the error description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Line">
            <summary>
            Gets the error line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Column">
            <summary>
            Gets the error column number of the line.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Number">
            <summary>
            Gets a numeric value specifying the error.
            </summary>
            <value>The error number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Text">
            <summary>
            Gets the source text.
            </summary>
            <value>The source text.</value>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2">
            <summary>
            Defines the base class for a CodeFluent collection.
            </summary>
            <typeparam name="Tk">The key type for this class.</typeparam>
            <typeparam name="Te">The entity type for this class.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.#ctor(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2"/> class.
            </summary>
            <param name="array">The collection whose elements are copied to the new collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.#ctor(System.String,System.ServiceModel.Channels.IChannel,System.String,CodeFluent.Runtime.PageOptions,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2"/> class.
            </summary>
            <param name="contextName">Name of the CodeFluent runtime context. May not be null.</param>
            <param name="channel">The input channel. May not be null.</param>
            <param name="pageMethodName">Name of the page method. May be null.</param>
            <param name="pageOptions">Options for the paging operation. May be null.</param>
            <param name="arguments">The optional arguments. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.Add(`1)">
            <summary>
            Adds an element to the collection.
            </summary>
            <param name="item">The element to add to the collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.Remove(`1)">
            <summary>
            Removes the first occurrence of a specific element from the collection.
            </summary>
            <param name="item">The element to remove from the collection.</param>
            <returns>
            true if element was successfully removed from the collection; otherwise, false. This method also returns false if element is not found in the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.Insert(System.Int32,`1)">
            <summary>
            Inserts an element to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which element should be inserted.</param>
            <param name="item">The element to insert into the collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index from the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`1})">
            <summary>
            Sorts the elements in a range of elements in the collection using the specified comparer.
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or null to use the default comparer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.FindAllPending(CodeFluent.Runtime.ServiceModel.CodeFluentObservableList{`1})">
            <summary>
            Retrieves all modified CodeFluent entities.
            </summary>
            <param name="list">The list to add found elements to.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.Clear">
            <summary>
            Removes all elements from the list.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.CodeFluentEntityCollection`2.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <value>The element at the specified index.</value>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1">
            <summary>
            Defines the base class for a CodeFluent list.
            </summary>
            <typeparam name="Te">The entity type for this class.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1"/> class.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1.#ctor(System.String,System.ServiceModel.Channels.IChannel,System.String,CodeFluent.Runtime.PageOptions,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1"/> class.
            </summary>
            <param name="contextName">Name of the CodeFluent runtime context. May not be null.</param>
            <param name="channel">The input channel. May not be null.</param>
            <param name="pageMethodName">Name of the page method. May be null.</param>
            <param name="pageOptions">Options for the paging operation. May be null.</param>
            <param name="arguments">The optional arguments. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1.FindAllPending(CodeFluent.Runtime.ServiceModel.CodeFluentObservableList{`0})">
            <summary>
            Retrieves all modified CodeFluent entities.
            </summary>
            <param name="list">The list to add found elements to.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CodeFluentEntityList`1.Clear">
            <summary>
            Removes all elements from the list.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.BindingFlags">
            <summary>
            Specifies flags that control service model binding mode.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.ServiceModel.BindingFlags.None">
            <summary>
            Specifies no binding flag.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.ServiceModel.BindingFlags.Local">
            <summary>
            Specifies that the method must be invoked locally.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.ServiceModel.BindingFlags.Remote">
            <summary>
            Specifies that the method must be invoked remotely.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.CollectionChangeNotifier">
            <summary>
            A utility class to propagate collection events to the Windows Presentation Framework Infrastructure.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.CollectionChangeNotifier.Notify(System.Object,System.ComponentModel.CollectionChangeEventArgs,System.Collections.Specialized.NotifyCollectionChangedEventHandler)">
            <summary>
            Propagates the specified event.
            </summary>
            <param name="sender">The sender. May not be null.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CollectionChangeEventArgs"/> instance containing the event data. May not be null.</param>
            <param name="handler">The handler. May be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ICodeFluentCollectionEntity`1">
            <summary>
            Defines a CodeFluent entity that has a collection key.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ICodeFluentEntity">
            <summary>
            Defines a CodeFluent entity.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ICodeFluentEntity.Save">
            <summary>
            Saves this instance.
            </summary>
            <returns>true if the instance was really saved; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ICodeFluentEntity.Delete">
            <summary>
            Deletes this instance.
            </summary>
            <returns>true if the instance was really deleted; otherwise false.</returns>
        </member>
        <member name="E:CodeFluent.Runtime.ServiceModel.ICodeFluentEntity.EntityAction">
            <summary>
            Occurs for every action on the instance.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.ICodeFluentEntity.EntityState">
            <summary>
            Gets or sets the state of the instance.
            </summary>
            <value>The state of the instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.ICodeFluentEntity.EntityDisplayName">
            <summary>
            Gets the display name of the instance.
            </summary>
            <value>The display name of the instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.ICodeFluentEntity.EntityKey">
            <summary>
            Gets or sets the instance combined key.
            </summary>
            <value>The instance combined key. May be null if the instance is just created.</value>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.ICodeFluentEntity.IsDefaultEntityKey">
            <summary>
            Gets or sets a value that determines if the instance combined key is the default.
            </summary>
            <value>A value that determines if the instance combined key is the default.</value>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ICodeFluentLightEntity">
            <summary>
            Represents a CodeFluent lightweight instance.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ICodeFluentSet">
            <summary>
            Defines a CodeFluent set.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.ICodeFluentSet.Relations">
            <summary>
            Gets or sets a list of pending relations updates.
            </summary>
            <value>The list of pending relations updates.</value>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ISafeClosable">
            <summary>
            Represents a class that can be safely closed.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ISafeClosable.SafeClose">
            <summary>
            Safely closes the instance.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.NetDataContractFormat">
            <summary>
            Instructs the infrastructure to use the NetDataContractSerializer.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.NetDataContractFormat.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Adds the binding parameters.
            </summary>
            <param name="description">The description.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.NetDataContractFormat.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="description">The description.</param>
            <param name="proxy">The proxy.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.NetDataContractFormat.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
            <summary>
            Applies the dispatch behavior.
            </summary>
            <param name="description">The description.</param>
            <param name="dispatch">The dispatch.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.NetDataContractFormat.Validate(System.ServiceModel.Description.OperationDescription)">
            <summary>
            Validates the specified description.
            </summary>
            <param name="description">The description.</param>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.NetDataContractFormat.NetDataContractSerializerOperationBehavior">
            <summary>
            Represents the run-time behavior of the NetDataContractSerializer.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.NetDataContractFormat.NetDataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.NetDataContractFormat.NetDataContractSerializerOperationBehavior"/> class.
            </summary>
            <param name="operationDescription">The operation description.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.NetDataContractFormat.NetDataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
            <summary>
            Creates an instance of a class that inherits from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"></see> for serialization and deserialization operations.
            </summary>
            <param name="type">The <see cref="T:System.Type"></see> to create the serializer for.</param>
            <param name="name">The name of the generated type.</param>
            <param name="ns">The namespace of the generated type.</param>
            <param name="knownTypes">An <see cref="T:System.Collections.Generic.IList`1"></see> of <see cref="T:System.Type"></see> that contains known types.</param>
            <returns>
            An instance of a class that inherits from the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"></see> class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.NetDataContractFormat.NetDataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
            <summary>
            Creates an instance of a class that inherits from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"></see> for serialization and deserialization operations with an <see cref="T:System.Xml.XmlDictionaryString"></see> that contains the namespace.
            </summary>
            <param name="type">The type to serialize or deserialize.</param>
            <param name="name">The name of the serialized type.</param>
            <param name="ns">An <see cref="T:System.Xml.XmlDictionaryString"></see> that contains the namespace of the serialized type.</param>
            <param name="knownTypes">An <see cref="T:System.Collections.Generic.IList`1"></see> of <see cref="T:System.Type"></see> that contains known types.</param>
            <returns>
            An instance of a class that inherits from the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"></see> class.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractFormatAttribute">
            <summary>
            A custom attribute to apply to method that need object reference preservation. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractFormatAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Adds the binding parameters.
            </summary>
            <param name="description">The description.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractFormatAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="description">The description.</param>
            <param name="proxy">The proxy.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractFormatAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
            <summary>
            Applies the dispatch behavior.
            </summary>
            <param name="description">The description.</param>
            <param name="dispatch">The dispatch.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractFormatAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
            <summary>
            Validates the specified description.
            </summary>
            <param name="description">The description.</param>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractSerializerOperationBehavior">
            <summary>
            An operation behavior that allows reference preservation.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractSerializerOperationBehavior"/> class.
            </summary>
            <param name="operationDescription">The operation description.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
            <summary>
            Creates an instance of a class that inherits from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"></see> for serialization and deserialization operations.
            </summary>
            <param name="type">The <see cref="T:System.Type"></see> to create the serializer for.</param>
            <param name="name">The name of the generated type.</param>
            <param name="ns">The namespace of the generated type.</param>
            <param name="knownTypes">An <see cref="T:System.Collections.Generic.IList`1"></see> of <see cref="T:System.Type"></see> that contains known types.</param>
            <returns>
            An instance of a class that inherits from the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"></see> class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractSerializerOperationBehavior.CreateDataContractSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
            <summary>
            Creates the data contract serializer.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="ns">The ns.</param>
            <param name="knownTypes">The known types.</param>
            <returns>An instance of the XmlObjectSerializer type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ReferencePreservingDataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
            <summary>
            Creates an instance of a class that inherits from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"></see> for serialization and deserialization operations with an <see cref="T:System.Xml.XmlDictionaryString"></see> that contains the namespace.
            </summary>
            <param name="type">The type to serialize or deserialize.</param>
            <param name="name">The name of the serialized type.</param>
            <param name="ns">An <see cref="T:System.Xml.XmlDictionaryString"></see> that contains the namespace of the serialized type.</param>
            <param name="knownTypes">An <see cref="T:System.Collections.Generic.IList`1"></see> of <see cref="T:System.Type"></see> that contains known types.</param>
            <returns>
            An instance of a class that inherits from the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"></see> class.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ErrorHandlerBehavior">
            <summary>
            Defines a Service Model behavior for handling exceptions without marking channels as faulted.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ErrorHandlerBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.ServiceModel.ErrorHandlerBehavior"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ErrorHandlerBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            Validates the specified description.
            </summary>
            <param name="description">The description.</param>
            <param name="serviceHostBase">The service host base.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ErrorHandlerBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Adds the binding parameters.
            </summary>
            <param name="description">The description.</param>
            <param name="serviceHostBase">The service host base.</param>
            <param name="endpoints">The endpoints.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ErrorHandlerBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            Applies the dispatch behavior.
            </summary>
            <param name="description">The description.</param>
            <param name="serviceHostBase">The service host base.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ErrorHandlerBehavior.HandleError(System.Exception)">
            <summary>
            Enables error-related processing and returns a value that indicates whether subsequent HandleError implementations are called.
            </summary>
            <param name="error">The exception thrown during processing.</param>
            <returns>
            true if subsequent <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler"/> implementations must not be called; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ErrorHandlerBehavior.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
            <summary>
            Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1"/> that is returned from an exception in the course of a service method.
            </summary>
            <param name="error">The <see cref="T:System.Exception"/> object thrown in the course of the service operation.</param>
            <param name="version">The SOAP version of the message.</param>
            <param name="fault">The <see cref="T:System.ServiceModel.Channels.Message"/> object that is returned to the client, or service, in the duplex case.</param>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.ErrorHandlerBehavior.Rethrow">
            <summary>
            Gets or sets a value indicating whether the original exception must be rethrown.
            </summary>
            <value><c>true</c> if rethrow; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ErrorHandlerElement">
            <summary>
            Defines a Service Model extension element for handling exceptions without marking channels as faulted.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ErrorHandlerElement.CreateBehavior">
            <summary>
            Creates a behavior extension based on the current configuration settings.
            </summary>
            <returns>The behavior extension.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.ServiceModel.ErrorHandlerElement.BehaviorType">
            <summary>
            Gets the type of behavior.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Type"/>.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities">
            <summary>
            Represents a set of Windows Communication Framework (WCF) utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.AddWebOperationMetadata(CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject)">
            <summary>
            Adds metadata to the specified blob object from the current WebOperationContext.
            </summary>
            <param name="blob">The input blob object.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.SetWebOperationStatus(System.Net.HttpStatusCode)">
            <summary>
            Sets the web operation status.
            </summary>
            <param name="statusCode">The status code.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.SetWebOperationStatus(System.Net.HttpStatusCode,System.String)">
            <summary>
            Sets the web operation status.
            </summary>
            <param name="statusCode">The status code.</param>
            <param name="statusDescription">The status description. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.AddWebOperationContextHeader(CodeFluent.Runtime.BinaryServices.BaseBinaryLargeObject)">
            <summary>
            Adds HTTP headers from the specified blob object to the current WebOperationContext.
            </summary>
            <param name="blob">The input blob object.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.GetMessageFromStream(System.IO.Stream)">
            <summary>
            Gets the WCF message from a stream object.
            </summary>
            <param name="stream">The stream object.</param>
            <returns>An instance of the Message type or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.GetFormVariables(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Gets the current web operation context form variables.
            </summary>
            <param name="stream">The context stream.</param>
            <param name="encoding">The encoding to use.</param>
            <returns>An instance of the NameValueCollection type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.GetRequestContentEncoding">
            <summary>
            Gets the current web operation context content encoding.
            </summary>
            <returns>An instance of the Encoding type or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.GetRequestContentType">
            <summary>
            Gets the current web operation context content type.
            </summary>
            <returns>A string defining the content type or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.GetRequestHeaders">
            <summary>
            Gets the current web operation context request headers collection.
            </summary>
            <returns>An instance of the WebHeaderCollection type or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.GetRequestUri">
            <summary>
            Gets the current web operation context request URI.
            </summary>
            <returns>An instance of the Uri type or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.SafeClose(CodeFluent.Runtime.ServiceModel.ISafeClosable[])">
            <summary>
            Safely closes an array of clients.
            </summary>
            <param name="closables">The array of closables clients.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.SafeClose(System.Collections.Generic.IEnumerable{CodeFluent.Runtime.ServiceModel.ISafeClosable})">
            <summary>
            Safely closes a list of clients.
            </summary>
            <param name="closables">The list of closables clients.</param>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.SafeClose``1(System.ServiceModel.ClientBase{``0})">
            <summary>
            Safely closes a WCF client. See http://msdn.microsoft.com/en-us/library/aa355056.aspx for more information.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <param name="client">The client to close. May not be null.</param>
            <returns>
            An exception instance if an error ocurred; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.ServiceModel.ServiceModelUtilities.SafeClose``1(System.ServiceModel.ClientBase{``0},System.Boolean)">
            <summary>
            Safely closes a WCF client. See http://msdn.microsoft.com/en-us/library/aa355056.aspx for more information.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <param name="client">The client to close. May not be null.</param>
            <param name="throwOnException">if set to <c>true</c> an exception may be thrown.</param>
            <returns>An exception instance if an error ocurred; otherwise null.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.CodeBlock">
            <summary>
            Defines a block of code in the parsed template.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.ParsedBlock">
            <summary>
            Defines a parsed block of text in the parsed template.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedBlock.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.ParsedBlock"/> class.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <param name="creationIndex">The initial iIndex.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedBlock.EndsWithNewLine(System.Text.StringBuilder)">
            <summary>
            Determines if a text finishes by a new line sequence.
            </summary>
            <param name="text">The input text.</param>
            <returns>true if the text finishes by a new line sequence; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedBlock.GetLastCharacters(System.Text.StringBuilder,System.Int32)">
            <summary>
            Gets the last characters from a text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <param name="count">The count.</param>
            <returns>A string filled with the last characters. Its length can be less than count.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedBlock.BuildSourceCode(System.Text.StringBuilder,CodeFluent.Runtime.TemplateEngine.ParsedTemplate)">
            <summary>
            Builds the source code.
            </summary>
            <param name="source">The current source text. May not be null.</param>
            <param name="parsed">The parsed template.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedBlock.CompareTo(CodeFluent.Runtime.TemplateEngine.ParsedBlock)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other" /> parameter.
            Zero
            This object is equal to <paramref name="other" />.
            Greater than zero
            This object is greater than <paramref name="other" />.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedBlock.CreationIndex">
            <summary>
            Gets the creation index.
            </summary>
            <value>
            The creation index.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedBlock.Text">
            <summary>
            Gets the block text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedBlock.Index">
            <summary>
            Gets the block index. Valid only when building the source code.
            </summary>
            <value>
            The block index.
            </value>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.CodeBlock.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.CodeBlock"/> class.
            </summary>
            <param name="code">The input code. May not be null.</param>
            <param name="creationIndex">The initial iIndex.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.CodeBlock.GetBlockIndex(System.String)">
            <summary>
            Gets the index of a block from a line or nothing if the line does not represent a block index.
            </summary>
            <param name="line">The line.</param>
            <returns>A block index. The index is positive for a block start and negative for a block end.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.CodeBlock.AppendBlockStart(System.Text.StringBuilder,CodeFluent.Runtime.TemplateEngine.ParsedTemplate)">
            <summary>
            Appends block start information.
            </summary>
            <param name="source">The current source text. May not be null.</param>
            <param name="parsed">The parsed template. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.CodeBlock.AppendBlockEnd(System.Text.StringBuilder,CodeFluent.Runtime.TemplateEngine.ParsedTemplate)">
            <summary>
            Appends block end information.
            </summary>
            <param name="source">The current source text. May not be null.</param>
            <param name="parsed">The parsed template. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.CodeBlock.BuildSourceCode(System.Text.StringBuilder,CodeFluent.Runtime.TemplateEngine.ParsedTemplate)">
            <summary>
            Builds the source code.
            </summary>
            <param name="source">The current source text. May not be null.</param>
            <param name="parsed">The parsed template. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.CodeBlock.BuildBlock(System.Text.StringBuilder,CodeFluent.Runtime.TemplateEngine.ParsedTemplate)">
            <summary>
            Builds the source code.
            </summary>
            <param name="source">The current source text. May not be null.</param>
            <param name="parsed">The parsed template. May not be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.Output">
            <summary>
            Defines the output class that will be visible by script objects
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Output.#ctor(CodeFluent.Runtime.TemplateEngine.ParsedTemplate,System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.Output"/> class.
            </summary>
            <param name="template">The parsed template. May not be null.</param>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Output.Write(System.Object)">
            <summary>
            Writes the specified value out to the text writer.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Output.WriteBlock(System.Int32)">
            <summary>
            Writes a text block.
            </summary>
            <param name="index">The block index in the ParsedTemplate Blocks list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Output.WriteLine(System.Object)">
            <summary>
            Writes the specified value out to the text writer, followed by a line terminator to the text stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Output.Template">
            <summary>
            Gets the parsed template. May not be null.
            </summary>
            <value>
            The template.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Output.Writer">
            <summary>
            Gets the output writer.
            </summary>
            <value>
            The writer.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.ParsedTemplate">
            <summary>
            Defines a pre-parsed template.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.CheckDelimitersTokens">
            <summary>
            Checks the delimiters tokens.
            </summary>
            <returns>true if delimiter tokens were successfully checked; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.#ctor(CodeFluent.Runtime.TemplateEngine.Template,System.IO.TextReader,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.ParsedTemplate"/> class.
            </summary>
            <param name="template">The template. May not be null.</param>
            <param name="reader">The reader. May not be null.</param>
            <param name="arguments">The arguments. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.#ctor(CodeFluent.Runtime.TemplateEngine.Template,System.String,System.Collections.Generic.IEnumerable{CodeFluent.Runtime.TemplateEngine.ParsedBlock},System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.ParsedTemplate"/> class.
            </summary>
            <param name="template">The template. May not be null.</param>
            <param name="sourceCode">The source code. May not null.</param>
            <param name="blocks">The list of blocks. Only non-code blocks content is needed, but all blocks are needed.</param>
            <param name="arguments">The arguments. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.Run(System.IO.TextWriter,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Runs the template through the specified text writer.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="context">The context. May be null if no arguments were passed during parsing.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.BuildSourceCode">
            <summary>
            Builds the source code from the blocks.
            </summary>
            <returns>A string representing the source code that is to be ran by the script engine</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.SortBlocks">
            <summary>
            Sorts the blocks.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.BuildParsedBlocksSourceCode(System.Text.StringBuilder)">
            <summary>
            Builds the parsed blocks source code.
            </summary>
            <returns>A string representing the source code that is to be ran by the script engine</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.ParseRtf(System.IO.TextReader)">
            <summary>
            Parses an RTF text stream.
            </summary>
            <param name="reader">The reader. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.Parse(System.IO.TextReader)">
            <summary>
            Parses a plain text stream.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.UnescapeOptions">
            <summary>
            Gets the unescape options.
            </summary>
            <value>
            The unescape options.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.Engine">
            <summary>
            Gets the ActiveX Script engine object.
            </summary>
            <value>
            The engine object. May not be null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.RtfEscapeEncoding">
            <summary>
            Gets or sets the RTF escape encoding. May be null.
            </summary>
            <value>
            The RTF escape encoding.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.Template">
            <summary>
            Gets the original input template.
            </summary>
            <value>
            The template.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.Script">
            <summary>
            Gets the parsed script object.
            </summary>
            <value>
            The script.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.SourceCode">
            <summary>
            Gets the script source code.
            </summary>
            <value>
            The source code.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.Arguments">
            <summary>
            Gets the script arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.ParsedTemplate.Blocks">
            <summary>
            Gets the list of blocks.
            </summary>
            <value>
            The list of blocks.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.RtfCharacters">
            <summary>
            Defines RTF characters that are not part of control words or text.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.RtfObject">
            <summary>
            Defines an RTF object.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.RtfObject"/> class.
            </summary>
            <param name="text">The object text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfObject.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfObject.Text">
            <summary>
            Gets or sets the object text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfObject.UnescapedText">
            <summary>
            Gets the unescaped text.
            </summary>
            <value>
            The unescaped text.
            </value>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfCharacters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.RtfCharacters"/> class.
            </summary>
            <param name="chars">The chars.</param>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.RtfControlSymbol">
            <summary>
            Defines an RTF control symbol.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfControlSymbol.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.RtfControlSymbol"/> class.
            </summary>
            <param name="symbol">The symbol.</param>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfControlSymbol.Symbol">
            <summary>
            Gets the name, without the leading \ character.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.RtfControlWord">
            <summary>
            Defines an RTF control word.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfControlWord.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.RtfControlWord"/> class.
            </summary>
            <param name="name">The control word name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfControlWord.GetNumericDelimiter(System.String)">
            <summary>
            Gets the numeric delimiter from a control word name.
            </summary>
            <param name="text">The text.</param>
            <returns>The numeric delimiter of null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfControlWord.GetNumericDelimiter(System.String,System.String)">
            <summary>
            Gets the numeric delimiter from a control word name.
            </summary>
            <param name="text">The text. May be null.</param>
            <param name="start">The start text to use. May be null.</param>
            <returns>The numeric delimiter of null.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfControlWord.NumericDelimiter">
            <summary>
            Gets the numeric delimiter, if any.
            </summary>
            <value>
            The numeric delimiter or null if not found.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfControlWord.Name">
            <summary>
            Gets the name, without the leading \ character.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions">
            <summary>
            Defines options when extracting text from an RTF stream.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions"/> class.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions.DiscardedControlWords">
            <summary>
            Gets the discarded control words list.
            </summary>
            <value>
            The discarded control words.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions.ReplacementCharacters">
            <summary>
            Gets the replacement characters list.
            </summary>
            <value>
            The replacement characters.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions.UnescapeEncoding">
            <summary>
            Gets the unescape encoding. If unset, the document encoding (\ansicpg control word) will be used.
            </summary>
            <value>
            The unescape encoding.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions.ParReplacement">
            <summary>
            Gets or sets the \par control word replacement.
            Only used by the ExtractText method.
            </summary>
            <value>
            The par replacement.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions.RemoveCrLf">
            <summary>
            Gets or sets a value indicating whether to remove CR or LF characters.
            </summary>
            <value>
              <c>true</c> if CR or LF characters must be removed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions.UnescapeUnicode">
            <summary>
            Gets or sets a value indicating whether to convert unicode control words \u.
            Only used by the ExtractText method.
            </summary>
            <value>
              <c>true</c> if unicode control words are converted to text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions.UnescapeSpecial">
            <summary>
            Gets or sets a value indicating whether to convert special characters.
            </summary>
            <value>
              <c>true</c> if special characters are converted to text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions.UnescapeHexa">
            <summary>
            Gets or sets a value indicating whether to convert hexa control symbols \'hh.
            </summary>
            <value>
              <c>true</c> if hexa control symbols are converted to text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.RtfGroup">
            <summary>
            Defines an RTF group object.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfGroup.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.RtfGroup"/> class.
            </summary>
            <param name="level">The group level.</param>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfGroup.Level">
            <summary>
            Gets or sets the group level.
            </summary>
            <value>
            The level.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.RtfReader">
            <summary>
            Defines a utility class to read Rtf primitives.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.RtfReader"/> class.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.NewRtfCharacters(System.String)">
            <summary>
            Creates an instance of the RtfCharacters class.
            </summary>
            <param name="chars">The input chars.</param>
            <returns>
            An instance of the RtfCharacter class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.NewRtfControlSymbol(System.Char)">
            <summary>
            Creates an instance of the RtfControlSymbol class.
            </summary>
            <param name="symbol">The input symbol.</param>
            <returns>
            An instance of the RtfControlSymbol class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.NewRtfControlWord(System.String)">
            <summary>
            Creates an instance of the RtfControlWord class.
            </summary>
            <param name="name">The name symbol.</param>
            <returns>
            An instance of the RtfControlWord class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.NewRtfGroup(System.Int32)">
            <summary>
            Creates an instance of the RtfGroup class.
            </summary>
            <param name="level">The group level.</param>
            <returns>
            An instance of the RtfGroup class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.NewRtfText(System.String)">
            <summary>
            Creates an instance of the RtfText class.
            </summary>
            <param name="text">The text.</param>
            <returns>
            An instance of the RtfText class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.Read">
            <summary>
            Reads the input reader.
            </summary>
            <returns>A stream of RtfObjects</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.ExtractText(System.String,System.IO.TextWriter)">
            <summary>
            Extracts textual information from an RTF stream.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.ExtractText(System.String,System.IO.TextWriter,CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions)">
            <summary>
            Extracts textual information from an RTF stream.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output. May not be null.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.ExtractText(System.String)">
            <summary>
            Extracts textual information from an RTF stream.
            </summary>
            <param name="input">The input.</param>
            <returns>A string representing the text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.ExtractText(System.String,CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions)">
            <summary>
            Extracts textual information from an RTF stream.
            </summary>
            <param name="input">The input.</param>
            <param name="options">The options to use.</param>
            <returns>A string representing the text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.ExtractText(System.IO.TextReader)">
            <summary>
            Extracts textual information from an RTF stream.
            </summary>
            <param name="input">The input. May not be null.</param>
            <returns>A string representing the text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.ExtractText(System.IO.TextReader,CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions)">
            <summary>
            Extracts textual information from an RTF stream.
            </summary>
            <param name="input">The input. May not be null.</param>
            <returns>A string representing the text.</returns>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.ExtractText(System.IO.TextReader,System.IO.TextWriter)">
            <summary>
            Extracts textual information from an RTF stream.
            </summary>
            <param name="input">The input. May not be null.</param>
            <param name="output">The output. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfReader.ExtractText(System.IO.TextReader,System.IO.TextWriter,CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions)">
            <summary>
            Extracts textual information from an RTF stream.
            </summary>
            <param name="input">The input. May not be null.</param>
            <param name="output">The output. May not be null.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfReader.Reader">
            <summary>
            Gets the input reader.
            </summary>
            <value>
            The reader.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfReader.ReadRtfCharacters">
            <summary>
            Gets or sets a value indicating whether RtfCharacters objects are returned during reading operations or just skipped.
            </summary>
            <value>
              <c>true</c> if RtfCharacters objects are returned during reading operations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfReader.ReadRtfGroups">
            <summary>
            Gets or sets a value indicating whether RtfEnterGroup and RtfLeaveGroup objects are returned during reading operations or just skipped.
            </summary>
            <value>
              <c>true</c> if RtfEnterGroup and RtfLeaveGroup objects are returned during reading operations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.RtfText">
            <summary>
            Defines an RTF text object.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.RtfText"/> class.
            </summary>
            <param name="text">The object text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfText.Escape(System.IO.TextWriter,System.String)">
            <summary>
            Escapes the specified text to the output writer.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="text">The input text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfText.Escape(System.IO.TextWriter,System.Text.Encoding,System.String)">
            <summary>
            Escapes the specified text to the output writer.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="escapeEncoding">The escape encoding. May be null.</param>
            <param name="text">The input text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfText.Escape(System.String)">
            <summary>
            Escapes the specified text.
            </summary>
            <param name="text">The input text.</param>
            <returns>The escaped text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfText.GetEscapedChar(CodeFluent.Runtime.TemplateEngine.RtfObject)">
            <summary>
            Converts an RTF object into a character or null if there is no correspondance.
            </summary>
            <param name="obj">The input obj.</param>
            <returns>A converted character or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfText.Unescape(System.String)">
            <summary>
            Unescapes the specified text.
            </summary>
            <param name="text">The input text.</param>
            <returns>The unescaped text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfText.Unescape(System.String,CodeFluent.Runtime.TemplateEngine.RtfExtractTextOptions)">
            <summary>
            Unescapes the specified text.
            </summary>
            <param name="text">The input text.</param>
            <param name="options">The options to use.</param>
            <returns>
            The unescaped text.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfText.Text">
            <summary>
            Gets or sets the object text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.RtfTextReader">
            <summary>
            Defines an RTF text reader.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfTextReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.RtfTextReader"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfTextReader.ReadNextObject">
            <summary>
            Go to the next object.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfTextReader.Peek">
            <summary>
            Reads the next character without changing the state of the reader or the character source. Returns the next available character without actually reading it from the input stream.
            </summary>
            <returns>
            An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.RtfTextReader.Read">
            <summary>
            Reads the next character from the input stream and advances the character position by one character.
            </summary>
            <returns>
            The next character from the input stream, or -1 if no more characters are available. The default implementation returns -1.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfTextReader.TextOptions">
            <summary>
            Defines text options. May be null.
            </summary>
            <value>
            The text options.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfTextReader.EscapeEncoding">
            <summary>
            Gets the escape encoding read from the input. May be null.
            </summary>
            <value>
            The escape encoding.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.RtfTextReader.CurrentObject">
            <summary>
            Gets the current object. May be null.
            </summary>
            <value>
            The current object.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.TemplateException">
            <summary>
            Defines a Template Engine exception.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.TemplateException.#ctor">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.TemplateException"/> class. 
            </summary> 
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.TemplateException.#ctor(System.String)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.TemplateException"/> class. 
            </summary> 
            <param name="message">The message.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.TemplateException.#ctor(System.Exception)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.TemplateException"/> class. 
            </summary> 
            <param name="innerException">The inner exception.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.TemplateException.#ctor(System.String,System.Exception)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.TemplateException"/> class. 
            </summary> 
            <param name="message">The message.</param> 
            <param name="innerException">The inner exception.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.TemplateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.TemplateException"/> class. 
            </summary> 
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param> 
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param> 
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.TemplateException.SourceCodeErrorHighlight">
            <summary>
            Gets the error highlighted original source code.
            </summary>
            <value>
            The error highlighted original source code.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.TemplateEngine.Template">
            <summary>
            Defines properties and characteristics of an ActiveX Scripting template .
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.TemplateEngine.Template.DefaultStartToken">
            <summary>
            The default start token.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.TemplateEngine.Template.DefaultEndToken">
            <summary>
            The default end token.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.TemplateEngine.Template.DefaultOutputItemName">
            <summary>
            The default output item name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.TemplateEngine.Template.DefaultRunMethodName">
            <summary>
            The default run method name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.TemplateEngine.Template"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.Load(System.String,System.String[])">
            <summary>
            Loads this instance from the specified file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="arguments">The optional arguments.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.Load(System.String,System.Text.Encoding,System.String[])">
            <summary>
            Loads this instance from the specified file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="encoding">The file encoding to use. If null, the default encoding will be used.</param>
            <param name="arguments">The optional arguments.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.Load(System.IO.Stream,System.Text.Encoding,System.String[])">
            <summary>
            Loads this instance from the specified stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="encoding">The file encoding to use. If null, the default encoding will be used.</param>
            <param name="arguments">The optional arguments.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.Load(System.IO.Stream,System.Text.Encoding,System.Boolean,System.String[])">
            <summary>
            Loads this instance from the specified stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="encoding">The file encoding to use. If null, the default encoding will be used.</param>
            <param name="detectEncodingFromByteOrderMarks">if set to <c>true</c>, the encoding will be detected from the byte order marks.</param>
            <param name="arguments">The optional arguments.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.LoadText(System.String,System.String[])">
            <summary>
            Loads this instance from the specified text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <param name="arguments">The optional arguments.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.Load(System.IO.TextReader,System.String[])">
            <summary>
            Loads the specified reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.Run">
            <summary>
            Runs the template with the specified context.
            </summary>
            <returns>
            The template result.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.Run(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Runs the template with the specified context.
            </summary>
            <param name="context">The context. May be null.</param>
            <returns>The template result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.Run(System.IO.TextWriter)">
            <summary>
            Runs the template with the specified writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.Run(System.IO.TextWriter,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Runs the template with the specified writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="context">The context. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.CreateParsedTemplate(System.String,System.Collections.Generic.IEnumerable{CodeFluent.Runtime.TemplateEngine.ParsedBlock},System.String[])">
            <summary>
            Instantiate a parsed template.
            </summary>
            <param name="sourceCode">The source code. May not be null.</param>
            <param name="blocks">The blocks.</param>
            <param name="arguments">The arguments. May be null.</param>
            <returns>
            A new instance of the ParsedTemplate class. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.CreateParsedTemplate(System.IO.TextReader,System.String[])">
            <summary>
            Instantiate a parsed template.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="arguments">The arguments. May be null.</param>
            <returns>A new instance of the ParsedTemplate class. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.CreateNewOutput(CodeFluent.Runtime.TemplateEngine.ParsedTemplate,System.IO.TextWriter)">
            <summary>
            Instantiate an output object.
            </summary>
            <param name="parsedTemplate">The parsed template. May not be null.</param>
            <param name="writer">The output writer. May not be null.</param>
            <returns>
            A new instance of the Output class. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.CreateNewParsedBlock(System.String,System.Int32)">
            <summary>
            Instantiate a text block.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <param name="creationIndex">The initial iIndex.</param>
            <returns>
            A new instance of the ParsedTemplate class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.TemplateEngine.Template.CreateNewCodeBlock(System.String,System.Int32)">
            <summary>
            Instantiate a code block.
            </summary>
            <param name="code">The input code. May not be null.</param>
            <param name="creationIndex">The initial iIndex.</param>
            <returns>
            A new instance of the ParsedTemplate class.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Template.Parsed">
            <summary>
            Gets the parsed object. May not be null.
            </summary>
            <value>
            The parsed object.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Template.RtfFormat">
            <summary>
            Gets or sets a value indicating whether the template source is in Rich Text format (RTF).
            </summary>
            <value>
              <c>true</c> if the template source is in RTF format; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Template.AllowActiveXObject">
            <summary>
            Gets or sets a value indicating whether Active X objects are allowed in the script source.
            </summary>
            <value>
              <c>true</c> if Active X objects are allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Template.PreferredScriptEngineName">
            <summary>
            Gets or sets the name of the preferred script engine. Only jscript/javascript engines are supported.
            </summary>
            <value>
            The name of the preferred script engine.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Template.HighlightedErrorLines">
            <summary>
            Gets or sets a value indicating the number of lines that will be extracted on error.
            </summary>
            <value>
            The highlighted error lines number.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Template.RunMethodName">
            <summary>
            Gets or sets the name of the script method to run.
            </summary>
            <value>
            The name of the script method to run.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Template.OutputItemName">
            <summary>
            Gets or sets the name of the output script item.
            </summary>
            <value>
            The name of the output script item.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Template.StartToken">
            <summary>
            Gets or sets the start token.
            </summary>
            <value>
            The start token.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.TemplateEngine.Template.EndToken">
            <summary>
            Gets or sets the end token.
            </summary>
            <value>
            The end token.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.UI.CommandType">
            <summary>
            Defines the type of command.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.CommandType.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.CommandType.New">
            <summary>
            Instance creation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.CommandType.Save">
            <summary>
            Instance update
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.CommandType.Load">
            <summary>
            Instance load.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.CommandType.Delete">
            <summary>
            Instance delete.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.CommandType.Cancel">
            <summary>
            Command cancel.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.CommandType.Sort">
            <summary>
            Command sort.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.CommandType.Page">
            <summary>
            Command paging.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.UI.Consts">
            <summary>
            Represents constants used throughout CodeFluent.
            This is not intended to be used directly by your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.Consts.BasePrefix">
            <summary>
            Defines CodeFluent base prefix.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.Consts.ParameterPrefix">
            <summary>
            Defines CodeFluent parameter prefix.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.Consts.ArgumentParameterPrefix">
            <summary>
            Defines CodeFluent argument parameter prefix.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.Consts.DefaultStylesheetName">
            <summary>
            Defines CodeFluent default style sheet name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.Consts.DefaultStylesheetDisplayName">
            <summary>
            Defines CodeFluent default style sheet display name.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.UI.RendererType">
            <summary>
            Defines the type of renderer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.RendererType.Undefined">
            <summary>
            Undefined.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.RendererType.Unspecified">
            <summary>
            The renderer is unspecified.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.RendererType.Read">
            <summary>
            The renderer is used for read operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.RendererType.Write">
            <summary>
            The renderer is used for write operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.RendererType.Column">
            <summary>
            The renderer is used to render a column.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.RendererType.Create">
            <summary>
            The renderer is used for create operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.RendererType.Parameter">
            <summary>
            The renderer is used to render a parameter.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.UI.UIType">
            <summary>
            Defines CodeFluent User Interface (UI) type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Unspecified">
            <summary>
            Undefined.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.DateTime">
            <summary>
            A date and time, or a date, or a time.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.ElapsedTime">
            <summary>
            An elapsed time.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Integer">
            <summary>
            An integer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Text">
            <summary>
            A text.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.RichText">
            <summary>
            A rich text.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Boolean">
            <summary>
            A boolean.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Binary">
            <summary>
            An array of bytes
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.BinaryLarge">
            <summary>
            A large array of bytes, or BLOB (Binary Large OBject).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.File">
            <summary>
            A file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Image">
            <summary>
            An image.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Character">
            <summary>
            A character.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Number">
            <summary>
            A floating point number.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.AnyValue">
            <summary>
            Any scalar value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.UniqueIdentifier">
            <summary>
            A unique identifier, UUID, or GUID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Currency">
            <summary>
            A floating point number used for currency calculation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.HyperLink">
            <summary>
            An hyper link.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.EMail">
            <summary>
            An e-mail.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Choice">
            <summary>
            A choice of values.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.MultiChoice">
            <summary>
            A multiple choice of values.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Relation">
            <summary>
            A 'To One' relation between two instances.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Password">
            <summary>
            A password string.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.RowVersion">
            <summary>
            An opaque array of bytes representing a persistence row version.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Xml">
            <summary>
            An xml string.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Video">
            <summary>
            A video.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Association">
            <summary>
            A 'To Many' relation between two instances.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Audio">
            <summary>
            Audio data.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Date">
            <summary>
            A date.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UI.UIType.Time">
            <summary>
            A time.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.UnknownBoolean">
            <summary>
            Defines a boolean that can take an undefined value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UnknownBoolean.Undefined">
            <summary>
            The boolean is undefined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UnknownBoolean.True">
            <summary>
            The boolean is true.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UnknownBoolean.False">
            <summary>
            The boolean is false.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.UserExceptionType">
            <summary>
            Defines exceptions for end user, for message customizing purposes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UserExceptionType.Undefined">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UserExceptionType.ItemAlreadyAdded">
            <summary>
            An item with the same key has already been added.
            Argument {0} should represent the item's key value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.UserExceptionType.VoidCollectionKey">
            <summary>
            An item with an empty or null collection key cannot be added.
            Argument {0} should represent the item's key value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ArrayDataReader">
            <summary>
            Defines an IDataReader implementation based on an array.
            Supports one-dimensional and two-dimensional arrays only.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ArrayDataReader.#ctor(System.Array)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ArrayDataReader"/> class.
            </summary>
            <param name="array">The underlying array. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ArrayDataReader.CurrentRow">
            <summary>
            Gets the current row.
            </summary>
            <value>The current row.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ArrayDataReader.Array">
            <summary>
            Gets the underlying rray.
            </summary>
            <value>The array.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.AssemblyUtilities">
            <summary>
            Represents a set of reflection utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.IsDynamic(System.Reflection.Assembly)">
            <summary>
            Determines whether the specified assembly is dynamic.
            </summary>
            <param name="assembly">The assembly. May not be null.</param>
            <returns>
            	<c>true</c> if the specified assembly is dynamic; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.IsVoidType(System.String)">
            <summary>
            Determines whether the specified type name is a void type.
            </summary>
            <param name="typeName">Type name. May be null.</param>
            <returns>
            	<c>true</c> if the specified type name is a void type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetOpenGenericTypeName(System.String,System.Boolean)">
            <summary>
            Gets the open type name. If the type is not generic, the type name is returned as is.
            </summary>
            <param name="typeName">The type name. If null, null will be returned.</param>
            <param name="forReflection">if set to <c>true</c> the type name must be used for reflection.</param>
            <returns>The full type name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAllProperties(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets all properties for a type, including base types if any, and interfaces if any.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="flags">The flags.</param>
            <returns>An array of <see cref="T:System.Reflection.PropertyInfo"/> instances. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAllMethods(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets all methods for a type, including base types if any, and interfaces if any.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="flags">The flags.</param>
            <returns>An array of <see cref="T:System.Reflection.PropertyInfo"/> instances. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAllMembers(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets all members for a type, including base types if any, and interfaces if any.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="flags">The flags.</param>
            <returns>An array of <see cref="T:System.Reflection.MemberInfo"/> instances. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.IsAssignableFrom(System.String,System.Type)">
            <summary>
            Determines whether the specified type name is assignable from the type object.
            </summary>
            <param name="typeName">The type name. May not be null.</param>
            <param name="type">The type instance. May not be null.</param>
            <returns>
            	<c>true</c> if the specified type name is assignable from the type object; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetType(System.String)">
            <summary>
            Gets a type from a type name.
            The type name can be partially defined. Types in mscorlib.dll and system.dll will be found even when not fully defined.
            </summary>
            <param name="fullTypeName">Full name of the type.</param>
            <returns>The type instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetType(System.String,System.Boolean)">
            <summary>
            Gets a type from a type name.
            The type name can be partially defined. Types in mscorlib.dll and system.dll will be found even when not fully defined.
            </summary>
            <param name="fullTypeName">Full name of the type.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw on error.</param>
            <returns>The type instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetType(System.String,System.Boolean,System.Reflection.Assembly)">
            <summary>
            Gets a type from a type name.
            The type name can be partially defined. Types in mscorlib.dll and system.dll will be found even when not fully defined.
            </summary>
            <param name="fullTypeName">Full name of the type.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw on error.</param>
            <param name="hint">A hint assembly if assembly name is not specified. May be null.</param>
            <returns>The type instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAttribute``1(System.ComponentModel.AttributeCollection)">
            <summary>
            Gets a custom attribute from a collection of attributes
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="attributes">The attributes.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetDescription(System.Object,System.String)">
            <summary>
            Gets an instance description.
            If the obj parameter is a Type object, attributes are read from the type instead of the instance.
            </summary>
            <param name="obj">The instance or a type. May not be null.</param>
            <param name="defaultValue">The default value to use if no description is defined.</param>
            <returns>The description.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetDisplayName(System.Object,System.String)">
            <summary>
            Gets an instance display name.
            If the obj parameter is a Type object, attributes are read from the type instead of the instance.
            </summary>
            <param name="obj">The instance or a type. May not be null.</param>
            <param name="defaultValue">The default value to use if no display name is defined.</param>
            <returns>The display name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetCategory(System.Object,System.String)">
            <summary>
            Gets an instance category.
            If the obj parameter is a Type object, attributes are read from the type instead of the instance.
            </summary>
            <param name="obj">The instance or a type. May not be null.</param>
            <param name="defaultValue">The default value to use if no category is defined.</param>
            <returns>The category.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAttribute``1(System.ComponentModel.MemberDescriptor)">
            <summary>
            Gets a custom attribute declared on a member descripor.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="descriptor">The descriptor. May not be null.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAttribute``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Gets a custom attribute declared on custom attribute provider.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="provider">The provider. May not be null.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAttribute``1(System.Object)">
            <summary>
            Gets a custom attribute declared on a given object instance's type.
            NOTE: don't use this method, it has problems, but is preserved due to compatibility reasons.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="obj">The object instance. May not be null.</param>
            <returns>An instance of the attribute type if found; otherwise null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetPropertyAttribute``1(System.Object,System.String)">
            <summary>
            Gets a custom attribute declared on a given object instance's property.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="obj">The object instance. May not be null.</param>
            <param name="propertyName">Name of the property. May not be null.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetPropertyAttribute``1(System.Object,System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets a custom attribute declared on a given object instance's property.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="obj">The object instance. May not be null.</param>
            <param name="propertyName">Name of the property. May not be null.</param>
            <param name="flags">The binding flags to use.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetConfiguration(System.Reflection.Assembly)">
            <summary>
            Gets the configuration (release, debug, etc.) of an assembly.
            </summary>
            <param name="assembly">The assembly. May not be null.</param>
            <returns>The configuration represented as a string. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetTitle(System.Reflection.Assembly)">
            <summary>
            Gets the title of an assembly.
            </summary>
            <param name="assembly">The assembly. May not be null.</param>
            <returns>The title represented as a string. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetInformationalVersion(System.Reflection.Assembly)">
            <summary>
            Gets the informational version of an assembly.
            </summary>
            <param name="assembly">The assembly. May not be null.</param>
            <returns>The version represented as a string. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetNamespace(System.String)">
            <summary>
            Parses the name of an assembly qualified type name string and returns the namespace.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <returns>The type namespace. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetName(System.String)">
            <summary>
            Parses the name of an assembly qualified type name string and returns the name.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <returns>The type name. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetFullName(System.String)">
            <summary>
            Parses the name of an assembly qualified type name string and returns the full name.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <returns>The type full name. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyName(System.String)">
            <summary>
            Parses the name of an assembly qualified type name string and returns the assembly name.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <returns>The type assembly name. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParseAssemblyQualifiedTypeName(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Parses the name of an assembly qualified type name string.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <param name="name">The type name. May be null.</param>
            <param name="namespace">The type namespace. May be null.</param>
            <param name="assemblyName">The assembly name. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParseAssemblyQualifiedNamespace(System.String@,System.String@)">
            <summary>
            Parses an assembly qualified namespace.
            </summary>
            <param name="namespace">The input assembley namespace. May not be null.</param>
            <param name="assemblyName">The assembly name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.IsValueType(System.String)">
            <summary>
            Determines whether the specified type name is a value type.
            </summary>
            <param name="typeName">The type name. May not be null.</param>
            <returns>
            	<c>true</c> if the specified type name is a value type; otherwise, <c>false. It it cannot be determined, the result is <c>undefined</c>.</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.SetPropertyValue(System.Object,System.String,System.Object,System.Boolean)">
            <summary>
            Sets the property value.
            </summary>
            <param name="instance">The instance.</param>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw if the property cannot be set.</param>
            <returns>
            true if the property was set; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.SetPropertyValue(System.Object,System.String,System.Object,System.Reflection.BindingFlags,System.Boolean)">
            <summary>
            Sets the property value.
            </summary>
            <param name="instance">The instance.</param>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <param name="bindingFlags">Binding flags to use.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw if the property cannot be set.</param>
            <returns>true if the property was set; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetMember(System.Type,System.String)">
            <summary>
            Gets a member (Field or Property) from a given type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="path">The member name. May not be null.</param>
            <returns>An instance of the PropertyInfo or FieldInfo types.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetMember(System.Type,System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets a member (Field or Property) from a given type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="path">The member name. May not be null.</param>
            <param name="bindingFlags">Binding flags to use.</param>
            <returns>
            An instance of the PropertyInfo or FieldInfo types.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyPath(System.String)">
            <summary>
            Gets an assembly path given a partial name.
            </summary>
            <param name="name">An assembly partial name. May not be null.</param>
            <returns>
            The assembly path if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyPath(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets an assembly path given a partial name.
            </summary>
            <param name="name">An assembly partial name. May not be null.</param>
            <param name="matchClrVersion">if set to <c>true</c> the method will try to automatically match the current CLR version.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw on error.</param>
            <returns>
            The assembly path if found; otherwise null if throwOnError was set to false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyFullName(System.String)">
            <summary>
            Gets the full name of the specified assembly.
            This method does not use .NET reflection and does not load the file in the current AppDomain.
            </summary>
            <param name="filePath">The assembly file path. May not be null.</param>
            <returns>
            A string containing the specified assembly full name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyFullName(System.String,System.Boolean)">
            <summary>
            Gets the full name of the specified assembly.
            This method does not use .NET reflection and does not load the file in the current AppDomain.
            </summary>
            <param name="filePath">The assembly file path. May not be null.</param>
            <param name="includeProcessorArchitecture">if set to <c>true</c> processor architecture will be included in the name.</param>
            <returns>A string containing the specified assembly full name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyFullName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the full name of the specified assembly.
            This method does not use .NET reflection and does not load the file in the current AppDomain.
            </summary>
            <param name="filePath">The assembly file path. May not be null.</param>
            <param name="includeProcessorArchitecture">if set to <c>true</c> processor architecture will be included in the name.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw on error.</param>
            <returns>
            A string containing the specified assembly full name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetGlobalAssemblyCachePath(System.String)">
            <summary>
            Gets the global assembly cache path for a given assembly.
            </summary>
            <param name="filePath">The assembly file path. May not be null.</param>
            <returns>
            A directory path or null if the assembly is not in the Global Assembly Cache.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetLinkerTimestamp(System.Reflection.Assembly)">
            <summary>
            Gets the linker timestamp of a specified assembly.
            </summary>
            <param name="assembly">The assembly. May not be null.</param>
            <returns>A valid date time or null if an error occurred.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetLinkerTimestamp(System.String)">
            <summary>
            Gets the linker timestamp of a specified assembly.
            </summary>
            <param name="filePath">The assembly file path.</param>
            <returns>
            A valid date time or null if an error occurred.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType">
            <summary>
            Defines a parsed type.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.ToString(CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <param name="options">The options to use.</param>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.ToString(System.Type,CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the specified type, using a specific formatting.
            </summary>
            <param name="type">The type. May no be null.</param>
            <param name="options">The options to use.</param>
            <returns>
            A <see cref="T:System.String"/> that represents the specified type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.Parse(System.String)">
            <summary>
            Parses the specified type name.
            </summary>
            <param name="typeName">The type name. May not be null.</param>
            <returns>An instance of the parsed type.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.TypeName">
            <summary>
            Gets or sets the type name.
            </summary>
            <value>The type name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.AssemblyName">
            <summary>
            Gets or sets the assembly name.
            </summary>
            <value>The assembly name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.IsGeneric">
            <summary>
            Gets or sets a value indicating whether this type is generic.
            </summary>
            <value>
            	<c>true</c> if this type is generic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.Arguments">
            <summary>
            Gets or sets the type arguments.
            </summary>
            <value>The type arguments.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions">
            <summary>
            Defines output options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.CSharp">
            <summary>
            Output is C# oriented.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.Reflection">
            <summary>
            Output is Reflection oriented.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.VisualBasic">
            <summary>
            Output is Visual Basic .NET oriented.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.Open">
            <summary>
            Output an open type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.StripAssemblyNames">
            <summary>
            Strips assembly names
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.NonGenericPart">
            <summary>
            Output only the non-generic part.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Authenticode">
            <summary>
            A set of utilities to sign a file using Authenticode.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Authenticode.Sha1AlgorithmId">
            <summary>
            Defines the SHA-1 algorithm id.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Authenticode.Sha256AlgorithmId">
            <summary>
            Defines the SHA-256 (SHA-2) algorithm id.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Authenticode.Sha384AlgorithmId">
            <summary>
            Defines the SHA-384 (SHA-2) algorithm id.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Authenticode.Sha512AlgorithmId">
            <summary>
            Defines the SHA-512 (SHA-2) algorithm id.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Authenticode.FindSuitableCertificate">
            <summary>
            Finds a suitable certificate for authenticode signing.
            </summary>
            <returns>
            A certificate instance or null if not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Authenticode.FindSuitableCertificate(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
            <summary>
            Finds a suitable certificate for authenticode signing.
            </summary>
            <param name="storeName">The store name.</param>
            <param name="storeLocation">The store location.</param>
            <param name="thumbPrint">The optional thumbprint. May be null.</param>
            <returns>A certificate instance or null if not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Authenticode.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.String)">
            <summary>
            Signs the specified file using the specified certificate. The certificate must be valid for Code Signing.
            </summary>
            <param name="certificate">The certificate. May not be null.</param>
            <param name="filePath">The file path. May not be null.</param>
            <param name="tsServer">The timestamp server. May be null.</param>
            <param name="displayName">The signature program name. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Authenticode.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Signs the specified file using the specified certificate. The certificate must be valid for Code Signing.
            </summary>
            <param name="certificate">The certificate. May not be null.</param>
            <param name="filePath">The file path. May not be null.</param>
            <param name="tsServer">The timestamp server. May be null.</param>
            <param name="displayName">The signature program name. May be null.</param>
            <param name="checkCertificate">if set to <c>true</c> the certificate will be checked.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Authenticode.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.String,System.Int32)">
            <summary>
            Signs the specified file using the specified certificate. The certificate must be valid for Code Signing.
            </summary>
            <param name="certificate">The certificate. May not be null.</param>
            <param name="filePath">The file path. May not be null.</param>
            <param name="tsServer">The timestamp server. May be null.</param>
            <param name="displayName">The signature program name. May be null.</param>
            <param name="hashAlgorithmId">The hash algorithm id.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Authenticode.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Signs the specified file using the specified certificate. The certificate must be valid for Code Signing.
            </summary>
            <param name="certificate">The certificate. May not be null.</param>
            <param name="filePath">The file path. May not be null.</param>
            <param name="tsServer">The timestamp server. May be null.</param>
            <param name="displayName">The signature program name. May be null.</param>
            <param name="hashAlgorithmId">The hash algorithm id.</param>
            <param name="checkCertificate">if set to <c>true</c> the certificate will be checked.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Authenticode.TimeStampFile(System.String,System.String)">
            <summary>
            Time stamps the specified file using the specified timestamp server.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="tsServer">The timestamp server. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Authenticode.CanSignCode(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Determines whether the specified certificate can sign code.
            </summary>
            <param name="certificate">The certificate. May not be null.</param>
            <returns>true if the certificate can sign code; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Authenticode.IsSigned(System.String)">
            <summary>
            Determines whether the specified file is signed using authenticode.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>true if the file is signed; false otherwise.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.BindingListManager`1">
            <summary>
            Helper class that implements IBindingList interface methods for a given List. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.BindingListManager`1"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Adds the PropertyDescriptor to the indexes used for searching.
            </summary>
            <param name="property">The property descriptor.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Removes the PropertyDescriptor from the indexes used for searching.
            </summary>
            <param name="property">The property descriptor.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the list based on a PropertyDescriptor and a ListSortDirection.
            </summary>
            <param name="property">The property descriptor.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.EnsureSort">
            <summary>
            Ensures the list is sorted.
            </summary>
            <value><c>true</c> if sort was applied; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.RemoveSort">
            <summary>
            Removes any sort applied using ApplySort.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Returns the index of the list that has the given PropertyDescriptor.
            </summary>
            <param name="property">The property descriptor.</param>
            <param name="key">The key.</param>
            <returns>The index of the row that has the given PropertyDescriptor</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.BaseList">
            <summary>
            Gets or sets the base list. May not be null.
            </summary>
            <value>The base list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.IsSorted">
            <summary>
            Gets a value indicating whether this instance is sorted.
            </summary>
            <value><c>true</c> if this instance is sorted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.SortDirection">
            <summary>
            Gets the sort direction.
            </summary>
            <value>The sort direction.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.SortProperty">
            <summary>
            Gets the sort property.
            </summary>
            <value>The sort property.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.SupportsSearching">
            <summary>
            Gets a value indicating whether the list supports searching.
            </summary>
            <value><c>true</c> if the list supports searching; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.SupportsSorting">
            <summary>
            Gets a value indicating whether the list supports sorting.
            </summary>
            <value><c>true</c> if the list supports sorting; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.AllowEdit">
            <summary>
            Gets a value indicating whether modifying new items is allowed.
            </summary>
            <value><c>true</c> if modifying new items is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.AllowNew">
            <summary>
            Gets a value indicating whether adding new items is allowed.
            </summary>
            <value><c>true</c> if adding new items is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.AllowRemove">
            <summary>
            Gets a value indicating whether removal of items is allowed.
            </summary>
            <value><c>true</c> if removal of items is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DynamicPropertiesObject">
            <summary>
            Represents an object whose properties can be dynamically created at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DynamicPropertiesObject"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DynamicPropertiesObject"/> class.
            </summary>
            <param name="readOnly">if set to <c>true</c> all dynamic properties are read only.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.SortDescriptors(System.Collections.IComparer)">
            <summary>
            Sorts the descriptors using the specified comparer.
            </summary>
            <param name="comparer">The comparer to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.GetSortOrder(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets a property descriptor sort order.
            </summary>
            <param name="descriptor">The property descriptor.</param>
            <returns>The sort order or -1 if it was not defined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object)">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <returns>An instance of a newly created PropertyDescriptor.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object,System.Boolean,System.Attribute[])">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <param name="attributes">Custom attributes for the property. May be null.</param>
            <returns>An instance of a newly created PropertyDescriptor.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object,System.Boolean,System.Int32,System.Attribute[])">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <param name="sortOrder">The sort order.</param>
            <param name="attributes">Custom attributes for the property. May be null.</param>
            <returns>
            An instance of a newly created PropertyDescriptor.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object,System.Boolean)">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <returns>An instance of a newly created PropertyDescriptor.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object,System.Boolean,System.Int32)">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <param name="sortOrder">The sort order.</param>
            <returns>
            An instance of a newly created PropertyDescriptor.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddPropertyDescriptor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Adds a property descriptor.
            </summary>
            <param name="propertyDescriptor">The property descriptor to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.GetPropertyValue(System.String,System.Object)">
            <summary>
            Gets the value of a property.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="defaultValue">The default value if the property does not exists.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.AttributeCollection"></see> containing the attributes for this object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"></see> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"></see> for this object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"></see> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A <see cref="T:System.Type"></see> that represents the editor for this object.</param>
            <returns>
            An <see cref="T:System.Object"></see> of the specified type that is the editor for this object, or null if the editor cannot be found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the events for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the filtered events for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> that represents the properties for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
            <summary>
            Returns the properties for this instance of a component using the attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> that represents the filtered properties for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the property whose owner is to be found.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the owner of the specified property.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.GetProperty(System.String)">
            <summary>
            Gets a specific property.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <returns>An instance of a property descriptor.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.PropertyDescriptors">
            <summary>
            Gets the property descriptors.
            </summary>
            <value>The property descriptors.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.DisplayName">
            <summary>
            Gets the display name which is a concatenation of all property names.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CombinedPropertiesObject">
            <summary>
            Defines an object that has the combination of properties of a collection of objects.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CombinedPropertiesObject"/> class.
            </summary>
            <param name="objects">The list of objects to combine. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.#ctor(System.Object[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CombinedPropertiesObject"/> class.
            </summary>
            <param name="objects">The list of objects to combine. May not be null.</param>
            <param name="readOnly">if set to <c>true</c> combined properties are read only.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.AttributeCollection"></see> containing the attributes for this object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"></see> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"></see> for this object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"></see> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A <see cref="T:System.Type"></see> that represents the editor for this object.</param>
            <returns>
            An <see cref="T:System.Object"></see> of the specified type that is the editor for this object, or null if the editor cannot be found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the events for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the filtered events for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> that represents the properties for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the property whose owner is to be found.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the owner of the specified property.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.BooleanEnum">
            <summary>
            Defines an enumeration with boolean values.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.BooleanEnum.False">
            <summary>
            The false value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.BooleanEnum.True">
            <summary>
            The true value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream">
            <summary>
            Defines a MemoryStream that does not sit on the Large Object Heap, thus avoiding memory fragmentation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.DefaultChunkSize">
            <summary>
            Defines the default chunk size. Currently defined as 0x10000.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream"/> class.
            </summary>
            <param name="chunkSize">Size of the underlying chunks.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream"/> class based on the specified byte array.
            </summary>
            <param name="buffer">The array of unsigned bytes from which to create the current stream.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.#ctor(System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream"/> class based on the specified byte array.
            </summary>
            <param name="chunkSize">Size of the underlying chunks.</param>
            <param name="buffer">The array of unsigned bytes from which to create the current stream.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            This implementation does nothing.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.ToArray">
            <summary>
            Converts the current stream to a byte array.
            </summary>
            <returns>An array of bytes</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.WriteTo(System.IO.Stream)">
            <summary>
            Writes to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.FreeOnDispose">
            <summary>
            Gets or sets a value indicating whether to free the underlying chunks on dispose.
            </summary>
            <value><c>true</c> if free on dispose; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <value></value>
            <returns>true if the stream supports reading; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <value></value>
            <returns>true if the stream supports seeking; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <value></value>
            <returns>true if the stream supports writing; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <value></value>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.ChunkSize">
            <summary>
            Gets or sets the size of the underlying chunks. Cannot be greater than or equal to 85000.
            </summary>
            <value>The chunks size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <value></value>
            <returns>
            The current position within the stream.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute">
            <summary>
            Provides a text description for an assembly generated by CodeFluent.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute"/> class.
            </summary>
            <param name="codeFluentVersion">The CodeFluent version.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.#ctor(System.String,System.String,CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute"/> class.
            </summary>
            <param name="codeFluentVersion">The CodeFluent version.</param>
            <param name="description">The description.</param>
            <param name="options">Generation options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.#ctor(System.String,System.String,CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute"/> class.
            </summary>
            <param name="codeFluentVersion">The CodeFluent version.</param>
            <param name="description">The description.</param>
            <param name="options">Generation options.</param>
            <param name="modelCheckSum">The model check sum.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.IsCodeFluentGeneratedAssembly(System.Reflection.Assembly)">
            <summary>
            Determines whether the specified assembly is a CodeFluent Entities generated assembly.
            </summary>
            <param name="assembly">The assembly. May not be null.</param>
            <returns>
            	<c>true</c> if the specified assembly is a CodeFluent Entities generated assembly; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.ModelCheckSum">
            <summary>
            Gets the model checksum.
            </summary>
            <value>The model checksum.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.Options">
            <summary>
            Gets CodeFluent generation options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.Description">
            <summary>
            Gets a description.
            </summary>
            <value>A description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.CodeFluentVersion">
            <summary>
            Gets the CodeFluent version.
            </summary>
            <value>The CodeFluent version.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions">
            <summary>
            Defines CodeFluent generation options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions.None">
            <summary>
            No options is set.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions.CompiledWithVisualStudio">
            <summary>
            This assembly has been compiled with Microsoft Visual Studio.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions.CompiledWithCodeFluent">
            <summary>
            This assembly has been compiled with CodeFluent.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions.CompiledWithTemplateEngine">
            <summary>
            This assembly has been compiled with the CodeFluent Template Engine
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CommandLineUtilities">
            <summary>
            A set of command line utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument``1(System.Collections.Generic.IEnumerable{System.String},System.String,``0)">
            <summary>
            Gets an argument value from its name.
            </summary>
            <typeparam name="T">The expected argument type.</typeparam>
            <param name="arguments">The arguments list.</param>
            <param name="name">The argument name.</param>
            <param name="defaultValue">The default value if not found.</param>
            <returns>The argument value or the default value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument``1(System.Int32,``0)">
            <summary>
            Gets a positioned argument from the command line.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="index">The position of the argument in the command line.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument``1(System.Int32,``0,System.IFormatProvider)">
            <summary>
            Gets a positioned argument from the command line.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="index">The position of the argument in the command line.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="provider">A format provider. May be null.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument(System.Int32,System.Object,System.Type)">
            <summary>
            Gets a positioned argument from the command line.
            </summary>
            <param name="index">The position of the argument in the command line.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="conversionType">Type of the conversion.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument(System.Int32,System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Gets a positioned argument from the command line.
            </summary>
            <param name="index">The position of the argument in the command line.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="conversionType">Type of the conversion.</param>
            <param name="provider">A format provider. May be null.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument``1(System.String,``0)">
            <summary>
            Gets a named argument from the command line.
            </summary>
            <typeparam name="T">The target type</typeparam>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument``1(System.String,``0,System.IFormatProvider)">
            <summary>
            Gets a named argument from the command line.
            </summary>
            <typeparam name="T">The target type</typeparam>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="provider">A format provider. May be null.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.HasArgument(System.String)">
            <summary>
            Determines whether the argument is specified in the command line.
            </summary>
            <param name="name">The argument name. May not be null.</param>
            <returns>
            	<c>true</c> if the argument is specified in the command line; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument(System.String,System.Object,System.Type)">
            <summary>
            Gets a named argument from the command line.
            </summary>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="conversionType">The target type of the value.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument(System.String,System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Gets a named argument from the command line.
            </summary>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="conversionType">The target type of the value.</param>
            <param name="provider">A format provider. May be null.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CommandLineUtilities.NamedArguments">
            <summary>
            Gets the list of named arguments.
            </summary>
            <value>
            The list of named arguments.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CommandLineUtilities.PositionArguments">
            <summary>
            Gets the list of position arguments.
            </summary>
            <value>
            The list of position arguments.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CommandLineUtilities.HelpRequested">
            <summary>
            Gets a value indicating whether help was requested.
            </summary>
            <value><c>true</c> if help was requested; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundFile">
            <summary>
            A utility class to read and write Compound File. See [MS-CFB]: Compound File Binary File Format for more information at msdn.microsoft.com/en-us/library/dd942138.aspx.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.DiFatHeaderCount">
            <summary>
            Defines the number of integrated DiFat sectors.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.DirectoryEntriesPerSector">
            <summary>
            Defines the number of directory entries per sector.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.HeaderSize">
            <summary>
            Defines the file header size.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.SummaryInformationFormatId">
            <summary>
            Defines the SummaryInformation FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.SummaryInformationStreamName">
            <summary>
            Defines the SummaryInformation stream name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.DocSummaryInformationFormatId">
            <summary>
            Defines the DocSummaryInformation FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.DocSummaryInformationStreamName">
            <summary>
            Defines the DocSummaryInformation stream name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Load(System.IO.Stream)">
            <summary>
            Loads the file from the specified input stream.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Load(System.String)">
            <summary>
            Loads the file from the specified file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Save(System.String)">
            <summary>
            Saves the file to specified file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Save(System.IO.Stream)">
            <summary>
            Saves the file to the specified output stream.
            </summary>
            <param name="outputStream">The output stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.GetPropertySet(System.Guid)">
            <summary>
            Gets the specified property set.
            </summary>
            <param name="fmtid">The property set id.</param>
            <returns>A list of properties in the set.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.SetProperty(System.Guid,System.Int32,System.Object)">
            <summary>
            Sets a property value.
            </summary>
            <param name="fmtid">The property fmtid.</param>
            <param name="id">The property id.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.GetProperty``1(System.Guid,System.Int32,``0)">
            <summary>
            Gets a property value.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <param name="fmtid">The property fmtid.</param>
            <param name="id">The property id.</param>
            <param name="defaultValue">The default value if the property was not found or if the value could not be converted into expected type.</param>
            <returns>The property value.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.MiniStreamCutoff">
            <summary>
            Gets the mini stream cutoff value.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.SectorSize">
            <summary>
            Gets the sector size.
            </summary>
            <value>
            The sector size.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.MiniSectorSize">
            <summary>
            Gets the mini sector size.
            </summary>
            <value>
            The the mini sector size.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.FatEntriesPerSector">
            <summary>
            Gets the number or fat entries per sector.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.RootStorage">
            <summary>
            Gets the root storage container.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.ClassId">
            <summary>
            Gets or sets the CLSID.
            </summary>
            <value>
            The CLSID.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>
            The author.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Company">
            <summary>
            Gets or sets the company.
            </summary>
            <value>
            The company.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
            <value>
            The keywords.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Comments">
            <summary>
            Gets or sets the comments.
            </summary>
            <value>
            The comments.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.PropertySets">
            <summary>
            Gets the list of property sets.
            </summary>
            <value>
            The list of property sets.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundFileException">
            <summary>
            The exception that is thrown when a compound file error occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundFileException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundFileException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundFileException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundFileException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundFileStorage">
            <summary>
            Defines a storage container in a compound file.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.GetChildStorage(System.String)">
            <summary>
            Gets a child storage by its name.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>An instance of the CompoundFileStorage class or null if not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.GetOrAddChildStorage(System.String)">
            <summary>
            Gets a child storage by its name or create a new one if not found.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>An instance of the CompoundFileStorage class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.GetChildStream(System.String)">
            <summary>
            Gets a child stream by its name.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>
            An instance of the CompoundFileStream class or null if not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.GetOrAddChildStream(System.String)">
            <summary>
            Gets a child stream by its name or create a new one if not found.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>
            An instance of the CompoundFileStream class.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.Parent">
            <summary>
            Gets the parent file.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.IsRoot">
            <summary>
            Gets a value indicating whether this instance is the root storage.
            </summary>
            <value>
              <c>true</c> if this instance is the root storage; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.Path">
            <summary>
            Gets the storage path.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.Name">
            <summary>
            Gets the storage name.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.ChildStorages">
            <summary>
            Gets a list of child storages.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.ChildStreams">
            <summary>
            Gets a list of child streams.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundFileStream">
            <summary>
            Defines a stream in a compound file.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStream.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Parent">
            <summary>
            Gets the parent file.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Path">
            <summary>
            Gets the stream path.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Name">
            <summary>
            Gets the stream name.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Length">
            <summary>
            Gets the stream length.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Stream">
            <summary>
            Gets the physical underlying stream.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundProperty">
            <summary>
            Represents a Compound file property.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundProperty.SummaryInformationFormatId">
            <summary>
            Defines the SummaryInformation FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundProperty.DocSummaryInformationFormatId">
            <summary>
            Defines the DocSummaryInformation FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundProperty.UserDefinedPropertiesId">
            <summary>
            Defines the UserDefinedProperties FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundProperty.KnownProperties">
            <summary>
            Defines the list of well-known properties.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundProperty.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> class.
            </summary>
            <param name="formatId">The format id.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundProperty.#ctor(System.Guid,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> class.
            </summary>
            <param name="formatId">The format id.</param>
            <param name="name">The name.</param>
            <param name="id">The id.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.FormatId">
            <summary>
            Gets the FMTID.
            </summary>
            <value>The format id.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Changed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> has changed.
            </summary>
            <value><c>true</c> if changed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Deleted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> is deleted.
            </summary>
            <value><c>true</c> if deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.IsKnownProperty">
            <summary>
            Gets a value indicating whether this instance is a known property.
            </summary>
            <value>
            	<c>true</c> if this instance is a known property; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundPropertyCollection">
            <summary>
            Represents a list of Compound file properties.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.IndexOf(CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Insert(System.Int32,CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.SetValue(System.Guid,System.String,System.Object)">
            <summary>
            Sets a property value.
            </summary>
            <param name="formatId">The format id.</param>
            <param name="name">The name. May be null.</param>
            <param name="value">The value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.GetValue``1(System.Guid,System.String,``0)">
            <summary>
            Gets a property value.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <param name="formatId">The format id.</param>
            <param name="name">The name. May be null.</param>
            <param name="defaultValue">The default value to use if the property was not found.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.GetValue(System.Guid,System.String,System.Object)">
            <summary>
            Gets a property value.
            </summary>
            <param name="formatId">The format id.</param>
            <param name="name">The name. May be null.</param>
            <param name="defaultValue">The default value to use if the property was not found.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Add(CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Contains(CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.CopyTo(CodeFluent.Runtime.Utilities.CompoundProperty[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Remove(CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Item(System.Guid,System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> with the specified format id and name.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.PresentationTarget">
            <summary>
            Gets or sets the presentation target.
            </summary>
            <value>The presentation target.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Manager">
            <summary>
            Gets or sets the manager.
            </summary>
            <value>The manager.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Company">
            <summary>
            Gets or sets the company.
            </summary>
            <value>The company.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Bytes">
            <summary>
            Gets or sets the bytes count.
            </summary>
            <value>The bytes count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Lines">
            <summary>
            Gets or sets the lines count.
            </summary>
            <value>The lines count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Paragraphs">
            <summary>
            Gets or sets the paragraphs count.
            </summary>
            <value>The paragraphs count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Slides">
            <summary>
            Gets or sets the slides count.
            </summary>
            <value>The slides count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.HiddenSlides">
            <summary>
            Gets or sets the hidden slides count.
            </summary>
            <value>The hidden slides count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.MMClips">
            <summary>
            Gets or sets the multimedia clips count.
            </summary>
            <value>The multimedia clips count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.ScaleCrop">
            <summary>
            Gets or sets a value indicating whether to scale crop.
            </summary>
            <value><c>true</c> if the document is scale cropped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.SharedDoc">
            <summary>
            Gets or sets a value indicating whether the document is shared.
            </summary>
            <value><c>true</c> if the document is shared; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.HyperLinksChanged">
            <summary>
            Gets or sets a value indicating whether hyperlinks have changed.
            </summary>
            <value><c>true</c> if hyperlinks have changed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.LinksUpToDate">
            <summary>
            Gets or sets a value indicating whether links are up-to-date.
            </summary>
            <value><c>true</c> if links are up-to-date; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Notes">
            <summary>
            Gets or sets the notes count.
            </summary>
            <value>The notes count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>The author.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.LastSavedBy">
            <summary>
            Gets or sets the name of the last author.
            </summary>
            <value>The name of the last author.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.RevisionNumber">
            <summary>
            Gets or sets the revision number.
            </summary>
            <value>The revision number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Comments">
            <summary>
            Gets or sets the comments.
            </summary>
            <value>The comments.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Template">
            <summary>
            Gets or sets the template.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Security">
            <summary>
            Gets or sets the security.
            </summary>
            <value>The security.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Characters">
            <summary>
            Gets or sets the characters count.
            </summary>
            <value>The characters.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Pages">
            <summary>
            Gets or sets the pages count.
            </summary>
            <value>The pages count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Words">
            <summary>
            Gets or sets the words count.
            </summary>
            <value>The words count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.CreateDate">
            <summary>
            Gets or sets the create date.
            </summary>
            <value>The create date.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.LastPrintedDate">
            <summary>
            Gets or sets the last printed date.
            </summary>
            <value>The last printed.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.LastSavedDate">
            <summary>
            Gets or sets the last saved date.
            </summary>
            <value>The last saved date.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.TotalEditingTime">
            <summary>
            Gets or sets the total editing time.
            </summary>
            <value>The total editing time.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException">
            <summary>
            The exception that is thrown when a compound read only error occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundReadOnlyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundReadOnlyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundReadOnlyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundStorage">
            <summary>
            A utility class to read and write Compound File properties. Also supports NTFS native implementation.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundStorage"/> class.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundStorage"/> class.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="readOnly">if set to <c>true</c> the file will be open for read only operations.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.EnumerateFormats">
            <summary>
            Enumerates the property set format identifiers (FMTID) of the storage.
            </summary>
            <returns>A list of guids.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.LoadProperties(System.Guid)">
            <summary>
            Loads the properties for a given format.
            </summary>
            <param name="formatId">The format id.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.CommitChanges">
            <summary>
            Commits the changes if any.
            </summary>
            <returns>true if changes were detected and commited; otherwise false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundStorage.FilePath">
            <summary>
            Gets the file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundStorage.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundStorage.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ComVisibleWrapper">
            <summary>
            Wraps a non ComVisible object to make it visible to Com. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ComVisibleWrapper.#ctor(System.Object,CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ComVisibleWrapper"/> class.
            </summary>
            <param name="obj">The underlying object. May not be null and may not be of the ComVisibleWrapper type.</param>
            <param name="options">The options.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ComVisibleWrapper.UnderlyingObject">
            <summary>
            Gets the underlying object.
            </summary>
            <value>The underlying object.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options">
            <summary>
            Defines custom options for Com wrappers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.MarshalGuidAsByteArray">
            <summary>
            Marshal System.Guid objects as automation byte arrays.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.MarshalGuidAsString">
            <summary>
            Marshal System.Guid objects as automation strings, using the D format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.GuidFormatB">
            <summary>
            Marshal System.Guid objects as automation strings, using the B format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.GuidFormatP">
            <summary>
            Marshal System.Guid objects as automation strings, using the P format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.GuidFormatN">
            <summary>
            Marshal System.Guid objects as automation strings, using the N format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.MarshalCharAsString">
            <summary>
            Marshal System.Char objects as automation strings, not as 32 bits integers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.Default">
            <summary>
            The default options.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes">
            <summary>
            Defines console characters attributes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.ForegroundBlue">
            <summary>
            Foreground blue.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.ForegroundGreen">
            <summary>
            Foreground green.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.ForegroundRed">
            <summary>
            Foreground red.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.ForegroundIntensity">
            <summary>
            Foreground intensity.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.BackgroundBlue">
            <summary>
            Background blue.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.BackgroundGreen">
            <summary>
            Background green.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.BackgroundRed">
            <summary>
            Background red.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.BackgroundIntensity">
            <summary>
            Background intensity.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.ForegroundWhite">
            <summary>
            Foreground white.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes.BackgroundWhite">
            <summary>
            Background white.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConsoleControl">
            <summary>
            A helper class for managing the Windows console.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleControl.ApplicationIcon">
            <summary>
            The Win32 identifier of the standard application icon.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConsoleControl.AllocConsole">
            <summary>
            Allocates a new console for the calling process.
            </summary>
            <returns>true if the function succeeds; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConsoleControl.FreeConsole">
            <summary>
            Detaches the calling process from its console.
            </summary>
            <returns>true if the function succeeds; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConsoleControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ConsoleControl"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConsoleControl.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConsoleControl.SetConsoleIcon(System.Int32)">
            <summary>
            Sets the console icon.
            </summary>
            <param name="index">The icon index.</param>
            <returns>true if the console icon was changed; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConsoleControl.GetWin32Window">
            <summary>
            Gets the console window handle.
            </summary>
            <returns>An instance of the IWin32Window interface</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConsoleControl.FlashConsoleWindow">
            <summary>
            Flashes the console window.
            </summary>
            <returns>true if the call was successful; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConsoleControl.SetStandardOutputCharacterAttributes(CodeFluent.Runtime.Utilities.ConsoleCharacterAttributes)">
            <summary>
            Sets the standard output character attributes.
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.ConsoleControl.Event">
            <summary>
            Occurs when a console event occurs.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConsoleControlEventArgs">
            <summary>
            Occurs when a console event occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConsoleControlEventArgs.#ctor(CodeFluent.Runtime.Utilities.ConsoleEventType)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ConsoleControlEventArgs"/> class.
            </summary>
            <param name="eventType">Type of the event.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ConsoleControlEventArgs.EventType">
            <summary>
            Gets the type of the event.
            </summary>
            <value>The type of the event.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConsoleEventType">
            <summary>
            Defines console event types.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleEventType.CtrlC">
            <summary>
            Ctrl-C was pressed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleEventType.CtrlBreak">
            <summary>
            Ctrl-Break was pressed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleEventType.CtrlClose">
            <summary>
            The console window is closing.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleEventType.CtrlLogoff">
            <summary>
            The user is logging off.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConsoleEventType.CtrlShutdown">
            <summary>
            The machine is shutting down.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ContentType">
            <summary>
            Represents a set of MIME content type utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetRegistryExtension(System.String)">
            <summary>
            Gets a file extension from the HKCR registry.
            </summary>
            <param name="contentType">The content type input.</param>
            <returns>The corresponding extension or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetRegistryContentType(System.String)">
            <summary>
            Gets a content type from the HKCR registry.
            </summary>
            <param name="fileName">Name of the file. May not be null.</param>
            <returns>The corresponding content type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.IsXml(System.String)">
            <summary>
            Determines whether the specified content type is Xml.
            </summary>
            <param name="contentType">Input content type.</param>
            <returns>
            	<c>true</c> if the specified content type is Xml; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetPerceivedType(System.String)">
            <summary>
            Gets a file's perceived type based on its extension.
            </summary>
            <param name="fileName">The file name. May not be null..</param>
            <returns>An instance of the PerceivedType type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetWebContentType(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Gets a content type for an image format from the IIS metabase.
            </summary>
            <param name="imageFormat">The image format. May not be null.</param>
            <returns>The corresponding content type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetWebContentType(System.String)">
            <summary>
            Gets a content type from the IIS metabase.
            </summary>
            <param name="fileName">The file name or path. May not be null.</param>
            <returns>The corresponding content type.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ContentType.DefaultContentType">
            <summary>
            Gets or sets the default content type.
            </summary>
            <value>The type default content type.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConvertUtilities">
            <summary>
            A set of conversion utilities.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultBooleanValue">
            <summary>
            Defines what is the default value for System.Boolean values transferred accross persistence layers.
            Currently defined as 'false'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultCharValue">
            <summary>
            Defines what is the default value for System.Char values transferred accross persistence layers.
            Currently defined as '\0'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultByteValue">
            <summary>
            Defines what is the default value for System.Byte values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultDecimalValue">
            <summary>
            Defines what is the default value for System.Decimal values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultDoubleValue">
            <summary>
            Defines what is the default value for System.Double values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultInt16Value">
            <summary>
            Defines what is the default value for System.Int16 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultInt32Value">
            <summary>
            Defines what is the default value for System.Int32 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultInt64Value">
            <summary>
            Defines what is the default value for System.Int64 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultSByteValue">
            <summary>
            Defines what is the default value for System.SByte values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultSingleValue">
            <summary>
            Defines what is the default value for System.Single values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultUInt16Value">
            <summary>
            Defines what is the default value for System.UInt16 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultUInt32Value">
            <summary>
            Defines what is the default value for System.UInt32 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultUInt64Value">
            <summary>
            Defines what is the default value for System.UInt64 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DateTimeUniversalFormat">
            <summary>
            Represents a System.DateTime serialization format that allows universal serialization and deserialization, independent from local time zones. Equals to 'yyyy-MM-ddTHH:mm:ss.ffffzzzzzz'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.EvaluationDelimiter">
            <summary>
            Defines the delimiter character for evaluations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultGuidValue">
            <summary>
            Defines what is the default value for System.Guid values transferred accross persistence layers.
            Currently defined as Guid.Empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultDateTimeValue">
            <summary>
            Defines what is the default value for System.DateTime values transferred accross persistence layers.
            Currently defined as DateTime.MinValue.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultDateTimeOffsetValue">
            <summary>
            Defines what is the default value for System.DateTimeOffset values transferred accross persistence layers.
            Currently defined as DateTimeOffset.MinValue.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultTimeSpanValue">
            <summary>
            Defines what is the default value for System.TimeSpan values transferred accross persistence layers.
            Currently defined as TimeSpan.Zero.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SparseFilePath(System.String,System.Int32)">
            <summary>
            Splits a file path. Used to sparse a huge number of files in a directory to avoid putting all the files in the same directory.
            </summary>
            <param name="fileName">The file path. May not be null.</param>
            <param name="level">The level. If the level is 0, the original file path is returned.</param>
            <returns>The original file path prefixed with [level] parent directories.
            Each parent directory uses a character of the file path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ConcatenateCollection(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            Concatenates a collection into a string using a separator character.
            An expression is ran on each object in the collection using ASP.NET DataBinding syntax style.
            </summary>
            <param name="collection">The input collection. If null, null will be returned.</param>
            <param name="expression">The input expression. May be null.</param>
            <param name="separator">The separator character.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ConcatenateCollection(System.Collections.IEnumerable,System.String,System.String,System.IFormatProvider)">
            <summary>
            Concatenates a collection into a string using a separator character.
            An expression is ran on each object in the collection using ASP.NET DataBinding syntax style.
            </summary>
            <param name="collection">The input collection. If null, null will be returned.</param>
            <param name="expression">The input expression. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="formatProvider">The format provider to use. May be null.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Concatenate(System.Collections.IEnumerable,System.String)">
            <summary>
            Concatenates the specified objects using their string representation.
            </summary>
            <param name="objects">The collection of objects to concatenate. If the enumerable is null, null will be returned.</param>
            <param name="separator">The separator character.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Concatenate(System.Collections.IDictionary,System.String,System.String)">
            <summary>
            Concatenates a dictionary of <see cref="T:System.Collections.DictionaryEntry"/>.
            </summary>
            <param name="texts">The input dictionary. If null, null will be returned</param>
            <param name="keyValueSeparator">The separator character to use between each key and its associated value.</param>
            <param name="lineSeparator">The line separator character to use after each entry.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExtractFileText(System.String,System.Text.Encoding,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text file and optionally adds an error.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="encoding">The file character encoding. If null, encoding will be detected using byte order mark.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExtractText(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from another text and optionally adds an error.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExtractText(System.IO.TextReader,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text reader and optionally adds an error.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExtractFileText(System.IO.Stream,System.Text.Encoding,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text stream and optionally adds an error.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="encoding">The file character encoding. If null, encoding will be detected using byte order mark.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.RemoveDiacritics(System.String)">
            <summary>
            Removes diacritics from a text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.RemoveCharactersFromUnicodeCategories(System.String,System.Globalization.UnicodeCategory[])">
            <summary>
            Removes characters from specified Unicode categories from a text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="categories">The character categories.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Replace(System.String,System.String,System.String)">
            <summary>
            Replaces all occurrences of a specified string in this instance with another string using a case insensitive current culture string comparer.
            </summary>
            <param name="original">The original string. If null, null will be returned.</param>
            <param name="pattern">The pattern to search for. If null, the original string will be returned.</param>
            <param name="replacement">The replacement string. May be null.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Replace(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Replaces all occurrences of a specified string in this instance with another string.
            </summary>
            <param name="original">The original string. If null, null will be returned.</param>
            <param name="pattern">The pattern to search for. If null, the original string will be returned.</param>
            <param name="replacement">The replacement string. May be null.</param>
            <param name="comparisonType">Type of the comparison.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Concatenate(System.String[],System.String)">
            <summary>
            Concatenates a collection of string using a separator string.
            </summary>
            <param name="texts">The collection of strings to concatenate. If null, null will be returned.</param>
            <param name="separator">The separator string to use. May be null.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToList``1(System.String,System.Char[])">
            <summary>
            Splits a text into a collection of typed objects.
            Returned objects are automatically converted into the proper type if needed.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to split. If null, an empty list will be returned.</param>
            <param name="separators">The separator characters to use.</param>
            <returns>A collection of objects of the T type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToDistinctDictionary(System.String,System.Char[])">
            <summary>
            Splits a text into a collection of unique string tokens.
            Comparison is case insensitive.
            </summary>
            <param name="text">The text to split. If null, an empty collection will be returned.</param>
            <param name="separator">The separator.</param>
            <returns>A collection of string tokens.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToDistinctDictionary(System.String,System.StringComparer,System.Char[])">
            <summary>
            Splits a text into a collection of unique string tokens.
            Comparison is case insensitive.
            </summary>
            <param name="text">The text to split. If null, an empty collection will be returned.</param>
            <param name="comparer">The string comparer to use. If null, a case insensitive comparer will be used.</param>
            <param name="separator">The separator.</param>
            <returns>A collection of string tokens.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToDistinctDictionary``1(System.String,System.Collections.Generic.IEqualityComparer{``0},System.Char[])">
            <summary>
            Splits a text into a collection of typed objects.
            Returned objects are automatically converted into the proper type if needed.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to split. If null, an empty collection will be returned.</param>
            <param name="equalityComparer">The equality comparer to use.</param>
            <param name="separator">The separator character to use.</param>
            <returns>A collection of objects of the T type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToList(System.String,System.Char)">
            <summary>
            Splits a text into a collection of strings.
            </summary>
            <param name="text">The text to split. If null, an empty list will be returned.</param>
            <param name="separator">The separator character to use.</param>
            <returns>A collection of strings.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToDictionary(System.String,System.Char,System.Boolean)">
            <summary>
            Splits a text into a collection of <see cref="T:System.Collections.DictionaryEntry"/>.
            </summary>
            <param name="text">The text to split. If null, an empty dictionary will be returned.</param>
            <param name="separator">The separator character to use.</param>
            <param name="caseInsensitive">if set to <c>true</c> the returned dictionary will use case insensitive key comparison.</param>
            <returns>A dictionary instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToTable(System.String,System.Char,System.Boolean)">
            <summary>
            Splits a text into a collection of <see cref="T:System.Collections.DictionaryEntry"/>.
            </summary>
            <param name="text">The text to split. If null, an empty dictionary will be returned.</param>
            <param name="separator">The separator character to use.</param>
            <param name="caseInsensitive">if set to <c>true</c> the returned dictionary will use case insensitive key comparison.</param>
            <returns>A dictionary instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitEnumNames(System.Object)">
            <summary>
            Splits a flags enum combination into its values.
            </summary>
            <param name="value">The enum value.</param>
            <returns>A list of enum values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitEnumValues``1(``0)">
            <summary>
            Splits a flags enum combination into its values.
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <param name="value">The enum value.</param>
            <returns>A list of enum values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitEnumValues(System.Object)">
            <summary>
            Splits a flags enum combination into its values.
            </summary>
            <param name="value">The enum value.</param>
            <returns>A list of enum values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetCommandLineArgument(System.String,System.String)">
            <summary>
            Gets a named command line argument.
            A named command line argument can be specified by '/name:value' or '-name:value'
            </summary>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found.</param>
            <returns>The value of the named argument.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExpandEnvironmentVariables(System.String)">
            <summary>
            Expands the environment variable. The format can be '%variable%' for an environment variable,
            '%=index%' for command line argument at the specified index,
            '%=name%' for a named command line argument,
            '%#expression%' for a data binding expression, or
            '%!expression%' for an XPath expression if the container argument implements IXPathNavigable.
            </summary>
            <param name="value">The variable to expand. If null, null will be returned.</param>
            <returns>The expanded variable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExpandEnvironmentVariables(System.String,System.Object)">
            <summary>
            Expands the environment variable. The format can be '%variable%' for an environment variable,
            '%=index%' for command line argument at the specified index,
            '%=name%' for a named command line argument,
            '%#expression%' for a data binding expression, or
            '%!expression%' for an XPath expression if the container argument implements IXPathNavigable.
            </summary>
            <param name="value">The variable to expand. If null, null will be returned.</param>
            <param name="container">The container object to evaluate data binding expressions. May be null.</param>
            <returns>The expanded variable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExpandEnvironmentVariables(System.Char,System.String,System.Object)">
            <summary>
            Expands the environment variable. The format can be '%variable%' for an environment variable,
            '%=index%' for command line argument at the specified index,
            '%=name%' for a named command line argument,
            '%#expression%' for a data binding expression, or
            '%!expression%' for an XPath expression if the container argument implements IXPathNavigable.
            </summary>
            <param name="separator">The separator character if not %.</param>
            <param name="value">The variable to expand. If null, null will be returned.</param>
            <param name="container">The container object to evaluate data binding expressions. May be null.</param>
            <returns>The expanded variable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexa(System.Byte[])">
            <summary>
            Converts a byte array to its hexadecimal string representation.
            </summary>
            <param name="bytes">The input byte array. If null, an empty string will be returned.</param>
            <returns>The string representation of the byte array.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexa(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a byte array to its hexadecimal string representation.
            </summary>
            <param name="bytes">The input byte array. If null, an empty string will be returned.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin dumping bytes.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <returns>
            The string representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.String)">
            <summary>
            Converts a string to its hexadecimal dump representation.
            </summary>
            <param name="text">The input string. If null, an empty string will be returned.</param>
            <returns>
            The hexadecimal dump representation of the string.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.String,System.Text.Encoding)">
            <summary>
            Converts a string to its hexadecimal dump representation.
            </summary>
            <param name="text">The input string. If null, an empty string will be returned.</param>
            <param name="encoding">The encoding to use. May be null.</param>
            <returns>
            The hexadecimal dump representation of the string.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[])">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. If null, an empty string will be returned.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[],System.String)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. If null, an empty string will be returned.</param>
            <param name="prefix">The prefix to use. It consists generally of tabs or space characters. May be null.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.IntPtr,System.Int32)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="ptr">The input byte array. May not be null.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.IntPtr,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="ptr">The input byte array. May not be null.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin dumping bytes.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <param name="prefix">The prefix to use. It consists generally of tabs or space characters. May be null.</param>
            <param name="addHeader">if set to <c>true</c> a header is displayed.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[],System.Int32)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin dumping bytes.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[],System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin dumping bytes.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <param name="prefix">The prefix to use. It consists generally of tabs or space characters. May be null.</param>
            <param name="addHeader">if set to <c>true</c> a header is displayed.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBytesFromArray(System.String,System.Char[])">
            <summary>
            Converts a string representation of a byte array to a byte array.
            Invalid characters are just skipped, without throwing any exception.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separators">A list of possible separators. Mut contain at least one element.</param>
            <returns>The converted byte array. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBytesFromArray(System.String,System.Boolean,System.Char[])">
            <summary>
            Converts a string representation of a byte array to a byte array.
            Invalid characters are just skipped, without throwing any exception.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be throw if the input text is invalid.</param>
            <param name="separators">A list of possible separators. Mut contain at least one element.</param>
            <returns>The converted byte array. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBytesFromHexa(System.String)">
            <summary>
            Converts an hexadecimal string representation to a byte array.
            Invalid characters are just skipped, without throwing any exception.
            This function also supports <see cref="T:System.Guid"/> string representation.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>The converted byte array. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetHexaByte(System.Char)">
            <summary>
            Gets the hexadecimal byte for the specified character.
            </summary>
            <param name="c">The input character.</param>
            <returns>The corresponding hexadecimal byte.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetValidIdentifier(System.String)">
            <summary>
            Gets a valid C# identifier from any given input text.
            </summary>
            <param name="text">The input text. May not be null nor empty.</param>
            <returns>A string representing a valid identifier.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidNamespaceIdentifier(System.String)">
            <summary>
            Determines whether the specified identifier is a valid namespace.
            </summary>
            <param name="identifier">The input identifier. Null is always invalid.</param>
            <returns>
            	<c>true</c> if the specified identifier is a valid namespace; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidIdentifier(System.String)">
            <summary>
            Determines whether the specified identifier is valid.
            </summary>
            <param name="identifier">The input identifier. Null is always invalid.</param>
            <returns>
            	<c>true</c> if the specified identifier is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidIdentifierStart(System.Char)">
            <summary>
            Determines whether the specified character is a valid identifier start.
            Valids unicode categories are Lu, Ll, Lt, Lm, Lo, Nl
            </summary>
            <param name="character">The input character.</param>
            <returns>
            	<c>true</c> if the specified character is a valid identifier start; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidIdentifierPart(System.Char)">
            <summary>
            Determines whether the specified character is a valid identifier part.
            Valids unicode categories are Lu, Ll, Lt, Lm, Lo, Nl, Mn, Mc, Nd, Pc, Cf
            </summary>
            <param name="character">The character.</param>
            <returns>
            	<c>true</c> if the specified character is a valid identifier part; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetValidXmlName(System.String)">
            <summary>
            Gets a valid Xml name from any given input text.
            </summary>
            <param name="text">The input text. May not be null nor empty.</param>
            <returns>
            A string representing a valid identifier.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FromBase64(System.String)">
            <summary>
            Converts a base 64 formatted string into a string.
            Assumes the intermediary byte array is encoded using UTF-8.
            If the conversion fails, a default value is returned.
            </summary>
            <param name="s">The input string. If null, the default value is returned.</param>
            <returns>A converted string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FromBase64(System.String,System.String)">
            <summary>
            Converts a base 64 formatted string into a string.
            Assumes the intermediary byte array is encoded using UTF-8.
            If the conversion fails, a default value is returned.
            </summary>
            <param name="s">The input string. If null, the default value is returned.</param>
            <param name="defaultValue">The default value to return.</param>
            <returns>A converted string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBase64(System.String)">
            <summary>
            Converts a string into a base 64 formatted string.
            </summary>
            <param name="s">The input string. If null, null will be returned.</param>
            <returns>A converted string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHashtable(System.Collections.IDictionary)">
            <summary>
            Converts a dictionary to a hashtable.
            If the dictionary actually is a hashtable, it is just returned as is.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <returns>An Hashtable instance or null if the input dictionary is null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Copy(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Copies one dictionary entries to another.
            </summary>
            <param name="source">The source dictionary. May be null.</param>
            <param name="target">The target dictionary. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Copy(System.Collections.IDictionary,System.Collections.IDictionary,System.Boolean,System.Boolean)">
            <summary>
            Copies one dictionary entries to another.
            </summary>
            <param name="source">The source dictionary. May be null.</param>
            <param name="target">The target dictionary. May not be null.</param>
            <param name="overwrite">if set to <c>true</c> existing target entries are overwritten.</param>
            <param name="throwIfExists">if set to <c>true</c> an exception is thrown if at least one source entry already exists in the target.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.Type,System.Object)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.Type,System.Object,System.IFormatProvider)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.Type,System.Object,System.IFormatProvider,System.String)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="format">The format to use. May be null.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.String,System.String)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="format">The format to use. May be null.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.String,System.IFormatProvider,System.String)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="format">The format to use. May be null.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.Object)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FormatFileSize(System.Int64)">
            <summary>
            Converts a numeric value into a string that represents the number expressed as a size value in bytes, kilobytes, megabytes, gigabytes, terabytes, petabytes or exabytes, depending on the size
            </summary>
            <param name="size">The size.</param>
            <returns>
            The number converted.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FormatFileSize(System.Int64,System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts a numeric value into a string that represents the number expressed as a size value in bytes, kilobytes, megabytes, gigabytes, terabytes, petabytes or exabytes, depending on the size
            </summary>
            <param name="size">The size.</param>
            <param name="byteName">The string used for the byte name. If null is passed, "B" will be used.</param>
            <param name="numberFormat">The number format. If null is passed, "N2" will be used.</param>
            <param name="formatProvider">The format provider. May be null to use current culture.</param>
            <returns>The number converted.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToFilePath(System.String)">
            <summary>
            Converts a text into a valid file path.
            This function is obsolete, please use IOUtilities.PathToValidFilePath.
            </summary>
            <param name="text">The input text. May not be null nor empty.</param>
            <returns>A valid file path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToFileName(System.String)">
            <summary>
            Converts a text into a valid file name.
            This function is obsolete, please use IOUtilities.PathToValidFileName.
            </summary>
            <param name="text">The input text. May not be null nor empty.</param>
            <returns>A valid file name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidFileName(System.String)">
            <summary>
            Determines whether the specified text represents a valid file name.
            This function is obsolete, please use IOUtilities.PathIsValidFileName.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <returns>
            	<c>true</c> if the specified text represents a valid file name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.StartsWith(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Determines whether the beginning of an instance of System.String matches a specified string.
            </summary>
            <param name="text">The input string. May not be null.</param>
            <param name="value">The string to compare.</param>
            <param name="startIndex">The start index.</param>
            <param name="caseInsensitive">if set to <c>true</c> case is ignored when comparing strings.</param>
            <returns><c>true</c> if the value parameter matches the beginning of this string; otherwise, <c>false</c></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetType(System.String)">
            <summary>
            Gets a CLR type from a full type name.
            This function supports CodeFluent type aliases.
            </summary>
            <param name="fullTypeName">The full type name. May not be null.</param>
            <returns>A CLR type instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsExternalTypeName(System.String)">
            <summary>
            Determines whether the given type name specifies an external type name.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
            <param name="typeName">The type name. If null, false will be returned.</param>
            <returns>
            	<c>true</c> if the specified type name specifies an external type name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.String)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="fullTypeName">The target full type name. May not be null.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.String,System.IFormatProvider,System.Object@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <param name="obj">The input object. May be null.</param>
            <param name="fullTypeName">The target type full name.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.String,System.IFormatProvider)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="fullTypeName">The target full type name. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.String,System.Object)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="fullTypeName">The target full type name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.String,System.Object,System.IFormatProvider)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="fullTypeName">The target full type name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>An object of the target type whose value is equivalent to input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToType(System.Data.DbType)">
            <summary>
            Converts a DbType into a CLR type.
            </summary>
            <param name="dbType">The input DbType.</param>
            <returns>An instance of the Type class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Data.DbType)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="dbType">The target data type.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Data.DbType,System.Object)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="dbType">The target data type.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Type,System.Object)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType``1(System.Object)">
            <summary>
            Returns an instance of type T whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of type T will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="value">The input object. May be null.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType``1(System.Object,System.IFormatProvider)">
            <summary>
            Returns an instance of type T whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of type T will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="value">The input object. May be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType``1(System.Object,``0)">
            <summary>
            Returns an instance of type T whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="value">The input object. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType``1(System.Object,``0,System.IFormatProvider)">
            <summary>
            Returns an instance of type T whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="value">The input object. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Type,System.Object,System.IFormatProvider)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetMinValue(System.Type)">
            <summary>
            Gets the minimum value for a given type.
            </summary>
            <param name="conversionType">The target type. May not be null.</param>
            <returns>
            An object of the target type whose value represents the minimum value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetMaxValue(System.Type)">
            <summary>
            Gets the maximum value for a given type.
            </summary>
            <param name="conversionType">The target type. May not be null.</param>
            <returns>
            An object of the target type whose value represents the maximum value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Type)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Data.DbType,System.Object@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <param name="obj">The object to convert.</param>
            <param name="dbType">The target type.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Data.DbType,System.IFormatProvider,System.Object@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <param name="obj">The object to convert.</param>
            <param name="dbType">The target type.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType``1(System.Object,``0@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="obj">The object to convert.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType``1(System.Object,System.IFormatProvider,``0@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="obj">The object to convert.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Type,System.IFormatProvider,System.Object@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <param name="obj">The object to convert.</param>
            <param name="type">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse``1(System.String,``0@)">
            <summary>
            Converts the specified string representation of an object of the specified type to its typed equivalent using the TryParse method if it exists on the type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="s">A string to convert. May be null.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the string was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse``1(System.String,System.IFormatProvider,``0@)">
            <summary>
            Converts the specified string representation of an object of the specified type to its typed equivalent using the TryParse method if it exists on the type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="s">A string to convert. May be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the string was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse(System.String,System.Type,System.IFormatProvider,System.Object@)">
            <summary>
            Converts the specified string representation of an object of the specified type to its typed equivalent using the TryParse method if it exists on the type.
            </summary>
            <param name="s">A string to convert. May be null.</param>
            <param name="type">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the string was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse(System.String,System.Type,System.IFormatProvider,System.Object,System.Object@)">
            <summary>
            Converts the specified string representation of an object of the specified type to its typed equivalent using the TryParse method if it exists on the type.
            </summary>
            <param name="s">A string to convert. May be null.</param>
            <param name="type">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="styles">The styles to use. Depends on the target type.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the string was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStaticExpression(System.String)">
            <summary>
            Evaluates a static expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <returns>
            The result of the expression. May be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStaticExpression(System.String,System.String)">
            <summary>
            Evaluates a static expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="format">The input format. May be null.</param>
            <returns>
            The result of the expression. May be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStaticExpression(System.String,System.String,System.Boolean)">
            <summary>
            Evaluates a static expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="format">The input format. May be null.</param>
            <param name="ignoreCase">if set to <c>true</c> case is ignored when comparing strings.</param>
            <returns>
            The result of the expression. May be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStaticExpression(System.String,System.Boolean)">
            <summary>
            Evaluates a static expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="ignoreCase">if set to <c>true</c> case is ignored when comparing strings.</param>
            <returns>The result of the expression. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EvaluateTemplatedString(System.String,System.Object)">
            <summary>
            Evaluates a templated string, using reflection to parse and evaluate a data-binding expression against an object at run time.
            </summary>
            <param name="source">The source. If null, null will be returned.</param>
            <param name="container">The object reference against which the expression is evaluated.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EvaluateTemplatedString(System.String,System.Object,System.Char,System.Char,System.Boolean)">
            <summary>
            Evaluates a templated string, using reflection to parse and evaluate a data-binding expression against an object at run time.
            </summary>
            <param name="source">The source. If null, null will be returned.</param>
            <param name="container">The object reference against which the expression is evaluated.</param>
            <param name="firstSeparator">The first separator.</param>
            <param name="secondSeparator">The second separator.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TruncateMilliseconds(System.DateTime)">
            <summary>
            Truncates the milliseconds from a given input date time value.
            </summary>
            <param name="dateTime">The input date time value.</param>
            <returns>An equivalent date time value without milliseconds.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TruncateTicks(System.DateTime)">
            <summary>
            Truncates the ticks from a given input date time value.
            </summary>
            <param name="dateTime">The input date time value.</param>
            <returns>An equivalent date time value without ticks.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsNullOrEmpty(System.String,System.Boolean)">
            <summary>
            Determines whether the specified string is null or empty.
            </summary>
            <param name="text">The input string.</param>
            <param name="trim">if set to <c>true</c> the string will be trimmed before being checked for emptyness.</param>
            <returns>
            	<c>true</c> if the specified string is null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Nullify(System.String,System.Boolean)">
            <summary>
            Nullifies the specified string.
            </summary>
            <param name="text">The input string.</param>
            <param name="trim">if set to <c>true</c> the string will be trimmed before being checked for emptyness.</param>
            <returns>Null if the string is null or empty; otherwise the original string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum``1(System.String)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <param name="value">The input value. May be null.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum``1(System.String,``0)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <param name="value">The input value. May be null.</param>
            <param name="defaultValue">The default value. May not be null.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumTryParse(System.Type,System.String,System.Object@)">
            <summary>
            Converts the string representation of an enum to its Enum equivalent value. A return value indicates whether the operation succeeded.
            This method does not rely on Enum.Parse and therefore will never raise any first or second chance exception.
            </summary>
            <param name="type">The enum target type. May not be null.</param>
            <param name="input">The input text. May be null.</param>
            <param name="value">When this method returns, contains Enum equivalent value to the enum contained in input, if the conversion succeeded.</param>
            <returns>
            true if s was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum(System.Object,System.Enum)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="obj">The input value. May be null.</param>
            <param name="defaultValue">The default value. May not be null.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum(System.String,System.Type)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, a computed default value of the target enum type will be returned.
            </summary>
            <param name="text">The input string.</param>
            <param name="enumType">The target enum type. May not be null.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum(System.String,System.Enum)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input string.</param>
            <param name="defaultValue">The value to use if an error occurs.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToArray``1(System.Array)">
            <summary>
            Transforms the input array into an array of the given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="array">The input array. May be null.</param>
            <returns>
            An array of the given type or null if null was passed.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToArray``1(System.Array,System.Boolean,System.Boolean)">
            <summary>
            Transforms the input array into an array of the given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="array">The input array. May be null.</param>
            <param name="convertItems">if set to <c>true</c> items are automatically converted into the target type</param>
            <param name="throwIfError">if set to <c>true</c> cast errors may be thrown. Errors can always be thrown if convertItem is set to false.</param>
            <returns>
            An array of the given type or null if null was passed.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Transforms the input collection into an array of the given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="enumerable">The input collection. May be null.</param>
            <returns>An array of the given type or null if null was passed.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToArray``1(System.Collections.IEnumerable)">
            <summary>
            Transforms the input collection into an array of the given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="enumerable">The input collection. May be null.</param>
            <returns>An array of the given type or null if null was passed.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToArray``1(System.Collections.IEnumerable,System.Boolean,System.Boolean)">
            <summary>
            Transforms the input collection into an array of the given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="enumerable">The input collection. May be null.</param>
            <param name="convertItems">if set to <c>true</c> items are automatically converted into the target type</param>
            <param name="throwIfError">if set to <c>true</c> cast errors may be thrown. Errors can always be thrown if convertItem is set to false.</param>
            <returns>
            An array of the given type or null if null was passed.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnumerable``1(System.Collections.IEnumerable)">
            <summary>
            Transforms the input collection into an enumeration of the given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="enumerable">The input collection. May be null.</param>
            <returns>
            An enumeration of the given type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsSame(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Determines whether the specified dictionaries contains the same values.
            </summary>
            <param name="dic1">The first dictionary.</param>
            <param name="dic2">The second dictionary.</param>
            <returns>
            true if dictionaries are the same.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsSame(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IEqualityComparer)">
            <summary>
            Determines whether the specified dictionaries contains the same values.
            </summary>
            <param name="dic1">The first dictionary.</param>
            <param name="dic2">The second dictionary.</param>
            <param name="comparer">The comparer to use for comparing entries.</param>
            <returns>true if dictionaries are the same.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsSame(System.Array,System.Array)">
            <summary>
            Determines whether the specified arrays size is the same and if values are equals.
            Supports only one dimensional arrays.
            </summary>
            <param name="array1">The first array.</param>
            <param name="array2">The second array.</param>
            <returns>
            	<c>true</c> if arrays size and values are the same; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Xml.XmlDocument@)">
            <summary>
            Converts a specified value to an XmlDocument.
            </summary>
            <param name="value">The input value.</param>
            <param name="document">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToXmlDocument(System.Object,System.Xml.XmlDocument)">
            <summary>
            Converts a specified value to an XmlDocument.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The XmlDocument equivalent to the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToChar(System.String,System.Char)">
            <summary>
            Converts a specified value to a Unicode character.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Unicode character equivalent to the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToString(System.Object,System.String)">
            <summary>
            Converts the specified value to its equivalent String representation.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="obj">The input value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The String equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToString(System.Object,System.String,System.Boolean)">
            <summary>
            Converts the specified value to its equivalent String representation.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="obj">The input value.</param>
            <param name="defaultValue">The default value.</param>
            <param name="trim">if set to <c>true</c> the output will be trimmed.</param>
            <returns>
            The String equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBoolean(System.Object,System.Boolean)">
            <summary>
            Converts the specified value to an equivalent Boolean value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="obj">The input value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The Boolean equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse(System.String,System.Boolean@)">
            <summary>
            Converts the specified string representation of a logical value to its System.Boolean
            equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">When this method returns, if the conversion succeeded, contains the converted value.</param>
            <returns>
            true if value was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBoolean(System.String,System.Boolean)">
            <summary>
            Converts the specified value to an equivalent Boolean value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The Boolean equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse(System.String,System.Guid@)">
            <summary>
            Converts the specified string representation of a logical value to its System.Guid
            equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">When this method returns, if the conversion succeeded, contains the converted value.</param>
            <returns>
            true if value was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToGuid(System.String)">
            <summary>
            Converts the specified value to an equivalent Guid value.
            If an error occurs, the value parameter will be returned.
            Special input values 'new', 'newid', 'newguid' will generate a new Guid.
            </summary>
            <param name="text">The input value.</param>
            <returns>The Guid equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToGuid(System.String,System.Guid)">
            <summary>
            Converts the specified value to an equivalent Guid value.
            If an error occurs, the value parameter will be returned.
            Special input values 'new', 'newid', 'newguid' will generate a new Guid.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Guid equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToTimeSpan(System.String,System.TimeSpan)">
            <summary>
            Converts the specified value to an equivalent TimeSpan value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The TimeSpan equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDateTime(System.String,System.DateTime)">
            <summary>
            Converts the specified value to an equivalent DateTime value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The DateTime equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDateTime(System.String,System.DateTime,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent DateTime value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            The DateTime equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDecimal(System.String,System.Decimal)">
            <summary>
            Converts the specified value to an equivalent Decimal value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The Decimal equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDecimal(System.String,System.Decimal,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Decimal value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            The Decimal equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDouble(System.String,System.Double)">
            <summary>
            Converts the specified value to an equivalent Double value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The Double equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDouble(System.String,System.Double,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Double value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            The Double equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToSingle(System.String,System.Single)">
            <summary>
            Converts the specified value to an equivalent Single value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The Single equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToSingle(System.String,System.Single,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Single value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            The Single equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt32(System.String,System.Int32)">
            <summary>
            Converts the specified value to an equivalent Int32 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Int32 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt32(System.String,System.Int32,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Int32 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The Int32 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt16(System.String,System.Int16)">
            <summary>
            Converts the specified value to an equivalent Int16 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Int16 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt16(System.String,System.Int16,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Int16 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The Int16 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt64(System.String,System.Int64)">
            <summary>
            Converts the specified value to an equivalent Int64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Int64 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt64(System.String,System.Int64,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Int64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The Int64 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt64(System.String,System.Enum)">
            <summary>
            Converts an enum value to an UInt64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value. May not be null.</param>
            <returns>
            The UInt64 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt64(System.String,System.UInt64)">
            <summary>
            Converts the specified value to an equivalent UInt64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The UInt64 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt64(System.String,System.UInt64,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent UInt64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The UInt64 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt32(System.String,System.UInt32)">
            <summary>
            Converts the specified value to an equivalent UInt32 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The UInt32 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt32(System.String,System.UInt32,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent UInt32 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The UInt32 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt16(System.String,System.UInt16)">
            <summary>
            Converts the specified value to an equivalent UInt16 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The UInt16 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt16(System.String,System.UInt16,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent UInt16 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The UInt16 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToByte(System.String,System.Byte)">
            <summary>
            Converts the specified value to an equivalent Byte value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Byte equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToByte(System.String,System.Byte,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Byte value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The Byte equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToSByte(System.String,System.SByte)">
            <summary>
            Converts the specified value to an equivalent SByte value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The SByte equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToSByte(System.String,System.SByte,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent SByte value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The SByte equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EscapeSingleQuotes(System.String)">
            <summary>
            Escapes the single quotes in a string.
            </summary>
            <param name="text">The text.</param>
            <returns>A string with single quotes double</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.UnescapeXml(System.String)">
            <summary>
            Unescapes an Xml text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>An unescaped Xml text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EscapeXml(System.String)">
            <summary>
            Escapes an Xml text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>An escaped Xml text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EscapeJavascript(System.String)">
            <summary>
            Converts the specified string to use the % character to escape reserved characters (@, *, _, +, -, ., /) and express them in Unicode notation.
            </summary>
            <param name="text">The input text.</param>
            <returns>An escaped string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.UnescapeJavascript(System.String)">
            <summary>
            Converts the specified javascript escaped string.
            </summary>
            <param name="text">The input text.</param>
            <returns>An unescaped string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeSplit(System.String)">
            <summary>
            Decamelizes and splits the input text using default decamelization options.
            </summary>
            <param name="text">The input text.</param>
            <returns>A list of strings.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeSplit(System.String,CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions)">
            <summary>
            Decamelizes and splits the input text.
            </summary>
            <param name="text">The input text.</param>
            <param name="options">The decamelization options.</param>
            <returns>A list of strings.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Decamelize(System.String)">
            <summary>
            Decamelizes the specified text using default decamelization options.
            </summary>
            <param name="text">The input text.</param>
            <returns>A decamelized text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Decamelize(System.String,CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions)">
            <summary>
            Decamelizes the specified text.
            </summary>
            <param name="text">The input text.</param>
            <param name="options">The decamelization options.</param>
            <returns>A decamelized text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ComputeGuidHash(System.String)">
            <summary>
            Computes a 128bits hash from a text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <returns>A System.Guid representing the hash.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetDefaultEqualityComparer(System.Type)">
            <summary>
            Gets the default equality comparer for the given type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <returns>An instance of the default equality comparer.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStringComparer(System.StringComparison)">
            <summary>
            Gets the string comparer for a given string comparison.
            </summary>
            <param name="comparison">The comparison to use.</param>
            <returns>An instance of a StringComparer.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetDefaultEqualityComparer(System.Type,System.StringComparison)">
            <summary>
            Gets the default equality comparer for the given type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="comparison">The string comparison to use if a string comparer is implicitely chosen.</param>
            <returns>
            An instance of the default equality comparer.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetEnumMaxPower(System.Type)">
            <summary>
            Gets the maximum bitness for an enum type.
            </summary>
            <param name="enumType">The input enum type. May not be null.</param>
            <returns>8, 16, 32, or 64 depending on the enum underlying type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetEnumUnderlyingTypeMaxPower(System.Type)">
            <summary>
            Gets the maximum bitness for an enum underlying type.
            </summary>
            <param name="underlyingType">The input enum underlying type. May not be null.</param>
            <returns>8, 16, 32, or 64 depending on the input type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsFlagsEnum(System.Type)">
            <summary>
            Determines whether the specified enum type has the Flags attribute.
            </summary>
            <param name="enumType">The type to check. May not be null.</param>
            <returns>
            	<c>true</c> if the specified enum type has the Flags attribute; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumToUInt64(System.String,System.Type)">
            <summary>
            Converts an enum value to an UInt64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="enumType">The enum type. May not be null.</param>
            <returns>
            The UInt64 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumToUInt64(System.Object)">
            <summary>
            Converts an enum value to an UInt64 value.
            </summary>
            <param name="value">The enum value. May not be null.</param>
            <returns>The UInt64 value equivalent to the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetNullableArgument(System.Type)">
            <summary>
            Determines whether the specified type is nullable, and returns the argument type.
            </summary>
            <param name="type">The input type. May not be null</param>
            <returns>
            	<c>The argument type or null.</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsNullable(System.Type)">
            <summary>
            Determines whether the specified type is nullable.
            </summary>
            <param name="type">The input type. May not be null</param>
            <returns>
            	<c>true</c> if the specified type is nullable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumEnumerateValues``1">
            <summary>
            Enumerates an enumeration type values.
            </summary>
            <typeparam name="T">The enumeration type.</typeparam>
            <returns>A collection of enumeration values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumToObject(System.Type,System.Object)">
            <summary>
            Returns an instance of the specified enumeration type set to the underlying type.
            </summary>
            <param name="enumType">The Enum type. May not be null.</param>
            <param name="value">The enum value. May not be null.</param>
            <returns>
            An instance of the enumeration set to value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum(System.String,System.Type,CodeFluent.Runtime.Utilities.NameValueCollectionCollection)">
            <summary>
            Returns an anum value with a specified type and whose value is equivalent to a specified input value.
            </summary>
            <param name="text">The input value.</param>
            <param name="enumType">The target enum type. May not be null.</param>
            <param name="mappings">A list of mapping keys/pairs.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FormatEnum(System.Object,CodeFluent.Runtime.Utilities.NameValueCollectionCollection)">
            <summary>
            Formats an enum value using a list of mappings key/pairs.
            </summary>
            <param name="value">The input enum value. May not be null.</param>
            <param name="mappings">A list of mapping values comma-separated. May be null or empty.</param>
            <returns>
            A formatted string representing the enum value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FormatEnum(System.Object,System.String,System.String)">
            <summary>
            Formats an enum value using a list of mappings key/pairs.
            </summary>
            <param name="value">The input enum value. May not be null.</param>
            <param name="mappings">A list of mapping values comma-separated. May be null or empty.</param>
            <param name="separator">The separator string to use.</param>
            <returns>
            A formatted string representing the enum value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FormatEnum(System.Object,CodeFluent.Runtime.Utilities.NameValueCollectionCollection,System.String)">
            <summary>
            Formats an enum value using a list of mappings key/pairs.
            </summary>
            <param name="value">The input enum value. May not be null.</param>
            <param name="mappings">A list of mapping values. May be null or empty.</param>
            <param name="separator">The separator string to use.</param>
            <returns>A formatted string representing the enum value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FromImageFormat(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Converts an image format to the corresponding file extension.
            </summary>
            <param name="imageFormat">The image format.</param>
            <returns>A file extension.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FromFileExtension(System.String)">
            <summary>
            Converts a file extension to the corresponding image format.
            </summary>
            <param name="extension">The extension. If null, Jpeg will be returned.</param>
            <returns>An image format instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EndsWithNewLine(System.String)">
            <summary>
            Determines if a string ends with a CR or LF or CRLF character(s).
            </summary>
            <param name="text">The text to test. If null or empty, <c>false</c> will be returned.</param>
            <returns><c>true</c> if the strings ends with a CR or LF or CRLF character(s); otherwise, <c>false</c></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.UrlFromNamespace(System.String)">
            <summary>
            Builds an url from a namespace.
            </summary>
            <param name="ns">The input namespace. May not be null.</param>
            <returns>The built url.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.UrlFromNamespace(System.String,System.String,System.String)">
            <summary>
            Builds an url from a namespace.
            </summary>
            <param name="ns">The input namespace. May not be null.</param>
            <param name="domainPrefix">The domain prefix. May be null. If null, 'schemas.' will be used.</param>
            <param name="domainPostfix">The domain postfix. May be null. If null, '.com' will be used.</param>
            <returns>The built url.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Camel(System.String)">
            <summary>
            Camelizes the specified name.
            </summary>
            <param name="name">The input name. If null, null will be returned.</param>
            <returns>The camelized name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Uncamel(System.String)">
            <summary>
            Uncamelizes the specified name.
            </summary>
            <param name="name">The input name. If null, null will be returned.</param>
            <returns>The uncamelized name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.PrivateMemberCamel(System.String)">
            <summary>
            Camelizes and prefixes the specified name.
            </summary>
            <param name="name">The input name. If null, null will be returned.</param>
            <returns>The camelized and prefixed name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToCultureInfo(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified text to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If null or empty is passed, the current culture will be returned.
            </summary>
            <param name="culture">The input text.</param>
            <param name="defaultCulture">The default culture to return if an error occurs.</param>
            <returns>A CultureInfo instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToCultureInfo(System.String)">
            <summary>
            Converts the specified text to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If null or empty is passed, the current culture will be returned.
            </summary>
            <param name="culture">The input text.</param>
            <returns>A CultureInfo instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Globalization.CultureInfo@)">
            <summary>
            Converts the specified object to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If null or empty is passed, the current culture will be returned.
            </summary>
            <param name="value">The input value.</param>
            <param name="culture">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Boolean,System.Globalization.CultureInfo@)">
            <summary>
            Converts the specified object to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If null or empty is passed, the current culture will be returned.
            </summary>
            <param name="value">The input value.</param>
            <param name="useUserOverride">A Boolean that denotes whether to use the user-selected culture settings (true) or the default culture settings (false). Not supported on Silverlight</param>
            <param name="culture">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Version@)">
            <summary>
            Converts the specified object to an equivalent Version instance.
            The object can be a version string, or an array of integers.
            </summary>
            <param name="value">The input value.</param>
            <param name="version">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Text.Encoding@)">
            <summary>
            Converts the specified object to an equivalent Encoding instance.
            The value can be an encoding name of the string representation of a code page number.
            Not supported on Silverlight.
            </summary>
            <param name="value">The input value.</param>
            <param name="encoding">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToCultureInfo(System.String,System.Boolean)">
            <summary>
            Converts the specified text to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If empty is passed, the invariant culture will be returned.
            If null is passed, the current culture will be returned.
            </summary>
            <param name="culture">The input text.</param>
            <param name="useUserOverride">A Boolean that denotes whether to use the user-selected culture settings (true) or the default culture settings (false).</param>
            <returns>A CultureInfo instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToCultureInfo(System.String,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified text to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If empty is passed, the invariant culture will be returned.
            If null is passed, the current culture will be returned.
            </summary>
            <param name="culture">The input text.</param>
            <param name="useUserOverride">A Boolean that denotes whether to use the user-selected culture settings (true) or the default culture settings (false).</param>
            <param name="defaultCulture">The default culture to return if an error occurs.</param>
            <returns>A CultureInfo instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SetCurrentThreadCulture(System.String)">
            <summary>
            Sets the current thread culture.
            Handles neutral or non neutral cultures.
            Handles integer values passed as a string.
            </summary>
            <param name="name">The name of the culture.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SetCurrentThreadCulture(System.String,System.Boolean)">
            <summary>
            Sets the current thread culture.
            Handles neutral or non neutral cultures.
            Handles integer values passed as a string.
            </summary>
            <param name="name">The name of the culture.</param>
            <param name="throwOnError">if set to <c>true</c>, throws error if the culture name is invalid.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SetCurrentThreadCulture(System.Int32)">
            <summary>
            Sets the current thread culture.
            Handles neutral or non neutral cultures.
            </summary>
            <param name="lcid">The locale.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SetCurrentThreadCulture(System.Int32,System.Boolean)">
            <summary>
            Sets the current thread culture.
            Handles neutral or non neutral cultures.
            </summary>
            <param name="lcid">The locale.</param>
            <param name="throwOnError">if set to <c>true</c>, throws error if the culture lcid is invalid.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Format(System.IFormatProvider,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Formats the specified text.
            </summary>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="text">The input text.</param>
            <param name="replacements">The replacement strings for the corresponding arguments.</param>
            <returns>A formatted text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Format(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Formats the specified text.
            </summary>
            <param name="text">The input text.</param>
            <param name="replacements">The replacement strings for the corresponding arguments.</param>
            <returns>A formatted text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Extract(System.String)">
            <summary>
            Extracts argument pairs from a given text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>An array of pair instance. The first property is the argument start, and the second property is the argument length.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Format(System.Object,System.String,System.IFormatProvider)">
            <summary>
            Formats the specified object.
            </summary>
            <param name="obj">The object. If null, null will be returned.</param>
            <param name="format">The format to use. May be null.</param>
            <param name="formatProvider">The format provider. May be null.</param>
            <returns>A string containing the value of the current instance in the specified format.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds an enumerable collection to another collection.
            </summary>
            <typeparam name="T">The type of items in both collections.</typeparam>
            <param name="collection">The collection to add items to. May not be null.</param>
            <param name="range">The collection containing the items to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.CopyTo``1(System.Collections.Generic.IEnumerable{``0},System.Array,System.Int32)">
            <summary>
            Copies an IEnumerable instance to a target array.
            </summary>
            <param name="enumerable">The enumerable instance. May not be null.</param>
            <param name="array">The target array. May not be null.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.CopyTo(System.Collections.IEnumerable,System.Array,System.Int32)">
            <summary>
            Copies an IEnumerable instance to a target array.
            </summary>
            <param name="enumerable">The enumerable instance. May not be null.</param>
            <param name="array">The target array. May not be null.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EvaluateCollection``1(System.Collections.ICollection,System.String,``0)">
            <summary>
            Evaluates the collection using DataBinder syntax.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection to evaluate. May be null.</param>
            <param name="propertyName">The property name. Follows DataBinder syntax. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>A collection of evaluated properties</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TruncateName(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Truncates a text to a maximum length and return a unique text from a list of existing texts.
            </summary>
            <param name="text">The text to truncate. May be null.</param>
            <param name="maxLength">Maximum length of the text.</param>
            <param name="names">The existing names. May be null.</param>
            <returns>A text possibly truncated. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetUniqueName(System.Collections.Generic.IEnumerable{System.String},System.String,System.StringComparison)">
            <summary>
            Get a name guaranteed not to be in a given a list of names.
            This method appends numbers to a preferred name.
            </summary>
            <param name="names">The list names. May be null.</param>
            <param name="preferredName">The preferred name. May not be null.</param>
            <param name="comparison">The comparison to use.</param>
            <returns>A unique name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumerateBits(System.IO.Stream,System.Int32)">
            <summary>
            Enumerates the bits [count] by [count] from an input stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="count">The count of bits.</param>
            <returns>
            A list of integers.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumerateBits(System.IO.Stream)">
            <summary>
            Enumerates the bits one by one from an input stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <returns>A list of 1 or 0 integers.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ConvertUtilities.FrameworkVersions">
            <summary>
            Gets the .NET Framework versions installed on this system.
            </summary>
            <value>An array of framework versions.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ConvertUtilities.LatestFrameworkVersion">
            <summary>
            Gets the latest .NET Framework version installed on this system.
            </summary>
            <value>The version of the latest .NET Framework detected.</value>
            <returns>The version of the latest .NET Framework detected.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ConvertUtilities.RegisteredOrganization">
            <summary>
            Gets the registered organization, the registry key value from HKLM\Software\Microsoft\Windows NT\CurrentVersion\RegisteredOrganization.
            </summary>
            <value>The registered organization.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions">
            <summary>
            Defines the options for decamelization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ForceFirstUpper">
            <summary>
            First character will be upper case.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ForceRestLower">
            <summary>
            Characters beyond the first will be lower case.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.UnescapeUnicode">
            <summary>
            Unescape unicode encoding (format is \u0000).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.UnescapeHexadecimal">
            <summary>
            Unescape hexadecimal encoding (format is \x0000).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ReplaceSpacesByUnderscore">
            <summary>
            Replaces spaces by underscore.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ReplaceSpacesByMinus">
            <summary>
            Replaces spaces by minus.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ReplaceSpacesByDot">
            <summary>
            Replaces spaces by dot.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.KeepFirstUnderscores">
            <summary>
            Keep first underscores sticked as is.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.DontDecamelizeNumbers">
            <summary>
            Numbers are not considered as separators.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.KeepFormattingIndices">
            <summary>
            Keep indices used by the String.Format method.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.Default">
            <summary>
            Defines the default options.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultValue`1">
            <summary>
            A utility class to check if a given value is the default value for the given type.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultValue`1.IsDefault(System.Object)">
            <summary>
            Determines whether the specified value is the default value for the given type.
            </summary>
            <param name="value">The input value. May be null.</param>
            <returns>
            	<c>true</c> if the specified value is the default value for the given type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultValue">
            <summary>
            A utility class to check if a given value is the default value for the given type.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultValue.IsDefault(System.Type,System.Object)">
            <summary>
            Determines whether the specified value is the default value for the given type.
            </summary>
            <param name="type">The expected value type. May not be null.</param>
            <param name="value">The input value. May be null.</param>
            <returns>
            	<c>true</c> if the specified value is the default value for the given type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CsvReader">
            <summary>
            Defines a CSV reader class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CsvReader"/> class.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CsvReader"/> class.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="allowCharacterAmbiguity">if set to <c>true</c> character ambiguity is allowed during parsing.</param>
            <param name="readHeader">if set to <c>true</c> the first row is a header that defines the columns.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CsvReader"/> class.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CsvReader"/> class.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="allowCharacterAmbiguity">if set to <c>true</c> character ambiguity is allowed during parsing.</param>
            <param name="readHeader">if set to <c>true</c> the first row is a header that defines the columns.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CsvReader"/> class.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.#ctor(System.IO.TextReader,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CsvReader"/> class.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="allowCharacterAmbiguity">if set to <c>true</c> character ambiguity is allowed during parsing.</param>
            <param name="readHeader">if set to <c>true</c> the first row is a header that defines the columns.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.ReadLine(System.String)">
            <summary>
            Read multiple cells from one stream or file line.
            </summary>
            <param name="line">The input line.</param>
            <returns>A list of cells.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.ReadLine(System.String,System.Char,System.Char)">
            <summary>
            Read multiple cells from one stream or file line.
            </summary>
            <param name="line">The input line.</param>
            <param name="quote">The quote character.</param>
            <param name="separator">The separator character.</param>
            <returns>
            A list of cells.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.Initialize(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Initializes this instance from a stream.
            </summary>
            <param name="stream">The stream. May not be null.</param>
            <param name="allowCharacterAmbiguity">if set to <c>true</c> character ambiguity is allowed during parsing.</param>
            <param name="readHeader">if set to <c>true</c> the first row is a header that defines the columns.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.InitializeReader(System.Boolean,System.Boolean)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="allowCharacterAmbiguity">if set to <c>true</c> character ambiguity is allowed during parsing.</param>
            <param name="readHeader">if set to <c>true</c> the first row is a header that defines the columns.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.ReadRow">
            <summary>
            Reads one row, represented by a list of cells. One row can span over multiple physical lines of text.
            The number of cells returned does not necessary matches the number of columns possibly found.
            </summary>
            <returns>A list of cells.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.ReadHeader">
            <summary>
            Reads the header.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.DetermineFormat(System.Boolean)">
            <summary>
            Determines the stream or file format.
            </summary>
            <param name="allowCharacterAmbiguity">if set to <c>true</c> character ambiguity is allowed during parsing.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CsvReader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CsvReader.IsReaderOwned">
            <summary>
            Gets or sets a value indicating whether this instance owns the underlying reader.
            </summary>
            <value>
            <c>true</c> if this instance owns the underlying reader; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CsvReader.Separator">
            <summary>
            Gets or sets the separator character.
            </summary>
            <value>
            The separator character.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CsvReader.Quote">
            <summary>
            Gets or sets the quote character.
            </summary>
            <value>
            The quote character.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CsvReader.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value>
            The current line number.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CsvReader.ColumnNumber">
            <summary>
            Gets the current column number.
            </summary>
            <value>
            The current column number.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CsvReader.RowNumber">
            <summary>
            Gets the current row number. Rows can span multiple lines.
            </summary>
            <value>
            The row number.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CsvReader.BaseReader">
            <summary>
            Gets the underlying base reader.
            </summary>
            <value>
            The base reader.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CsvReader.EndOfStream">
            <summary>
            Gets a value indicating whether end of stream has been reached.
            </summary>
            <value>
              <c>true</c> if end of stream has been read; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CsvReader.Columns">
            <summary>
            Gets the columns list.
            </summary>
            <value>
            The columns.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IInvoker">
            <summary>
            Defines a generic interface for generic composition.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IInvoker.Invoke(System.String,System.Reflection.BindingFlags,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Globalization.CultureInfo)">
            <summary>
            Invokes the specified member, using the specified binding constraints and matching the specified argument list.
            </summary>
            <param name="name">The method name.</param>
            <param name="flags">The binding flags.</param>
            <param name="target">The target object. May be null.</param>
            <param name="arguments">The arguments. May be null.</param>
            <param name="culture">The culture. May be null.</param>
            <returns>An object representing the return value of the invoked member.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IXmlXPathNode">
            <summary>
            Defines an XML node that can have an XPATH expression.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IXmlXPathNode.XPathExpression">
            <summary>
            Gets the XPath expression for this instance.
            </summary>
            <value>
            The XPath information.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IXmlXPathNode.ParentNode">
            <summary>
            Gets the parent node.
            </summary>
            <value>
            The parent node.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IXmlXPathNode.OwnerDocument">
            <summary>
            Gets the owner document.
            </summary>
            <value>
            The owner document.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongDirectoryInfo">
            <summary>
            Defines an equivalent of DirectoryInfo that supports long paths.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongFileSystemInfo">
            <summary>
            Defines an equivalent of FileSystemInfo that supports long paths.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongFileSystemInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LongFileSystemInfo"/> class.
            </summary>
            <param name="path">The input path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongFileSystemInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongFileSystemInfo.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongFileSystemInfo.Refresh">
            <summary>
            Refreshes this instance data.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.FullName">
            <summary>
            Gets the full name.
            </summary>
            <value>
            The full name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.Extension">
            <summary>
            Gets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CodeFluent.Runtime.Utilities.LongFileSystemInfo"/> is exists.
            </summary>
            <value>
              <c>true</c> if exists; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.LastWriteTimeUtc">
            <summary>
            Gets the last write time in UTC.
            </summary>
            <value>
            The last write time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.CreationTimeUtc">
            <summary>
            Gets the creation time in UTC.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.LastAccessTimeUtc">
            <summary>
            Gets the last acces time in UTC.
            </summary>
            <value>
            The last acces time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.LastWriteTime">
            <summary>
            Gets the last write time.
            </summary>
            <value>
            The last write time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.CreationTime">
            <summary>
            Gets the creation time.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.LastAccessTime">
            <summary>
            Gets the last acces time.
            </summary>
            <value>
            The last acces time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.RootName">
            <summary>
            Gets the root directory name.
            </summary>
            <value>
            The root name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.Root">
            <summary>
            Gets the root directory or null.
            </summary>
            <value>
            The root.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.DirectoryName">
            <summary>
            Gets the parent directory full path.
            </summary>
            <value>
            The full path of the directory.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileSystemInfo.Directory">
            <summary>
            Gets the parent directory.
            </summary>
            <value>
            The parent directoryor null.
            </value>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongDirectoryInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LongDirectoryInfo"/> class.
            </summary>
            <param name="path">The input path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongDirectoryInfo.Create">
            <summary>
            Creates this directory.
            </summary>
            <returns>
            true if something was done; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongDirectoryInfo.Create(System.Boolean,System.Boolean)">
            <summary>
            Creates this directory.
            </summary>
            <param name="recursive">if set to <c>true</c> the whole path will be created included parent directories if needed.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if something was done; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongDirectoryInfo.Delete(System.Boolean,System.Boolean)">
            <summary>
            Deletes this directory.
            </summary>
            <param name="recursive">if set to <c>true</c> the whole path will be created included parent directories if needed.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if something was done; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongDirectoryInfo.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongFileInfo">
            <summary>
            Defines an equivalent of FileInfo that supports long paths.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongFileInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LongFileInfo"/> class.
            </summary>
            <param name="path">The input path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongFileInfo.IsNewer(CodeFluent.Runtime.Utilities.Win32FindData)">
            <summary>
            Determines whether the specified data is newer, independently from the path.
            </summary>
            <param name="data">The data.</param>
            <returns>true if the file is newer.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongFileInfo.IsIdentical(CodeFluent.Runtime.Utilities.Win32FindData)">
            <summary>
            Determines whether the specified data represents the same file, independently from the path.
            </summary>
            <param name="data">The data.</param>
            <returns>true if the data is the same.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongFileInfo.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LongFileInfo.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongPath">
            <summary>
            Utility to handle file paths longer than 256 characters.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.Prefix">
            <summary>
            The long path prefix.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.UncPrefix">
            <summary>
            The long path UNC prefix.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.InvalidPathDateTime">
            <summary>
            The date time that represent a non existent or invalid file or directory path.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.AltDirectorySeparatorChar">
            <summary>
            Provides a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.DirectorySeparatorChar">
            <summary>
            Provides a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.VolumeSeparatorChar">
            <summary>
            Provides a platform-specific volume separator character.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.EnumerateFileSystemEntries(System.String)">
            <summary>
            Enumerates recursively all the file system entries in a directory. This method does not throw exceptions on locked files or other errors.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <returns>
            A list of find data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.EnumerateFileSystemEntries(System.String,CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions,System.Boolean)">
            <summary>
            Enumerates all the file system entries in a directory. This method does not throw exceptions on locked files or other errors.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="options">Options to use.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>A list of find data.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.EnumerateFileSystemEntries(System.String,System.EventHandler{CodeFluent.Runtime.Utilities.Win32FindDataEventArgs})">
            <summary>
            Enumerates recursively all the file system entries in a directory. This method does not throw exceptions on locked files or other errors.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="foundFunction">A function that will be called for each enumerated entry. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.EnumerateFileSystemEntries(System.String,CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions,System.EventHandler{CodeFluent.Runtime.Utilities.Win32FindDataEventArgs})">
            <summary>
            Enumerates all the file system entries in a directory. This method does not throw exceptions on locked files or other errors.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="options">Options to use.</param>
            <param name="foundFunction">A function that will be called for each enumerated entry. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Normalize(System.String)">
            <summary>
            Normalizes a path for long file requests and expand environment variables.
            </summary>
            <param name="path">The input path.</param>
            <returns>
            The normalized path.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Normalize(System.String,System.Boolean)">
            <summary>
            Normalizes a path for long file requests.
            </summary>
            <param name="path">The input path.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables will be expanded.</param>
            <returns>
            The normalized path.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetCurrentDirectory">
            <summary>
            Gets the full path of the current directory
            </summary>
            <returns>The current directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetFullPath(System.String)">
            <summary>
            Gets the full path of a file or directory.
            </summary>
            <param name="path">The input path.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetLastAccessTimeUtc(System.String)">
            <summary>
            Gets the last write time of a file or directory in UTC.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetLastAccessTimeUtc(System.String,System.Boolean)">
            <summary>
            Gets the last write time of a file or directory in UTC.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetLastAccessTime(System.String)">
            <summary>
            Gets the last write time of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetLastAccessTime(System.String,System.Boolean)">
            <summary>
            Gets the last write time of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetCreationTimeUtc(System.String)">
            <summary>
            Gets the creation time of a file or directory in UTC.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetCreationTimeUtc(System.String,System.Boolean)">
            <summary>
            Gets the creation time of a file or directory in UTC.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetCreationTime(System.String)">
            <summary>
            Gets the creation time of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetCreationTime(System.String,System.Boolean)">
            <summary>
            Gets the creation time of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetLastWriteTimeUtc(System.String)">
            <summary>
            Gets the last write time of a file or directory in UTC.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetLastWriteTimeUtc(System.String,System.Boolean)">
            <summary>
            Gets the last write time of a file or directory in UTC.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetLastWriteTime(System.String)">
            <summary>
            Gets the last write time of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetLastWriteTime(System.String,System.Boolean)">
            <summary>
            Gets the last write time of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The time or DateTime.MinValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Combine(System.String[])">
            <summary>
            Combines an array of strings into a path.
            </summary>
            <param name="paths">The input paths.</param>
            <returns>The combined paths.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsRooted(System.String)">
            <summary>
            Gets a value indicating whether the specified path contains a root.
            </summary>
            <param name="path">The input path.</param>
            <returns>true if the path contains a root; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetServerPath(System.String)">
            <summary>
            Gets a server path if any.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>A server path in the form \\server\share or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetServerPath(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Gets a server path if any.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="serverName">The server name. May be null.</param>
            <param name="shareName">The share name. May be null.</param>
            <param name="sharePath">The share path. May be null.</param>
            <returns>
            A server path in the form \\server\share or \\server or null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsRooted(System.String,System.String@,System.Boolean@)">
            <summary>
            Gets a value indicating whether the specified path contains a root.
            </summary>
            <param name="path">The input path.</param>
            <param name="name">The root name. May be null.</param>
            <param name="isVolumeRelative">if set to <c>true</c> the path is relative to the volume.</param>
            <returns>
            true if the path contains a root; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.HasExtension(System.String,System.String)">
            <summary>
            Determines whether the specified path has a specific extension, compared ignoring case.
            </summary>
            <param name="path">The input path.</param>
            <param name="extension">The extension.</param>
            <returns>true if the path has the specified extension.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.ChangeExtension(System.String,System.String)">
            <summary>
            Changes the extension of directory or file path.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="extension">The new extension. If null or empty, the extension will be removed.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetDirectoryName(System.String)">
            <summary>
            Gets the directory path of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The directory path or an empty string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetExtension(System.String)">
            <summary>
            Gets the extension of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The extension or an empty string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.EnsureTerminatingSeparator(System.String)">
            <summary>
            Ensure the path has a terminating separator.
            </summary>
            <param name="path">The intput path. May be null.</param>
            <returns>The input path with terminating separators.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.StripTerminatingSeparators(System.String)">
            <summary>
            Strips the terminating directory separators.
            </summary>
            <param name="path">The intput path. May be null.</param>
            <returns>The input path without terminating separators.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetNameWithoutExtension(System.String)">
            <summary>
            Gets the name of a file or directory without its extension (if any).
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The file or directory name without its extension.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetTempPath">
            <summary>
            Returns the path of the current system's temporary folder.
            </summary>
            <returns>
            A string containing the path information of a temporary directory.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetTempFileName">
            <summary>
            Creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file.
            </summary>
            <returns>
            A string containing the full path of the temporary file.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetTempFileName(System.String)">
            <summary>
            Creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file.
            </summary>
            <param name="extension">The file extension. Pass null if you don't want to change it.</param>
            <returns>A string containing the full path of the temporary file.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetRootName(System.String)">
            <summary>
            Gets the root name of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The root name or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetName(System.String)">
            <summary>
            Gets the name of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>The file or directory name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileGetLength(System.String)">
            <summary>
            Gets the length of a file.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <returns>
            The size length in bytes.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileGetLength(System.String,System.Boolean)">
            <summary>
            Gets the length of a file.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The size length in bytes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileCreateDirectory(System.String)">
            <summary>
            Makes sure a directory exists for a given file path.
            </summary>
            <param name="filePath">The file path. Note this is not to be confused with the directory path. May not be null.</param>
            <returns>
            true if something was done; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileCreateDirectory(System.String,System.Boolean)">
            <summary>
            Makes sure a directory exists for a given file path.
            </summary>
            <param name="filePath">The file path. Note this is not to be confused with the directory path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>true if something was done; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileDetectEncoding(System.String,System.Text.Encoding)">
            <summary>
            Detects a file encoding.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="defaultEncodingIfNoBom">The default encoding if no bom was detected.</param>
            <returns>The detected encoding.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileDelete(System.String)">
            <summary>
            Deletes a file.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <returns>true if the file was deleted; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileDelete(System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes a file.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="unprotect">if set to <c>true</c> the file will be unprotected if needed.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the file was deleted; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Protect(System.String)">
            <summary>
            Protects (sets the read-only attribute) a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>
            true if the file or directory was protected; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Protect(System.String,System.Boolean)">
            <summary>
            Protects (sets the read-only attribute) a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the file or directory was protected; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Unprotect(System.String)">
            <summary>
            Unprotects (removes the read-only attribute) a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>
            true if the file or directory was unprotected; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Unprotect(System.String,System.Boolean)">
            <summary>
            Unprotects (removes the read-only attribute) a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the file or directory was unprotected; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Exists(System.String)">
            <summary>
            Determines if a file or directory exists.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>true if a file or a directory exists with this path; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetAttributes(System.String)">
            <summary>
            Gets the attributes of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>
            The attributes or 0 if the path does not correspond to a file or directory path.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetAttributes(System.String,System.Boolean)">
            <summary>
            Gets the attributes of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The attributes or 0 if the path does not correspond to a file or directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetAttributes(System.String,System.IO.FileAttributes)">
            <summary>
            Sets the attributes of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="attributes">The attributes.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetAttributes(System.String,System.IO.FileAttributes,System.Boolean)">
            <summary>
            Sets the attributes of a file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="attributes">The attributes.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetLastAccessTime(System.String,System.DateTime)">
            <summary>
            Sets the date and time that the specified file was last accessed.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="lastAccessTime">A DateTime containing the value to set for the lastAccess date and time of path. This value is expressed in local time.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetLastAccessTime(System.String,System.DateTime,System.Boolean)">
            <summary>
            Sets the date and time that the specified file was last accessed.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="lastAccessTime">A DateTime containing the value to set for the lastAccess date and time of path. This value is expressed in local time.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetLastAccessTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the date and time that the specified file was last accessed.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="lastAccessTimeUtc">A DateTime containing the value to set for the lastAccess date and time of path. This value is expressed in universal time.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetLastAccessTimeUtc(System.String,System.DateTime,System.Boolean)">
            <summary>
            Sets the date and time that the specified file was last accessed.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="lastAccessTimeUtc">A DateTime containing the value to set for the lastAccess date and time of path. This value is expressed in universal  time.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetCreationTime(System.String,System.DateTime)">
            <summary>
            Sets the date and time that the specified file was created.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="creationTime">A DateTime containing the value to set for the creation date and time of path. This value is expressed in local time.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetCreationTime(System.String,System.DateTime,System.Boolean)">
            <summary>
            Sets the date and time that the specified file was created.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="creationTime">A DateTime containing the value to set for the creation date and time of path. This value is expressed in local time.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetCreationTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the date and time that the specified file was created.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="creationTimeUtc">A DateTime containing the value to set for the creation date and time of path. This value is expressed in universal time.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetCreationTimeUtc(System.String,System.DateTime,System.Boolean)">
            <summary>
            Sets the date and time that the specified file was created.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="creationTimeUtc">A DateTime containing the value to set for the creation date and time of path. This value is expressed in universal  time.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetLastWriteTime(System.String,System.DateTime)">
            <summary>
            Sets the date and time that the specified file was last written to.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="lastWriteTime">A DateTime containing the value to set for the last write date and time of path. This value is expressed in local time.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetLastWriteTime(System.String,System.DateTime,System.Boolean)">
            <summary>
            Sets the date and time that the specified file was last written to.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="lastWriteTime">A DateTime containing the value to set for the last write date and time of path. This value is expressed in local time.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetLastWriteTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the date and time that the specified file was last written to.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="lastWriteTimeUtc">A DateTime containing the value to set for the last write date and time of path. This value is expressed in local time.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.SetLastWriteTimeUtc(System.String,System.DateTime,System.Boolean)">
            <summary>
            Sets the date and time that the specified file was last written to.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="lastWriteTimeUtc">A DateTime containing the value to set for the last write date and time of path. This value is expressed in local time.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Move(System.String,System.String,CodeFluent.Runtime.Utilities.LongPath.ProgressRoutine,System.IntPtr,CodeFluent.Runtime.Utilities.LongPath.FileMoveOptions,System.Boolean)">
            <summary>
            Moves a file or directory, including its children.
            </summary>
            <param name="sourcePath">The source path. May not be null.</param>
            <param name="targetPath">The target path. May not be null.</param>
            <param name="progressRoutine">The progress routine. May be null.</param>
            <param name="data">An argument to be passed to the ProgressRoutine callback method.</param>
            <param name="options">The options.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>true if the operation succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileCopy(System.String,System.String,System.Boolean)">
            <summary>
            Copies a file.
            </summary>
            <param name="sourceFilePath">The source file path. May not be null.</param>
            <param name="targetFilePath">The target file path. May not be null.</param>
            <param name="overwrite">if set to <c>true</c> the target will be overwritten if it exists.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileCopy(System.String,System.String,CodeFluent.Runtime.Utilities.LongPath.ProgressRoutine,System.IntPtr,System.IntPtr,CodeFluent.Runtime.Utilities.LongPath.FileCopyOptions,System.Boolean)">
            <summary>
            Copies a file.
            </summary>
            <param name="sourceFilePath">The source file path. May not be null.</param>
            <param name="targetFilePath">The target file path. May not be null.</param>
            <param name="progressRoutine">The progress routine.</param>
            <param name="data">An argument to be passed to the ProgressRoutine callback method.</param>
            <param name="cancel">If the boolean flag pointed by this argument is set to true during the copy operation, the operation is canceled. Otherwise.</param>
            <param name="options">The options.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the operation succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileMove(System.String,System.String)">
            <summary>
            Copies a file.
            </summary>
            <param name="sourceFilePath">The source file path. May not be null.</param>
            <param name="targetFilePath">The target file path. May not be null.</param>
            <returns>true if the operation succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileMove(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Copies a file.
            </summary>
            <param name="sourceFilePath">The source file path. May not be null.</param>
            <param name="targetFilePath">The target file path. May not be null.</param>
            <param name="overwrite">if set to <c>true</c> the target will be overwritten if it exists.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>true if the operation succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryMove(System.String,System.String)">
            <summary>
            Copies a directory.
            </summary>
            <param name="sourceDirectoryPath">The source directory path. May not be null.</param>
            <param name="targetDirectoryPath">The target directory path. May not be null.</param>
            <returns>true if the operation succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryMove(System.String,System.String,System.Boolean)">
            <summary>
            Copies a directory.
            </summary>
            <param name="sourceDirectoryPath">The source directory path. May not be null.</param>
            <param name="targetDirectoryPath">The target directory path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>true if the operation succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryCopy(System.String,System.String)">
            <summary>
            Copies a directory.
            </summary>
            <param name="sourceDirectoryPath">The source directory path. May not be null.</param>
            <param name="targetDirectoryPath">The target directory path. May not be null.</param>
            <returns>
            The number of items (files and directories) copied.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryCopy(System.String,System.String,CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions,System.Boolean,System.EventHandler{CodeFluent.Runtime.Utilities.Win32FindDataEventArgs})">
            <summary>
            Copies a directory.
            </summary>
            <param name="sourceDirectoryPath">The source directory path. May not be null.</param>
            <param name="targetDirectoryPath">The target directory path. May not be null.</param>
            <param name="options">Options to use.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <param name="copyFunction">A copy function that will be called before any copy. May be null.</param>
            <returns>The number of items (files and directories) copied.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryCreate(System.String)">
            <summary>
            Creates a directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryCreate(System.String,System.Boolean)">
            <summary>
            Creates a directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>true if the operation succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryDelete(System.String)">
            <summary>
            Deletes a directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <returns>
            The number of items (files and directories) deleted.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryDelete(System.String,System.Boolean)">
            <summary>
            Deletes a directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            The number of items (files and directories) deleted.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryDelete(System.String,CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions,System.Boolean,System.EventHandler{CodeFluent.Runtime.Utilities.Win32FindDataEventArgs})">
            <summary>
            Deletes a directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="options">Options to use.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <param name="deleteFunction">A delete function that will be called before any deletion. May be null.</param>
            <returns>The number of items (files and directories) deleted.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.DirectoryExists(System.String)">
            <summary>
            Determines if a directory exists.
            </summary>
            <param name="directoryPath">The input directory path. May not be null.</param>
            <returns>true if the directory exists; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileExists(System.String)">
            <summary>
            Determines if a file exists.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <returns>true if the file exists; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileOpenRead(System.String)">
            <summary>
            Opens an existing file for reading.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>
            An instance of the FileStream class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileOpenWrite(System.String)">
            <summary>
            Opens an existing file or creates a new file for writing.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>
            An instance of the FileStream class.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileOpen(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Creates a file stream.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="access">The file access.</param>
            <param name="mode">The file mode.</param>
            <param name="share">The file share.</param>
            <returns>An instance of the FileStream class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileReadAllText(System.String)">
            <summary>
            Opens a text file, reads all lines of the file using the default encoding, and then closes the file.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="encoding">The file encoding. If null, the default encoding will be used.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileWriteAllText(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileWriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="text">The text to write.</param>
            <param name="encoding">The file encoding. If null, the default encoding will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileWriteAllLines(System.String,System.String[])">
            <summary>
            Creates a new file, writes the specified strings to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="contents">The texts to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileWriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified strings to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="contents">The texts to write.</param>
            <param name="encoding">The file encoding. If null, the default encoding will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileReadAllBytes(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>An array of bytes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileWriteAllBytes(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="bytes">The bytes to write. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.FileWriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="bytes">The bytes to write. May not be null.</param>
            <param name="offset">The offset in the byte array.</param>
            <param name="count">The count of bytes to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsEqual(System.String,System.String)">
            <summary>
            Determines if a path is equal to another path.
            </summary>
            <param name="path1">The first path. May not be null.</param>
            <param name="path2">The second path. May not be null.</param>
            <returns>
              <c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsEqual(System.String,System.String,System.Boolean)">
            <summary>
            Determines if a path is equal to another path.
            </summary>
            <param name="path1">The first path. May not be null.</param>
            <param name="path2">The second path. May not be null.</param>
            <param name="normalize">if set to <c>true</c> paths are normalized prior to comparison.</param>
            <returns>
            	<c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsChildOrEqual(System.String,System.String)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <returns>
              <c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsChildOrEqual(System.String,System.String,System.Boolean)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <param name="normalize">if set to <c>true</c> paths are normalized prior to comparison.</param>
            <returns>
            	<c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsChild(System.String,System.String)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <returns>
            	<c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsChild(System.String,System.String,System.Boolean)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <param name="normalize">if set to <c>true</c> paths are normalized prior to comparison.</param>
            <returns>
              <c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsChild(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <param name="normalize">if set to <c>true</c> paths are normalized prior to comparison.</param>
            <param name="subPath">The left path from the child. May be null if child is not a child of path.</param>
            <returns>
              <c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Encrypt(System.String,System.Boolean)">
            <summary>
            Encrypts a file or directory. All data streams in a file are encrypted. All new files created in an encrypted directory are encrypted.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>true if the file was encrypted; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.Decrypt(System.String,System.Boolean)">
            <summary>
            Decrypts an encrypted file or directory.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>true if the file was decrypted; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.ToValidFileName(System.String)">
            <summary>
            Converts a text into a valid file name.
            </summary>
            <param name="fileName">The file name.</param>
            <returns>
            A valid file name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.ToValidFileName(System.String,System.String,System.String)">
            <summary>
            Converts a text into a valid file name.
            </summary>
            <param name="fileName">The file name.</param>
            <param name="reservedNameFormat">The reserved format to use for reserved names. If null '_{0}_' will be used.</param>
            <param name="reservedCharFormat">The reserved format to use for reserved characters. If null '_x{0}_' will be used.</param>
            <returns>
            A valid file name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.ToValidFilePath(System.String)">
            <summary>
            Converts a text into a valid file path.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>
            A valid file name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.ToValidFilePath(System.String,System.String,System.String)">
            <summary>
            Converts a text into a valid file path.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="reservedNameFormat">The reserved format to use for reserved names. If null '_{0}_' will be used.</param>
            <param name="reservedCharFormat">The reserved format to use for reserved characters. If null '_x{0}_%' will be used.</param>
            <returns>
            A valid file name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.IsValidFileName(System.String)">
            <summary>
            Determines whether the specified text represents a valid file name.
            </summary>
            <param name="fileName">The file name.</param>
            <returns>
            	<c>true</c> if the specified text represents a valid file name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.HasInvalidChars(System.String)">
            <summary>
            Determines if the specified path has invalid chars.
            </summary>
            <param name="path">The input path. If null, true will be returned.</param>
            <returns>true if the path has invalid chars; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.MakeRelative(System.String,System.String)">
            <summary>
            Determines the difference between two absolute paths. This method returns path2 relatively to path1.
            If paths are relative, the method will try to expand them using environment variables.
            </summary>
            <param name="path1">The path1. May not be null.</param>
            <param name="path2">The path2. May not be null.</param>
            <returns>The relative path. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetFiles(System.String)">
            <summary>
            Gets the files under a specified directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <returns>A list of directory paths.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetFiles(System.String,System.Boolean)">
            <summary>
            Gets the files under a specified directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>A list of directory paths.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetDirectories(System.String)">
            <summary>
            Gets the directories under a specified directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <returns>A list of directory paths.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LongPath.GetDirectories(System.String,System.Boolean)">
            <summary>
            Gets the directories under a specified directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>A list of directory paths.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongPath.FileCopyOptions">
            <summary>
            Defines options for file copy operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileCopyOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileCopyOptions.FailIfExists">
            <summary>
            The copy operation fails immediately if the target file already exists.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileCopyOptions.Restartable">
            <summary>
            Progress of the copy is tracked in the target file in case the copy fails.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileCopyOptions.OpenSourceForWrite">
            <summary>
            The file is copied and the original file is opened for write access.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileCopyOptions.AllowDecryptedDestination">
            <summary>
            An attempt to copy an encrypted file will succeed even if the destination copy cannot be encrypted.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileCopyOptions.CopySymlink">
            <summary>
            If the source file is a symbolic link, the destination file is also a symbolic link pointing to the same file that the source symbolic link is pointing to.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileCopyOptions.NoBuffering">
            <summary>
            The copy operation is performed using unbuffered I/O, bypassing system I/O cache resources. Recommended for very large file transfers.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongPath.FileMoveOptions">
            <summary>
            Defines options for file move operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileMoveOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileMoveOptions.ReplaceExisting">
            <summary>
            If a file named lpNewFileName exists, the function replaces its contents with the contents of the lpExistingFileName file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileMoveOptions.CopyAllowed">
            <summary>
            If the file is to be moved to a different volume, the function simulates the move by using other functions.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileMoveOptions.DelayUntilReboot">
            <summary>
            he system does not move the file until the operating system is restarted.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileMoveOptions.WriteThrough">
            <summary>
            The function does not return until the file has actually been moved on the disk.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileMoveOptions.CreateHardLink">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.FileMoveOptions.FailIfNotTrackable">
            <summary>
            he function fails if the source file is a link source, but the file cannot be tracked after the move. This situation can occur if the destination is a volume formatted with the FAT file system.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongPath.ProgressCallbackReason">
            <summary>
            Defines the reason why ProgressRoutine was called.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.ProgressCallbackReason.ChunkFinished">
            <summary>
            Another part of the data file was copied.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.ProgressCallbackReason.StreamSwithh">
            <summary>
            Another stream was created and is about to be copied. This is the callback reason given when the callback routine is first invoked.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongPath.ProgressResult">
            <summary>
            The return value of the ProgressRoutine.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.ProgressResult.Continue">
            <summary>
            Continue the operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.ProgressResult.Cancel">
            <summary>
            Cancel the operation and delete the destination file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.ProgressResult.Stop">
            <summary>
            Stop the operation. It can be restarted at a later time.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.ProgressResult.Quiet">
            <summary>
            Continue the operation, but stop invoking ProgressRoutine to report progress.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongPath.ProgressRoutine">
            <summary>
            Defines a progress routine for file operations
            </summary>
            <param name="TotalFileSize">The total size of the file, in bytes.</param>
            <param name="TotalBytesTransferred">The total number of bytes transferred from the source file to the destination file since the copy operation began.</param>
            <param name="StreamSize">The total size of the current file stream, in bytes.</param>
            <param name="StreamBytesTransferred">The total number of bytes in the current stream that have been transferred from the source file to the destination file since the copy operation began.</param>
            <param name="dwStreamNumber">A handle to the current stream. The first time ProgressRoutine is called, the stream number is 1.</param>
            <param name="dwCallbackReason">The reason that CopyProgressRoutine was called.</param>
            <param name="hSourceFile">A handle to the source file.</param>
            <param name="hDestinationFile">A handle to the destination file</param>
            <param name="lpData">Argument passed to CopyProgressRoutine.</param>
            <returns>The return value of the routine</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions">
            <summary>
            Defines options for enumeration methods.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions.Recursive">
            <summary>
            Enumeration is recursive.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions.DepthFirst">
            <summary>
            Enumeration is depth first.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions.DontOverwriteIfExists">
            <summary>
            Don't overwrite the target if it already exists.
            Only for copy operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions.DontOverwriteIfIdentical">
            <summary>
            Don't overwrite the target if it already exists and is identical in size and last write time.
            Only for copy operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.LongPath.EnumerateOptions.DontOverwriteIfNewer">
            <summary>
            Don't overwrite the target if it already exists and its last write time is newer.
            Only for copy operation.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.VisualStudioInstance">
            <summary>
            A utility class that helps detect a Visual Studio instance. Only supported when the Visual Studio installer 2017 is installed.
            </summary>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.GetDisplayName(System.Int32)">
            <summary>
            Gets the display name (title) of the product installed in this instance.
            </summary>
            <param name="lcid">The LCID for the display name.</param>
            <returns>The display name (title) of the product installed in this instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.GetDescription(System.Int32)">
            <summary>
            Gets the description of the product installed in this instance.
            </summary>
            <param name="lcid">The LCID for the description.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ResolvePath(System.String)">
            <summary>
            Resolves the optional relative path to the root path of the instance.
            </summary>
            <param name="relativePath">A relative path within the instance to resolve, or NULL to get the root path.</param>
            <returns>The full path to the optional relative path within the instance. If the relative path is NULL, the root path will always terminate in a backslash.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.EnumAllInstances">
            <summary>
            Enumerates all Visual Studio instances that support the Microsoft.VisualStudio.Setup.Configuration.Native.dll assembly.
            </summary>
            <returns>A list of all Visual Studio instances.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VisualStudioInstance.InstanceId">
            <summary>
            Gets the instance identifier (should match the name of the parent instance directory).
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VisualStudioInstance.InstallDate">
            <summary>
            Gets the local date and time when the installation was originally installed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VisualStudioInstance.InstallationName">
            <summary>
            Gets the unique name of the installation, often indicating the branch and other information used for telemetry.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VisualStudioInstance.InstallationPath">
            <summary>
            Gets the path to the installation root of the product.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VisualStudioInstance.InstallationVersion">
            <summary>
            Gets the version of the product installed in this instance.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VisualStudioInstance.Description">
            <summary>
            Gets the description of the product installed in this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupConfiguration.EnumInstances">
            <summary>
            Enumerates all completed product instances installed.
            </summary>
            <returns>Standard HRESULT indicating success or failure.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupConfiguration.GetInstanceForCurrentProcess">
            <summary>
            Gets the instance for the current process path.
            </summary>
            <returns>The instance for the current process path, or E_NOTFOUND if not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupConfiguration.GetInstanceForPath(System.String)">
            <summary>
            Gets the instance for the given path.
            </summary>
            <returns>The instance for the given path, or E_NOTFOUND if not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupConfiguration2.EnumInstances">
            <summary>
            Enumerates all completed product instances installed.
            </summary>
            <returns>Standard HRESULT indicating success or failure.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupConfiguration2.GetInstanceForCurrentProcess">
            <summary>
            Gets the instance for the current process path.
            </summary>
            <returns>The instance for the current process path, or E_NOTFOUND if not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupConfiguration2.GetInstanceForPath(System.String)">
            <summary>
            Gets the instance for the given path.
            </summary>
            <returns>The instance for the given path, or E_NOTFOUND if not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupConfiguration2.EnumAllInstances">
            <summary>
            Enumerates all product instances.
            </summary>
            <returns>Standard HRESULT indicating success or failure.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.IEnumSetupInstances.Next(System.Int32,CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance[],System.Int32@)">
            <summary>
            Retrieves the next set of product instances in the enumeration sequence.
            </summary>
            <param name="celt">The number of product instances to retrieve.</param>
            <param name="rgelt">A pointer to an array of <see cref="T:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance"/>.</param>
            <param name="pceltFetched">A pointer to the number of product instances retrieved. If celt is 1 this parameter may be NULL.</param>
            <returns>S_OK if the number of elements were fetched, S_FALSE if nothing was fetched (at end of enumeration), E_INVALIDARG if celt is greater than 1 and pceltFetched is NULL, or E_OUTOFMEMORY if an <see cref="T:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance"/> could not be allocated.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.IEnumSetupInstances.Skip(System.Int32)">
            <summary>
            Skips the next set of product instances in the enumeration sequence.
            </summary>
            <param name="celt">The number of product instances to skip.</param>
            <returns>S_OK if the number of elements could be skipped; otherwise, S_FALSE;</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.IEnumSetupInstances.Reset">
            <summary>
            Resets the enumeration sequence to the beginning.
            </summary>
            <returns>Always returns S_OK;</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.IEnumSetupInstances.Clone">
            <summary>
            Creates a new enumeration object in the same state as the current enumeration object: the new object points to the same place in the enumeration sequence.
            </summary>
            <returns>S_OK if a clone was returned; otherwise, E_OUTOFMEMORY.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance.GetInstanceId(System.String@)">
            <summary>
            Gets the instance identifier (should match the name of the parent instance directory).
            </summary>
            <param name="pbstrInstanceId">The instance identifier.</param>
            <returns>Standard HRESULT indicating success or failure, including E_FILENOTFOUND if the instance state does not exist.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance.GetInstallDate(System.Int64@)">
            <summary>
            Gets the local date and time when the installation was originally installed.
            </summary>
            <param name="pInstallDate">The local date and time when the installation was originally installed.</param>
            <returns>Standard HRESULT indicating success or failure, including E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the property is not defined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance.GetInstallationName(System.String@)">
            <summary>
            Gets the unique name of the installation, often indicating the branch and other information used for telemetry.
            </summary>
            <param name="pbstrInstallationName">The unique name of the installation, often indicating the branch and other information used for telemetry.</param>
            <returns>Standard HRESULT indicating success or failure, including E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the property is not defined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance.GetInstallationPath(System.String@)">
            <summary>
            Gets the path to the installation root of the product.
            </summary>
            <param name="pbstrInstallationPath">The path to the installation root of the product.</param>
            <returns>Standard HRESULT indicating success or failure, including E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the property is not defined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance.GetInstallationVersion(System.String@)">
            <summary>
            Gets the version of the product installed in this instance.
            </summary>
            <param name="pbstrInstallationVersion">The version of the product installed in this instance.</param>
            <returns>Standard HRESULT indicating success or failure, including E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the property is not defined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance.GetDisplayName(System.Int32,System.String@)">
            <summary>
            Gets the display name (title) of the product installed in this instance.
            </summary>
            <param name="lcid">The LCID for the display name.</param>
            <param name="pbstrDisplayName">The display name (title) of the product installed in this instance.</param>
            <returns>Standard HRESULT indicating success or failure, including E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the property is not defined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance.GetDescription(System.Int32,System.String@)">
            <summary>
            Gets the description of the product installed in this instance.
            </summary>
            <param name="lcid">The LCID for the description.</param>
            <param name="pbstrDescription">The description of the product installed in this instance.</param>
            <returns>Standard HRESULT indicating success or failure, including E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the property is not defined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VisualStudioInstance.ISetupInstance.ResolvePath(System.String,System.String@)">
            <summary>
            Resolves the optional relative path to the root path of the instance.
            </summary>
            <param name="pwszRelativePath">A relative path within the instance to resolve, or NULL to get the root path.</param>
            <param name="pbstrAbsolutePath">The full path to the optional relative path within the instance. If the relative path is NULL, the root path will always terminate in a backslash.</param>
            <returns>Standard HRESULT indicating success or failure, including E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the property is not defined.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Win32FindDataEventArgs">
            <summary>
            Provides data for a Win32FindData event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Win32FindDataEventArgs.#ctor(CodeFluent.Runtime.Utilities.Win32FindData)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Win32FindDataEventArgs"/> class.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindDataEventArgs.Entry">
            <summary>
            Gets the entry.
            </summary>
            <value>
            The entry.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindDataEventArgs.Count">
            <summary>
            Gets or sets the current operation count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindDataEventArgs.RelativeTargetPath">
            <summary>
            Gets or sets the current relative target path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindDataEventArgs.TargetPath">
            <summary>
            Gets or sets the current target path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlXPathText">
            <summary>
            Defines an XmlXPathText for the XmlXPathDocument.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathText.#ctor(System.String,CodeFluent.Runtime.Utilities.XmlXPathDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathElement"/> class.
            </summary>
            <param name="data">String that contains character data to be added to document.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathText.OwnerDocument">
            <summary>
            Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathText.XPathExpression">
            <summary>
            Gets the XPath expression for this instance.
            </summary>
            <value>
            The XPath information.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlXPathCDataSection">
            <summary>
            Defines an XmlCDataSection for the XmlXPathDocument.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathCDataSection.#ctor(System.String,CodeFluent.Runtime.Utilities.XmlXPathDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathElement"/> class.
            </summary>
            <param name="data">String that contains character data to be added to document.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathCDataSection.OwnerDocument">
            <summary>
            Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathCDataSection.XPathExpression">
            <summary>
            Gets the XPath expression for this instance.
            </summary>
            <value>
            The XPath information.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Country">
            <summary>
            Represents a country.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Country"/> class.
            </summary>
            <param name="culture">The culture.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Country"/> class.
            </summary>
            <param name="name">The country name. May be null.</param>
            <param name="lcid">The country LCID.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Country"/> class using a geographical location identifier (GeoId).
            </summary>
            <param name="geoId">The geo id.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.GetDefaultSpecificCulture(System.Globalization.CultureInfo)">
            <summary>
            Gets the default specific country/region for a given language.
            If the culture is already specific, it will be returned as is.
            </summary>
            <param name="language">The language. May not be null.</param>
            <returns>An instance of the CultureInfo class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.GetDefaultThreeLetterISOCountryName(System.Int32)">
            <summary>
            Gets the default ISO 3166 three-letter code of the country/region for a given language.
            Only supported on Windows Vista or higher.
            </summary>
            <param name="lcid">The language LCID.</param>
            <returns>The ISO 3166 three-letter code for the country/region or null if an error occurred.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.GetDefaultTwoLetterISOCountryName(System.Int32)">
            <summary>
            Gets the default ISO 3166 two-letter code of the country/region for a given language.
            </summary>
            <param name="lcid">The language LCID.</param>
            <returns>The ISO 3166 two-letter code for the country/region or null if an error occurred.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.GetCurrencyCountries(System.String)">
            <summary>
            Gets countries using the specified currency symbol.
            </summary>
            <param name="isoCurrencySymbol">The iso currency symbol. May not be null.</param>
            <returns>A list of countries.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.GetCountry(System.String)">
            <summary>
            Gets a country or location using the specified ISO-3166 two-letter code.
            </summary>
            <param name="twoLetterISOName">The iso code. May not be null.</param>
            <returns>An instance of the Country class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.op_Equality(CodeFluent.Runtime.Utilities.Country,CodeFluent.Runtime.Utilities.Country)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.op_Inequality(CodeFluent.Runtime.Utilities.Country,CodeFluent.Runtime.Utilities.Country)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.Equals(CodeFluent.Runtime.Utilities.Country)">
            <summary>
            Determines if the specified object is equal to this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>true if both objects are equal; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.-or- null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.</param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.-or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.CompareTo(System.Object)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.CompareTo(CodeFluent.Runtime.Utilities.Country)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.Location">
            <summary>
            Gets the current location.
            </summary>
            <value>An instance of the country class.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.Current">
            <summary>
            Gets the current country.
            </summary>
            <value>An instance of the country class.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.UICurrent">
            <summary>
            Gets the current UI country.
            </summary>
            <value>An instance of the country class.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.Culture">
            <summary>
            Gets the culture. May be null for a location-only country.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.LCID">
            <summary>
            Gets the LCID.
            </summary>
            <value>The LCID.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.Region">
            <summary>
            Gets the region.
            </summary>
            <value>The region. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.GeoId">
            <summary>
            Gets the geo id.
            </summary>
            <value>The geo id.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.TwoLetterISOName">
            <summary>
            Gets the ISO two-letter code for the country or location.
            </summary>
            <value>The name of the two letter ISO country.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.ThreeLetterISOName">
            <summary>
            Gets the ISO three-letter code for the country or location.
            </summary>
            <value>The name of the three letter ISO country.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.ParentId">
            <summary>
            Gets the geographical location identifier of the parent region of a country/region.
            </summary>
            <value>
            The geographical location identifier of the parent region of a country/region.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.Code">
            <summary>
            Gets the ISO 3-digit country/region code.
            </summary>
            <value>
            The ISO 3-digit country/region code.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.NativeName">
            <summary>
            Gets the native name.
            </summary>
            <value>The native name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.MixedName">
            <summary>
            Gets a mixed name (english name concatenated with native name).
            </summary>
            <value>The mixed name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.LocationName">
            <summary>
            Gets the location name. May be null.
            </summary>
            <value>The location name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.EnglishName">
            <summary>
            Gets english name.
            </summary>
            <value>The english name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.SystemMixedName">
            <summary>
            Gets the system mixed name (system name concatenated with native name).
            </summary>
            <value>The system mixed name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.SystemName">
            <summary>
            Gets the system name.
            </summary>
            <value>The system name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.AllLocations">
            <summary>
            Gets all countries or locations installed in this system.
            </summary>
            <value>A list of countries.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.AllCountries">
            <summary>
            Gets all culture countries installed in this system.
            </summary>
            <value>A list of countries.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Crc16">
            <summary>
            Represents a set of CRC16 utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc16.Compute(System.Byte[])">
            <summary>
            Computes the specified bytes.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <returns>The computed CRC16 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc16.ComputeFile(System.String)">
            <summary>
            Computes the specified file.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <returns>The computed CRC16 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc16.Compute(System.String)">
            <summary>
            Computes the specified text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <returns>The computed CRC16 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc16.Compute(System.IO.Stream)">
            <summary>
            Computes the specified stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <returns>The computed CRC16 checksum.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Crc32">
            <summary>
            Represents a set of CRC32 utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Crc32"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.UpdateCrc32(System.UInt32,System.UInt32)">
            <summary>
            Updates a CRC32 with additional data.
            </summary>
            <param name="data">The additional data.</param>
            <param name="oldCrc">The old CRC.</param>
            <returns>The CRC32 value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.UpdateCrc32(System.String,System.UInt32)">
            <summary>
            Updates a CRC32 with additional data.
            </summary>
            <param name="data">The additional data.</param>
            <param name="oldCrc">The old CRC.</param>
            <returns>The CRC32 value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.UpdateCrc32(System.Byte[],System.UInt32)">
            <summary>
            Updates a CRC32 with additional data.
            </summary>
            <param name="data">The additional data.</param>
            <param name="oldCrc">The old CRC.</param>
            <returns>The CRC 32 value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.AddToCrc32(System.UInt16)">
            <summary>
            Adds a value to the current CRC32.
            </summary>
            <param name="c">The value to add.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.AddToCrc32(System.Byte)">
            <summary>
            Adds a value to the current CRC32.
            </summary>
            <param name="c">The value to add.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.Compute(System.IO.Stream)">
            <summary>
            Computes the specified stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <returns>The computed CRC32 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.ComputeFile(System.String)">
            <summary>
            Computes the specified file.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <returns>The computed CRC32 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.Compute(System.String)">
            <summary>
            Computes the specified text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <returns>The computed CRC32 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.Compute(System.Byte[])">
            <summary>
            Computes the specified bytes.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <returns>The computed CRC32 checksum.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Crc32.CheckSum">
            <summary>
            Gets or sets the current checksum value.
            </summary>
            <value>The checksum value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CustomThreadPool">
            <summary>
            Provides a pool of threads that can be used to post work items.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CustomThreadPool.DefaultThreadNameFormat">
            <summary>
            The default thread name format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CustomThreadPool.DefaultThreadsPerProcessor">
            <summary>
            The default number of threads per processor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CustomThreadPool.DefaultIdleThreadTimeout">
            <summary>
            The default idle thread timeout.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
            <param name="workerThreadIdleTimeout">The worker thread idle timeout in milliseconds.</param>
            <param name="nameFormat">The name format.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Threading.ThreadPriority)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
            <param name="workerThreadIdleTimeout">The worker thread idle timeout in milliseconds.</param>
            <param name="nameFormat">The name format.</param>
            <param name="threadPriority">The priority of threads in the pool.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Threading.ThreadPriority,System.Threading.ApartmentState,System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
            <param name="workerThreadIdleTimeout">The worker thread idle timeout in milliseconds.</param>
            <param name="nameFormat">The name format.</param>
            <param name="threadPriority">The priority of threads in the pool.</param>
            <param name="threadApartmentState">The ApartmentState of threads in the pool.</param>
            <param name="threadCulture">The culture of threads in the pool. May be null.</param>
            <param name="threadUiCulture">The UI culture of threads in the pool. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Threading.ThreadPriority,System.Threading.ApartmentState,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Threading.ParameterizedThreadStart,System.Threading.ParameterizedThreadStart)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
            <param name="workerThreadIdleTimeout">The worker thread idle timeout in milliseconds.</param>
            <param name="nameFormat">The name format.</param>
            <param name="threadPriority">The priority of threads in the pool.</param>
            <param name="threadApartmentState">The ApartmentState of threads in the pool.</param>
            <param name="threadCulture">The culture of threads in the pool. May be null.</param>
            <param name="threadUiCulture">The UI culture of threads in the pool. May be null.</param>
            <param name="threadInit">A thread init callback. May be null.</param>
            <param name="threadEnd">A thread end callback. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Threading.ThreadPriority,System.Threading.ApartmentState,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Threading.ParameterizedThreadStart,System.Threading.ParameterizedThreadStart,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
            <param name="workerThreadIdleTimeout">The worker thread idle timeout in milliseconds.</param>
            <param name="nameFormat">The name format.</param>
            <param name="threadPriority">The priority of threads in the pool.</param>
            <param name="threadApartmentState">The ApartmentState of threads in the pool.</param>
            <param name="threadCulture">The culture of threads in the pool. May be null.</param>
            <param name="threadUiCulture">The UI culture of threads in the pool. May be null.</param>
            <param name="threadInit">A thread init callback. May be null.</param>
            <param name="threadEnd">A thread end callback. May be null.</param>
            <param name="useBackGroundThreads">if set to <c>true</c> threads in the pool will be background threads.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
            Queues a method for execution, and specifies an object containing data to be used by the method. The method executes when a thread pool thread becomes available.
            </summary>
            <param name="callBack">A WaitCallback representing the method to execute.</param>
            <returns>
            true if the method is successfully queued; OutOfMemoryException is thrown if the work item could not be queued.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
            Queues a method for execution, and specifies an object containing data to be used by the method. The method executes when a thread pool thread becomes available.
            </summary>
            <param name="callBack">A WaitCallback representing the method to execute.</param>
            <param name="state">An object containing data to be used by the method.</param>
            <returns>true if the method is successfully queued; OutOfMemoryException is thrown if the work item could not be queued.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.ManuallyDecrementThread">
            <summary>
            Manually decrement the thread pool count. Use this only if you have willingly killed a thread in the pool.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.ThreadCulture">
            <summary>
            Gets the culture of the threads in the pool.
            </summary>
            <value>The threads culture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.ThreadUiCulture">
            <summary>
            Gets the UI culture of the threads in the pool.
            </summary>
            <value>The threads UI culture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.ThreadApartmentState">
            <summary>
            Gets the apartment state of the threads in the pool.
            </summary>
            <value>The threads apartment state.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.ThreadPriority">
            <summary>
            Gets the priority of threads in the pool.
            </summary>
            <value>The threads priority.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.WorkerThreadIdleTimeout">
            <summary>
            Gets the worker thread idle timeout.
            </summary>
            <value>The worker thread idle timeout.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.QueueLength">
            <summary>
            Gets the length of the work queue.
            If this length always increases over time, it means worker threads are not working fast enough, and the system will eventually run out of memory.
            </summary>
            <value>The length of the work queue.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.MinimumWorkerThreads">
            <summary>
            Gets the minimum number of worker threads.
            </summary>
            <value>The minimum number of worker threads.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.MaximumWorkerThreads">
            <summary>
            Gets the maximum number of worker threads.
            </summary>
            <value>The maximum number of worker threads.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.AvailableWorkerThreads">
            <summary>
            Gets the number of available worker threads.
            </summary>
            <value>The number of available worker threads.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.CurrentWorkerThreads">
            <summary>
            Gets the number of current worker threads.
            </summary>
            <value>The number of current worker threads.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DataBinderComparer">
            <summary>
            Compares two expressions on objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer"/> class.
            </summary>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer.#ctor(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer"/> class.
            </summary>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer.Compare(System.Object,System.Object,System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            Comparisong uses an expressions on the two objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <param name="expression">The expression to use. If null the input objects will be compared.</param>
            <param name="direction">The sort direction.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer.Compare(System.Object,System.Object,System.String,System.ComponentModel.ListSortDirection,System.Nullable{System.StringComparison})">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            Comparisong uses an expressions on the two objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <param name="expression">The expression to use. If null the input objects will be compared.</param>
            <param name="direction">The sort direction.</param>
            <param name="fallbackComparison">The fallback string comparison to use if the objects cannot be compared using IComparable, or null to throw error in this case.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DataBinderComparer.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DataBinderComparer.FallbackComparison">
            <summary>
            Gets or sets the fallback string comparison.
            </summary>
            <value>The fallback comparison.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DataBinderComparer.Direction">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DataBinderComparer`1">
            <summary>
            Compares two expressions on objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
            <typeparam name="T">The type of objects to compare</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer`1"/> class.
            </summary>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.#ctor(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer`1"/> class.
            </summary>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer`1"/> class.
            </summary>
            <param name="property">The property. May not be null.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.Compare(`0,`0,System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            Comparisong uses an expressions on the two objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
            <param name="direction">The sort direction.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.Compare(`0,`0,System.String,System.ComponentModel.ListSortDirection,System.Nullable{System.StringComparison})">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            Comparisong uses an expressions on the two objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
            <param name="direction">The sort direction.</param>
            <param name="fallbackComparison">The fallback string comparison to use if the objects cannot be compared using IComparable, or null to throw error in this case.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.Compare(`0,`0)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DataBindingEvaluator">
            <summary>
            A utility class equivalent to the System.Web.DataBinder class, but that does not require a reference to the System.Web assembly.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.Eval(System.Object,System.String,System.String)">
            <summary>
            Evaluates data-binding expressions at run time.
            </summary>
            <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language.</param>
            <param name="expression">The navigation path from the container object to the public property value to be placed in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <param name="format">A .NET Framework format string (like those used by String.Format) that converts the Object instance returned by the data-binding expression to a String object.</param>
            <returns>
            A String object that results from evaluating the data-binding expression and converting it to a string type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.Eval(System.Object,System.String,System.IFormatProvider,System.String)">
            <summary>
            Evaluates data-binding expressions at run time.
            </summary>
            <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language.</param>
            <param name="expression">The navigation path from the container object to the public property value to be placed in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <param name="provider">The format provider.</param>
            <param name="format">A .NET Framework format string (like those used by String.Format) that converts the Object instance returned by the data-binding expression to a String object.</param>
            <returns>A String object that results from evaluating the data-binding expression and converting it to a string type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.Eval(System.Object,System.String)">
            <summary>
            Evaluates data-binding expressions at run time.
            </summary>
            <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language.</param>
            <param name="expression">The navigation path from the container object to the public property value to be placed in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <returns>
            A String object that results from evaluating the data-binding expression and converting it to a string type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.Eval(System.Object,System.String,System.Boolean)">
            <summary>
            Evaluates data-binding expressions at run time.
            </summary>
            <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language.</param>
            <param name="expression">The navigation path from the container object to the public property value to be placed in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be throw.</param>
            <returns>
            A String object that results from evaluating the data-binding expression and converting it to a string type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.GetPropertyValue(System.Object,System.String)">
            <summary>
            Retrieves the value of the specified property of the specified object.
            </summary>
            <param name="container">The object that contains the property.</param>
            <param name="propName">The name of the property that contains the value to retrieve.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.GetPropertyValue(System.Object,System.String,System.Boolean)">
            <summary>
            Retrieves the value of the specified property of the specified object.
            </summary>
            <param name="container">The object that contains the property.</param>
            <param name="propName">The name of the property that contains the value to retrieve.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be throw.</param>
            <returns>
            The value of the specified property.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.GetIndexedPropertyValue(System.Object,System.String)">
            <summary>
            Retrieves the value of a property of the specified container and navigation path.
            </summary>
            <param name="container">The object reference against which expr is evaluated. This must be a valid object identifier in the specified language for the page.</param>
            <param name="expression">The navigation path from the container object to the public property value to place in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <returns>An object that results from the evaluation of the data-binding expression.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.GetIndexedPropertyValue(System.Object,System.String,System.Boolean)">
            <summary>
            Retrieves the value of a property of the specified container and navigation path.
            </summary>
            <param name="container">The object reference against which expr is evaluated. This must be a valid object identifier in the specified language for the page.</param>
            <param name="expression">The navigation path from the container object to the public property value to place in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be throw.</param>
            <returns>
            An object that results from the evaluation of the data-binding expression.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable">
            <summary>
            Defines a wrapper class that can enumerate
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable.#ctor(System.Array)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable"/> class.
            </summary>
            <param name="array">An input array.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable"/> class.
            </summary>
            <param name="enumerable">An input enumerable.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable.BaseObject">
            <summary>
            Gets the base object.
            </summary>
            <value>The base object.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DictionarySerializer`1">
            <summary>
            A utility class to serialize dictionaries.
            </summary>
            <typeparam name="T">Any type.</typeparam>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DictionarySerializer`1.DefaultSeparator">
            <summary>
            The default separator character.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DictionarySerializer`1.DefaultAssignment">
            <summary>
            The default assignment character.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DictionarySerializer`1.DefaultUnquote">
            <summary>
            The default unquote character.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DictionarySerializer`1.DefaultStringComparer">
            <summary>
            The default string comparer.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DictionarySerializer`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.DeserializeDictionary(System.String)">
            <summary>
            Deserializes a text into a dictionary.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>The deserialized representation of the input text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.DeserializeDictionary(System.String,System.Collections.Generic.IDictionary{System.String,`0})">
            <summary>
            Deserializes a text into an existing dictionary.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="dictionary">The input dictionary. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.UnquoteText(System.String)">
            <summary>
            Unquotes a text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>The unquoted text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.DeserializeDictionary(System.IO.TextReader)">
            <summary>
            Deserializes a text reader into a dictionary.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <returns>The deserialized representation of the input text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.DeserializeDictionary(System.IO.TextReader,System.Collections.Generic.IDictionary{System.String,`0})">
            <summary>
            Deserializes a text reader into an existing dictionary.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="dictionary">The input dictionary. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Deserialize(System.String,System.Collections.Generic.IDictionary{System.String,`0})">
            <summary>
            Deserializes a text into an existing dictionary.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="dictionary">The input dictionary. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Deserialize(System.String,System.Collections.Generic.IDictionary{System.String,`0},System.StringComparer,System.Char,System.Char)">
            <summary>
            Deserializes a text into an existing dictionary.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="dictionary">The input dictionary. May not be null.</param>
            <param name="comparer">The string comparer instance. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="assignment">The assignment character.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Deserialize(System.String)">
            <summary>
            Deserializes a text into a dictionary.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>The dictionary instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Deserialize(System.String,System.StringComparer,System.Char,System.Char)">
            <summary>
            Deserializes a text into a dictionary.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="comparer">The string comparer instance. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="assignment">The assignment character.</param>
            <returns>The dictionary instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Serialize(System.Collections.Generic.IDictionary{System.String,`0})">
            <summary>
            Serializes the specified dictionary into a text.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <returns>
            A serialized representation of the dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Serialize(System.Collections.Generic.IDictionary{System.String,`0},System.StringComparer,System.Char,System.Char)">
            <summary>
            Serializes the specified dictionary into a text.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <param name="comparer">The string comparer instance. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="assignment">The assignment character.</param>
            <returns>
            A serialized representation of the dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Serialize(System.Collections.IDictionary)">
            <summary>
            Serializes the specified dictionary into a text.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <returns>
            A serialized representation of the dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Serialize(System.Collections.IDictionary,System.StringComparer,System.Char,System.Char)">
            <summary>
            Serializes the specified dictionary into a text.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <param name="comparer">The string comparer instance. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="assignment">The assignment character.</param>
            <returns>
            A serialized representation of the dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.SerializeDictionary(System.Collections.Generic.IDictionary{System.String,`0})">
            <summary>
            Serializes the specified dictionary into a text.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <returns>
            A serialized representation of the dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.SerializeDictionary(System.Collections.IDictionary)">
            <summary>
            Serializes the specified dictionary into a text.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <returns>
            A serialized representation of the dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.SerializeDictionary(System.IO.TextWriter,System.Collections.Generic.IDictionary{System.String,`0})">
            <summary>
            Serializes the specified dictionary to a text writer instance.
            </summary>
            <param name="writer">The text writer instance. May not be null.</param>
            <param name="dictionary">The input dictionary. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.SerializeDictionary(System.IO.TextWriter,System.Collections.IDictionary)">
            <summary>
            Serializes the specified dictionary to a text writer instance.
            </summary>
            <param name="writer">The text writer instance. May not be null.</param>
            <param name="dictionary">The input dictionary. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DictionarySerializer`1.SerializeValue(System.IO.TextWriter,System.Object)">
            <summary>
            Serializes a value to a text writer instance.
            </summary>
            <param name="writer">The text writer instance. May not be null.</param>
            <param name="obj">The value to serialize. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DictionarySerializer`1.StringComparer">
            <summary>
            Gets or sets the string comparer to use.
            </summary>
            <value>
            The string comparer.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Separator">
            <summary>
            Gets or sets the separator character.
            </summary>
            <value>
            The separator character.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Assignment">
            <summary>
            Gets or sets the assignment character.
            </summary>
            <value>
            The assignment character.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DictionarySerializer`1.Unquote">
            <summary>
            Gets or sets a value indicating whether to <see cref="T:CodeFluent.Runtime.Utilities.DictionarySerializer`1"/> unquote the resulting string.
            </summary>
            <value>
              <c>true</c> if unquote the resulting string; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DiffUtilities">
            <summary>
            A helper class to compute differences between two versions of a text or a text file.
            Implements 'An O(ND) Difference Algorithm and its Variations" by Eugene Myers Algorithmica Vol. 1 No. 2, 1986, p 251'.
            Based on the work found at http://www.mathertel.de
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffTextFiles(System.String,System.String)">
            <summary>
            Find the difference in two text files, comparing by text lines.
            </summary>
            <param name="fileA">A-version of the file (usualy the old one)</param>
            <param name="fileB">B-version of the file (usualy the new one)</param>
            <returns>A list of differences.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffTextFiles(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Find the difference in two text files, comparing by text lines.
            </summary>
            <param name="fileA">A-version of the file (usualy the old one)</param>
            <param name="fileB">B-version of the file (usualy the new one)</param>
            <param name="trimSpace">When set to true, all leading and trailing whitespace characters are stripped out before the comparation is done.</param>
            <param name="ignoreMultipleSpace">When set to true, all whitespace characters are converted to a single space character before the comparation is done.</param>
            <param name="ignoreCase">When set to true, all characters are converted to their lowercase equivivalence before the comparation is done.</param>
            <param name="ignoreNonWordBreakingSpaces">When set to true, all characters between words and non words characters are deleted before the comparation is done.</param>
            <returns>A list of differences.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffText(System.String,System.String)">
            <summary>
            Find the difference in two texts, comparing by text lines.
            </summary>
            <param name="TextA">A-version of the text (usualy the old one)</param>
            <param name="TextB">B-version of the text (usualy the new one)</param>
            <returns>A list of differences.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffText(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Find the difference in two text documents, comparing by text lines.
            </summary>
            <param name="TextA">A-version of the text (usualy the old one)</param>
            <param name="TextB">B-version of the text (usualy the new one)</param>
            <param name="trimSpace">When set to true, all leading and trailing whitespace characters are stripped out before the comparation is done.</param>
            <param name="ignoreMultipleSpace">When set to true, all whitespace characters are converted to a single space character before the comparation is done.</param>
            <param name="ignoreCase">When set to true, all characters are converted to their lowercase equivivalence before the comparation is done.</param>
            <param name="ignoreNonWordBreakingSpaces">When set to true, all characters between words and non words characters are deleted before the comparation is done.</param>
            <returns>A list of differences.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffCodes(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This function converts all textlines of the text into unique numbers for every unique textline
            so further work can work only with simple numbers.
            </summary>
            <param name="aText">the input text</param>
            <param name="h">This extern initialized dictionary is used for storing all ever used textlines.</param>
            <param name="trimSpace">ignore leading and trailing space characters</param>
            <param name="ignoreCase">When set to true, all characters are converted to their lowercase equivivalence before the comparation is done.</param>
            <param name="ignoreMultipleSpace">When set to true, all whitespace characters are converted to a single space character before the comparation is done.</param>
            <param name="ignoreNonWordBreakingSpaces">When set to true, all characters between words and non words characters are deleted before the comparation is done.</param>
            <returns>a array of integers.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.SMS(CodeFluent.Runtime.Utilities.DiffData,System.Int32,System.Int32,CodeFluent.Runtime.Utilities.DiffData,System.Int32,System.Int32)">
            <summary>This is the algorithm to find the Shortest Middle Snake (SMS).</summary>
            <param name="DataA">sequence A</param>
            <param name="LowerA">lower bound of the actual range in DataA</param>
            <param name="UpperA">upper bound of the actual range in DataA (exclusive)</param>
            <param name="DataB">sequence B</param>
            <param name="LowerB">lower bound of the actual range in DataB</param>
            <param name="UpperB">upper bound of the actual range in DataB (exclusive)</param>
            <returns>a MiddleSnakeData record containing x,y and u,v</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.LCS(CodeFluent.Runtime.Utilities.DiffData,System.Int32,System.Int32,CodeFluent.Runtime.Utilities.DiffData,System.Int32,System.Int32)">
            <summary>This is the divide-and-conquer implementation of the longes common-subsequence (LCS)
            algorithm.
            The published algorithm passes recursively parts of the A and B sequences.
            To avoid copying these arrays the lower and upper bounds are passed while the sequences stay constant.</summary>
            <param name="DataA">sequence A</param>
            <param name="LowerA">lower bound of the actual range in DataA</param>
            <param name="UpperA">upper bound of the actual range in DataA (exclusive)</param>
            <param name="DataB">sequence B</param>
            <param name="LowerB">lower bound of the actual range in DataB</param>
            <param name="UpperB">upper bound of the actual range in DataB (exclusive)</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.CreateDiffs(CodeFluent.Runtime.Utilities.DiffData,CodeFluent.Runtime.Utilities.DiffData)">
            <summary>Scan the tables of which lines are inserted and deleted,
            producing an edit script in forward order.</summary>
            dynamic array
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DiffUtilities.Item">
            <summary>Represents details of one difference.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffUtilities.Item.StartA">
            <summary>Gets the start Line number in Data A.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffUtilities.Item.StartB">
            <summary>Gets the start Line number in Data B.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffUtilities.Item.DeletedA">
            <summary>Gets the number of changes in Data A.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffUtilities.Item.InsertedB">
            <summary>Gets the number of changes in Data B.</summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DiffUtilities.SMSRD">
            <summary>Shortest Middle Snake Return Data</summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DiffData">
            <summary>Data on one input file being compared.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffData.Length">
            <summary>Number of elements (lines).</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffData.data">
            <summary>Buffer of numbers that will be compared.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffData.modified">
            <summary>Array of booleans that flag for modified data.
            This is the result of the diff.
            This means deletedA in the first Data or inserted in the second Data.</summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffData.#ctor(System.Int32[])">
            <summary>Initialize the Diff-Data buffer.</summary>
            <param name="initData">reference to the buffer</param>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DynamicObject">
            <summary>
            Represents a dynamic object whose properties can be added or removed at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.AddProperty(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Adds a new property.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="attributes">The property custom attributes or null.</param>
            <returns>An instance of the DynamicObjectProperty type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.AddProperty(System.String,System.Type,System.Object,System.Boolean,System.Int32,System.Attribute[])">
            <summary>
            Adds a new property.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="defaultValue">The default value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <param name="sortOrder">The property sort order.</param>
            <param name="attributes">The property custom attributes or null.</param>
            <returns>
            An instance of the DynamicObjectProperty type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.SortProperties(System.Collections.Generic.IComparer{System.ComponentModel.PropertyDescriptor})">
            <summary>
            Sorts the properties using the specified comparer.
            </summary>
            <param name="comparer">The comparer to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.GetPropertyValue(System.String,System.Type,System.Object)">
            <summary>
            Gets a typed property value.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The expected type.</param>
            <param name="defaultValue">The default value if the property value is not defined.</param>
            <returns>The property value or the default value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.GetPropertyValue``1(System.String,``0)">
            <summary>
            Gets a typed property value.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <param name="name">The property name.</param>
            <param name="defaultValue">The default value if the property value is not defined.</param>
            <returns>The property value or the default value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Gets the property value.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The value.</param>
            <returns>
            true if  the property value exists; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.GetPropertyValue(System.String,System.Object)">
            <summary>
            Gets a raw property value.
            </summary>
            <param name="name">The property name.</param>
            <param name="defaultValue">The default value if the property value is not defined.</param>
            <returns>The property value or the default value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.SetPropertyValue(System.String,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.CreateProperty(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Creates a property object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="attributes">The property custom attributes or null.</param>
            <returns>
            An instance of the DynamicObjectProperty type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.OnPropertyChanged(System.String)">
            <summary>
            Called when a property value has changed.
            </summary>
            <param name="name">The property name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.Validate">
            <summary>
            Validates the whole object.
            </summary>
            <returns>
            A text describing the error or null if there was no error.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ValidateMember(System.String)">
            <summary>
            Validates the member.
            </summary>
            <param name="memberName">The name of the member to validate or null to validate the whole object.</param>
            <returns>
            A text describing the error or null if there was no error.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.Validate(System.Globalization.CultureInfo)">
            <summary>
            Validates the member.
            </summary>
            <param name="culture">The culture to use for error messages.</param>
            <returns>
            A text describing the error or null if there was no error.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ValidateMember(System.Globalization.CultureInfo,System.String)">
            <summary>
            Validates the member.
            </summary>
            <param name="culture">The culture to use for error messages.</param>
            <param name="memberName">The name of the member to validate or null to validate the whole object.</param>
            <returns>
            A text describing the error or null if there was no error.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ValidateMember(System.Globalization.CultureInfo,System.String,System.String)">
            <summary>
            Validates the member.
            </summary>
            <param name="culture">The culture to use for error messages.</param>
            <param name="memberName">The name of the member to validate or null to validate the whole object.</param>
            <param name="separator">The separator string to use.</param>
            <returns>A text describing the error or null if there was no error.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ValidateMember(System.Globalization.CultureInfo,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException},System.String)">
            <summary>
            Validates the member.
            </summary>
            <param name="culture">The culture to use for error messages.</param>
            <param name="list">The list of exception to fill.</param>
            <param name="memberName">The name of the member to validate or null to validate the whole object.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.DynamicObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.ToStringName">
            <summary>
            Returns the name used as the return of a ToString() call.
            </summary>
            <value>The name used as the return of a ToString() call.</value>
            <returns>
            The name used as the return of a ToString() call, or null if the default value is to be used.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.ClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <value>The class name.</value>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.ComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <value>The component name.</value>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Converter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <value>The converter.</value>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"/> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"/> for this object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.DefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <value>The default event.</value>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"/> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.DefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <value>The default property.</value>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Editors">
            <summary>
            Gets the editors.
            </summary>
            <value>The editors.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Events">
            <summary>
            Gets the events.
            </summary>
            <value>The events.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DynamicObjectProperty">
            <summary>
            Represents a dynamic object property.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DynamicObjectProperty"/> class.
            </summary>
            <param name="descriptor">The descriptor.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.#ctor(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DynamicObjectProperty"/> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The property type.</param>
            <param name="attributes">The property custom attributes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.Construct(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Constructs the current instance.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The property type.</param>
            <param name="attributes">The property custom attributes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>
            true if resetting the component changes its value; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.GetValue(System.Object)">
            <summary>
            When overridden in a derived class, gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>
            The value of a property for a given component.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.ResetValue(System.Object)">
            <summary>
            When overridden in a derived class, resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>
            true if the property should be persisted; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.HasDefaultValue">
            <summary>
            Gets a value indicating whether this instance has a default value.
            </summary>
            <value>
            	<c>true</c> if this instance has a default value; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of component this property is bound to. When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)"/> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)"/> methods are invoked, the object specified might be an instance of this type.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.IsReadOnly">
            <summary>
            When overridden in a derived class, gets a value indicating whether this property is read-only.
            </summary>
            <value></value>
            <returns>true if the property is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of the property.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Web.Utilities.EditableUri">
            <summary>
                Provides an editable object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="uriString">A string that identifies the resource to be represented by the instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.String,System.UriKind)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="uriString">A string that identifies the resource to be represented by the instance.</param>
            <param name="uriKind">Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="relativeUri">The relative URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.Uri,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="relativeUri">The relative URI to add to the base URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="streamingContext">The streaming context.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.GetComponents(System.UriComponents,System.UriFormat)">
            <summary>
            Gets the specified components of the current instance using the specified escaping for special characters.
            </summary>
            <param name="components">A bitwise combination of the UriComponents values that specifies which parts of the current instance to return to the caller.</param>
            <param name="format">One of the UriFormat values that controls how special characters are escaped.</param>
            <returns>A string that contains the components.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.GetLeftPart(System.UriPartial)">
            <summary>
            Gets the specified portion of a uri instance.
            </summary>
            <param name="part">One of the UriPartial values that specifies the end of the URI portion to return.</param>
            <returns>A string that contains the specified portion of the uri instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.IsBaseOf(System.Uri)">
            <summary>
            Determines whether the current uri instance is a base of the specified uri instance.
            </summary>
            <param name="uri">The specified uri instance to test.</param>
            <returns>true if the current uri instance is a base of uri; otherwise, false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.IsWellFormedOriginalString">
            <summary>
            Indicates whether the string used to construct this uri was well-formed and is not required to be further escaped.
            </summary>
            <returns>A bool value that is true if the string was well-formed in accordance with RFC 2396 and RFC 2732; else false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.MakeRelativeUri(System.Uri)">
            <summary>
            Determines the difference between two uri instances.
            </summary>
            <param name="toUri">The URI to compare to the current URI.</param>
            <returns>If the hostname and scheme of this URI instance and toUri are the same, then this method returns a relative uri that, when appended to the current URI instance, yields toUri. If the hostname or scheme is different, then this method returns a Uri that represents the toUri parameter.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.Equals(CodeFluent.Runtime.Web.Utilities.EditableUri)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.op_Equality(CodeFluent.Runtime.Web.Utilities.EditableUri,CodeFluent.Runtime.Web.Utilities.EditableUri)">
            <summary>
            Determines whether two EditableUri instances have the same value.
            </summary>
            <param name="uri1">A EditableUri instance to compare with uri2.</param>
            <param name="uri2">A EditableUri instance to compare with uri1.</param>
            <returns>
            A bool value that is true if the EditableUri instances are equivalent; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.op_Inequality(CodeFluent.Runtime.Web.Utilities.EditableUri,CodeFluent.Runtime.Web.Utilities.EditableUri)">
            <summary>
            Determines whether two EditableUri instances do not have the same value.
            </summary>
            <param name="uri1">A EditableUri instance to compare with uri2.</param>
            <param name="uri2">A EditableUri instance to compare with uri1.</param>
            <returns>
            A bool value that is true if the EditableUri instances are not equivalent; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.AbsolutePath">
            <summary>
            Gets or sets the absolute path of the URI.
            </summary>
            <value>A string containing the absolute path to the resource.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.AbsoluteUri">
            <summary>
            Gets the absolute URI.
            </summary>
            <value>A string containing the entire URI.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Authority">
            <summary>
            Gets the Domain Name System (DNS) host name or IP address and the port number for a server.
            </summary>
            <value>A string containing the authority component of the URI represented by this instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.DnsSafeHost">
            <summary>
            Gets an unescaped host name that is safe to use for DNS resolution.
            </summary>
            <value>A string that contains the unescaped host part of the URI that is suitable for DNS resolution; or the original unescaped host string, if it is already suitable for resolution.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Fragment">
            <summary>
            Gets or sets the escaped URI fragment.
            </summary>
            <value>A string that contains any URI fragment information.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EscapeParameterSeparator">
            <summary>
            Gets or sets a value indicating whether the parameter separator (ampersand) must be escaped.
            </summary>
            <value>
            	<c>true</c> if the parameter separator must be escaped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Host">
            <summary>
            Gets or sets the host component of this instance.
            </summary>
            <value>A string that contains the host name. This is usually the DNS host name or IP address of the server.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.HostNameType">
            <summary>
            Gets the type of the host name specified in the URI.
            </summary>
            <value>A member of the UriHostNameType enumeration.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsDefaultPort">
            <summary>
            Gets whether the port value of the URI is the default for this scheme.
            </summary>
            <value>
            A bool value that is true if the value in the Port property is the default port for this scheme; otherwise, false.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsFile">
            <summary>
            Gets a value indicating whether the specified uri is a file URI.
            </summary>
            <value>A bool value that is true if the uri is a file URI; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsLoopback">
            <summary>
            Gets whether the specified uri references the local host.
            </summary>
            <value>A bool value that is true if this uri references the local host; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsAbsoluteUri">
            <summary>
            Gets whether the uri instance is absolute.
            </summary>
            <value>A bool value that is true if the uri instance is absolute; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsUnc">
            <summary>
            Gets whether the specified uri is a universal naming convention (UNC) path.
            </summary>
            <value>A bool value that is true if the uri is a UNC path; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.LocalPath">
            <summary>
            Gets a local operating-system representation of a file name.
            </summary>
            <value>A string that contains the local operating-system representation of a file name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.OriginalString">
            <summary>
            Gets the original URI string that was passed to the uri constructor.
            </summary>
            <value>A string containing the exact URI specified when this instance was constructed; otherwise, string.Empty.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.PathAndQuery">
            <summary>
            Gets the AbsolutePath and Query properties separated by a question mark (?).
            </summary>
            <value>A string that contains the AbsolutePath and Query properties separated by a question mark (?).</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Port">
            <summary>
            Gets or sets the port number of this URI.
            </summary>
            <value>An int value that contains the port number for this URI.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Query">
            <summary>
            Gets or sets any query information included in the specified URI.
            </summary>
            <value>A string that contains any query information included in the specified uri.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Scheme">
            <summary>
            Gets or sets the scheme name for this URI.
            </summary>
            <value>A string that contains the scheme for this URI, converted to lowercase.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Segments">
            <summary>
            Gets an array containing the path segments that make up the specified URI.
            </summary>
            <value>A string array that contains the path segments that make up the specified uri.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.UserEscaped">
            <summary>
            Indicates that the URI string was completely escaped before the uri instance was created.
            </summary>
            <value>A bool value that is true if the URI string was completely escaped before the uri instance was created; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.UserInfo">
            <summary>
            Gets or sets the user name, password, or other user-specific information associated with the specified URI.
            </summary>
            <value>A string that contains the user information associated with the URI. The value does not include the '@' character reserved for delimiting the user information part of the URI.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Uri">
            <summary>
            Gets the underlying URI object.
            </summary>
            <value>An Uri instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Parameters">
            <summary>
            Gets a collection of uri parameters.
            </summary>
            <value>An instance of the EditableUriParameterCollection type.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection">
            <summary>
            Represents a collection of EditableUri parameters.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.GetQueryString">
            <summary>
            Gets the query string.
            </summary>
            <returns>A string representing the query string or null if there are no parameters.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Set(System.String,System.Object)">
            <summary>
            Sets the specified parameter value.
            If the parameter does not exits, it will be added, otherwise, it's value will be replaced.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.RemoveAll">
            <summary>
            Removes all parameters.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Remove(System.String)">
            <summary>
            Removes the specified parameter.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.GetValue``1(System.String,``0)">
            <summary>
            Gets a typed parameter value.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value if the parameter was not found or could not be converted to the target type.</param>
            <returns>An instance of the T type or defaultValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Names">
            <summary>
            Gets the parameters names.
            </summary>
            <value>A list of string representing the parameters names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Values">
            <summary>
            Gets the parameters values.
            </summary>
            <value>A list of typed object representing the parameters values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Item(System.String)">
            <summary>
            Gets or sets a parameter with the specified name.
            </summary>
            <value>The parameter value or null if it does not exists.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Count">
            <summary>
            Gets the parameters count.
            </summary>
            <value>An int value representing the number of parameters in the collection.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.EndUserKey">
            <summary>
            A utility class to create nice displayable end user product keys.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EndUserKey.TryOpenEndUserKey(System.String,System.String,System.String,System.Byte[]@)">
            <summary>
            Tries to open an end user key.
            </summary>
            <param name="key">The master key that was used to create the key. This must stay private. May not be null.</param>
            <param name="userName">The user name that was used to create the key. May not be null.</param>
            <param name="endUserKey">The end user key. May not be null.</param>
            <param name="secret">The secret that was embedded in the key.</param>
            <returns>true if the key was successfully opened; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EndUserKey.CreateEndUserKey(System.String,System.String,System.Byte[])">
            <summary>
            Creates a nice displayable end user product key.
            </summary>
            <param name="key">The master key to use. This must stay private. May not be null.</param>
            <param name="userName">The user name (can be any string). May not be null.</param>
            <param name="secret">The secret to embed with the key. Size of the secret will have an inpact on the final end user key size (0-15 bytes, 16-31, etc.).  May not be null.</param>
            <returns>A string optionally separated with dashes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EndUserKey.CreateEndUserKey(System.String,System.String,System.Byte[],System.Int32)">
            <summary>
            Creates a nice displayable end user product key.
            </summary>
            <param name="key">The master key to use. This must stay private. May not be null.</param>
            <param name="userName">The user name (can be any string). May not be null.</param>
            <param name="secret">The secret to encode with the key. Size of the secret will have an inpact on the final end user key size (0-15 bytes, 16-31, etc.).  May not be null.</param>
            <param name="dashesChunkSize">Interval between two dashes in the middle of the key.</param>
            <returns>A string optionally separated with dashes.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1">
            <summary>
            Defines a DbDataReader implementation based on an enumerable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1"/> class.
            </summary>
            <param name="source">The enumerable. May not be null.</param>
            <param name="propertyNames">The property names. If empty or null, the list will be constructed automatically using the public instance properties.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetProperties(System.String[])">
            <summary>
            Gets a list of properties to use.
            </summary>
            <param name="propertyNames">The property names. If empty or null, the list will be constructed automatically using the public instance properties.</param>
            <returns>A list of PropertyInfo instances.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.BuildDataRow(System.Data.DataTable,System.Int32,System.Reflection.PropertyInfo)">
            <summary>
            Builds a data row from the property.
            </summary>
            <param name="table">The input table. May not be null.</param>
            <param name="ordinal">The ordinal.</param>
            <param name="property">The property. May not be null.</param>
            <returns>A new instance of the DataRow type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetSchemaTable">
            <summary>
            Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Common.DbDataReader" />.
            </summary>
            <returns>
            A <see cref="T:System.Data.DataTable" /> that describes the column metadata.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetProperty(System.Int32)">
            <summary>
            Gets a property using its ordinal.
            </summary>
            <param name="ordinal">The ordinal.</param>
            <returns>A PropertyInfo instance or null if not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.Read">
            <summary>
            Advances the reader to the next record in a result set.
            </summary>
            <returns>
            true if there are more rows; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.IsDBNull(System.Int32)">
            <summary>
            Gets a value that indicates whether the column contains nonexistent or missing values.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            true if the specified column is equivalent to <see cref="T:System.DBNull" />; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.Close">
            <summary>
            Closes the <see cref="T:System.Data.Common.DbDataReader" /> object.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a byte.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column, starting at location indicated by <paramref name="dataOffset" />, into the buffer, starting at the location indicated by <paramref name="bufferOffset" />.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <param name="dataOffset">The index within the row from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to copy the data.</param>
            <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
            <param name="length">The maximum number of characters to read.</param>
            <returns>
            The actual number of bytes read.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetChar(System.Int32)">
            <summary>
            Gets the value of the specified column as a single character.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column, starting at location indicated by <paramref name="dataOffset" />, into the buffer, starting at the location indicated by <paramref name="bufferOffset" />.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <param name="dataOffset">The index within the row from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to copy the data.</param>
            <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
            <param name="length">The maximum number of characters to read.</param>
            <returns>
            The actual number of characters read.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetDataTypeName(System.Int32)">
            <summary>
            Gets name of the data type of the specified column.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            A string representing the name of the data type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetDateTime(System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetDecimal(System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetDouble(System.Int32)">
            <summary>
            Gets the value of the specified column as a double-precision floating point number.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetFieldType(System.Int32)">
            <summary>
            Gets the data type of the specified column.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The data type of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetFloat(System.Int32)">
            <summary>
            Gets the value of the specified column as a single-precision floating point number.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetGuid(System.Int32)">
            <summary>
            Gets the value of the specified column as a globally-unique identifier (GUID).
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetInt16(System.Int32)">
            <summary>
            Gets the value of the specified column as a 16-bit signed integer.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetInt32(System.Int32)">
            <summary>
            Gets the value of the specified column as a 32-bit signed integer.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetInt64(System.Int32)">
            <summary>
            Gets the value of the specified column as a 64-bit signed integer.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetName(System.Int32)">
            <summary>
            Gets the name of the column, given the zero-based column ordinal.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The name of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetOrdinal(System.String)">
            <summary>
            Gets the column ordinal given the name of the column.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>
            The zero-based column ordinal.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetString(System.Int32)">
            <summary>
            Gets the value of the specified column as an instance of <see cref="T:System.String" />.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetValue(System.Int32)">
            <summary>
            Gets the value of the specified column as an instance of <see cref="T:System.Object" />.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>
            The value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.GetValues(System.Object[])">
            <summary>
            Gets all attribute columns in the collection for the current row.
            </summary>
            <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</param>
            <returns>
            The number of instances of <see cref="T:System.Object" /> in the array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.NextResult">
            <summary>
            Advances the reader to the next result when reading the results of a batch of statements.
            </summary>
            <returns>
            true if there are more result sets; otherwise false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.Source">
            <summary>
            Gets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.Properties">
            <summary>
            Gets the list of properties.
            </summary>
            <value>
            The list of properties.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row.
            </summary>
            <returns>
            The depth of nesting for the current row.
              </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
            <returns>
            The number of columns in the current row.
              </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.HasRows">
            <summary>
            Gets a value that indicates whether this <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows.
            </summary>
            <returns>true if the <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows; otherwise false.
              </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.IsClosed">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Data.Common.DbDataReader" /> is closed.
            </summary>
            <returns>true if the <see cref="T:System.Data.Common.DbDataReader" /> is closed; otherwise false.
              </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
            <returns>
            The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.
              </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.Item(System.String)">
            <summary>
            Gets the value of the specified column as an instance of <see cref="T:System.Object" />.
            </summary>
            <param name="name">The name.</param>
            <returns>The value.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.EnumerableDbDataReader`1.Item(System.Int32)">
            <summary>
            Gets the value of the specified column as an instance of <see cref="T:System.Object" />.
            </summary>
            <param name="ordinal">The ordinal.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.EnumeratorConverter`2">
            <summary>
            A utility class to convert generic enumerators
            </summary>
            <typeparam name="T1">The first generic type. T1 needs to be of T2 type.</typeparam>
            <typeparam name="T2">The second generic type. T2 needs to be a base class for T1.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerator(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Converts the enumerator.
            </summary>
            <param name="e">The enumerator.</param>
            <returns>A T1 instances enumerator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerable(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Converts the enumerable.
            </summary>
            <param name="e">The enumerable.</param>
            <returns>A T1 instances enumerable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerable(System.Collections.Generic.IEnumerator{`1})">
            <summary>
            Converts the enumerable.
            </summary>
            <param name="e">The enumerable.</param>
            <returns>A T1 instances enumerable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerator(System.Collections.Generic.IEnumerator{`1})">
            <summary>
            Converts the enumerator.
            </summary>
            <param name="e">The enumerator.</param>
            <returns>A T1 instances enumerator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerator(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Converts the enumerator.
            </summary>
            <param name="e">The enumerator.</param>
            <returns>A T2 instances enumerator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerable(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Converts the enumerable.
            </summary>
            <param name="e">The enumerable.</param>
            <returns>A T2 instances enumerable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerable(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Converts the enumerable.
            </summary>
            <param name="e">The enumerable.</param>
            <returns>A T2 instances enumerable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerator(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Converts the enumerator.
            </summary>
            <param name="e">The enumerator.</param>
            <returns>A T2 instances enumerator.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ErrorEventArgs">
            <summary>
            Provides data for an error event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ErrorEventArgs"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ErrorEventArgs.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>The error.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ErrorEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Utilities.ErrorEventArgs"/> is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert">
            <summary>
            Provides plural to singular and singular to plural conversion of nouns in a specific culture.
            This implementation is not strictly a general inflector, as it's been designed for table name conversion.
            For example, we don't change a table named "People" in a table named "Person".
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.IsSingular(System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the specified word is singular.
            </summary>
            <param name="word">The word.</param>
            <param name="culture">The culture in which the word is expressed.</param>
            <returns>
            	<c>true</c> if the specified word is singular; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.IsPlural(System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the specified word is plural.
            </summary>
            <param name="word">The word.</param>
            <param name="culture">The culture in which the word is expressed.</param>
            <returns>
            	<c>true</c> if the specified word is plural; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.SingularToPlural(System.String,System.Globalization.CultureInfo)">
            <summary>
            Convers a word from singular to plural.
            </summary>
            <param name="word">The singular word to convert.</param>
            <param name="culture">The culture.</param>
            <returns>The plural word.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.PluralToSingular(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts a word from plural to singular.
            </summary>
            <param name="word">The plural word to convert.</param>
            <param name="culture">The culture.</param>
            <returns>The singular word.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.GetConverter(System.Globalization.CultureInfo,CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter)">
            <summary>
            Gets a converter for a given language.
            </summary>
            <param name="culture">The culture. May not be null.</param>
            <param name="defaultConverter">The default converter. If null, the english converter will be used.</param>
            <returns>An instance of the IGrammaticalNumberConverter interface.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.GrammarNumberConvertors">
            <summary>
            Gets a semicolon separated list of convertors types.
            </summary>
            <value>The grammar number convertors.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.Converters">
            <summary>
            Gets a list of configured converters.
            </summary>
            <value>A list of configured converters.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.EnglishConverter">
            <summary>
            Gets the english converter.
            </summary>
            <value>The english converter.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.FrenchConverter">
            <summary>
            Gets the french converter.
            </summary>
            <value>The french converter.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter">
            <summary>
            Defines a class that can convert nouns from plural to singular.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.IsSingular(System.String)">
            <summary>
            Determines whether the specified word is singular.
            </summary>
            <param name="word">The word.</param>
            <returns>
            	<c>true</c> if the specified word is singular; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.SingularToPlural(System.String)">
            <summary>
            Convers a word from singular to plural.
            </summary>
            <param name="word">The singular word to convert.</param>
            <returns>The plural word.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.IsPlural(System.String)">
            <summary>
            Determines whether the specified word is plural.
            </summary>
            <param name="word">The word.</param>
            <returns>
            	<c>true</c> if the specified word is plural; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.PluralToSingular(System.String)">
            <summary>
            Converts a word from plural to singular.
            </summary>
            <param name="word">The plural word to convert.</param>
            <returns>The singular word.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.Culture">
            <summary>
            Gets the supported culture for this converter
            </summary>
            <value>The culture.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IEquivalent`1">
            <summary>
            Defines a generalized method that a class implements to create a type-specific method for determining equivalence of instances. 
            </summary>
            <typeparam name="T">The type of objects to compare</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IEquivalent`1.IsEquivalent(`0)">
            <summary>
            Indicates whether the current object is equal to another object of the same type. 
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>
            	<c>true</c> if the specified object is equivalent; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs">
            <summary>
            Provides enhanced data for the CollectionChanged event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs"/> class.
            </summary>
            <param name="action">One of the CollectionChangeAction values that specifies how the collection changed.</param>
            <param name="element">An Object that specifies the instance of the collection where the change occurred.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs"/> class.
            </summary>
            <param name="action">One of the CollectionChangeAction values that specifies how the collection changed.</param>
            <param name="element">An Object that specifies the instance of the collection where the change occurred.</param>
            <param name="index">The element index in the collection.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs.Index">
            <summary>
            Gets the element index.
            </summary>
            <value>The element index.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IOUtilities">
            <summary>
            Represents IO utilities.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.IOUtilities.DefaultWrapSharingViolationsRetryCount">
            <summary>
            Defines the default number of retries for sharing violations wrapping.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.IOUtilities.DefaultWrapSharingViolationsWaitTime">
            <summary>
            Defines the default wait time in milliseconds for sharing violations wrapping.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.IOUtilities.MaxPath">
            <summary>
            Defines the The maximum character length of a path.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.IOUtilities.DirectorySeparatorChar">
            <summary>
            Defines the directory separator character.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.IOUtilities.AltDirectorySeparatorChar">
            <summary>
            Defines the alternate directory separator character.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExcludedApplicationFromErrorReporting">
            <summary>
            Excludes the current application from error reporting.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExcludedApplicationFromErrorReporting(System.String)">
            <summary>
            Excludes an application from error reporting.
            </summary>
            <param name="executableName">Name of the executable. If null, the current process will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolations(CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsCallback)">
            <summary>
            Wraps sharing violations that could occur on a file IO operation.
            </summary>
            <param name="action">The action to execute. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolations(CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsCallback,System.Int32,System.Int32)">
            <summary>
            Wraps sharing violations that could occur on a file IO operation.
            </summary>
            <param name="action">The action to execute. May not be null.</param>
            <param name="retryCount">The retry count.</param>
            <param name="waitTime">The wait time in milliseconds.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolations(CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsCallback,CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsExceptionsCallback,System.Int32,System.Int32)">
            <summary>
            Wraps sharing violations that could occur on a file IO operation.
            </summary>
            <param name="action">The action to execute. May not be null.</param>
            <param name="exceptionsCallback">The exceptions callback. May be null.</param>
            <param name="retryCount">The retry count.</param>
            <param name="waitTime">The wait time in milliseconds.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.IsSharingViolation(System.IO.IOException)">
            <summary>
            Determines whether the specified exception is a sharing violation exception.
            </summary>
            <param name="exception">The exception. May not be null.</param>
            <returns>
            	<c>true</c> if the specified exception is a sharing violation exception; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetHResult(System.IO.IOException,System.Int32)">
            <summary>
            Gets the HRESULT of the specified exception.
            </summary>
            <param name="exception">The exception to test. May not be null.</param>
            <param name="defaultValue">The default value in case of an error.</param>
            <returns>The HRESULT value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetHResult(System.IO.IOException,System.UInt32)">
            <summary>
            Gets the HRESULT of the specified exception.
            </summary>
            <param name="exception">The exception to test. May not be null.</param>
            <param name="defaultValue">The default value in case of an error.</param>
            <returns>The HRESULT value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExtractFileText(System.String,System.Text.Encoding,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text file and optionally adds an error.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="encoding">The file character encoding. May not be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExtractFileText(System.IO.Stream,System.Text.Encoding,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text stream and optionally adds an error.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="encoding">The file character encoding. May not be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExtractText(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from another text and optionally adds an error.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExtractText(System.IO.TextReader,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text reader and optionally adds an error.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.FileReadLines(System.String,System.Text.Encoding,System.Int32)">
            <summary>
            Opens a file, reads a specific number of lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="encoding">The encoding applied to the contents of the file. If null, UTF-8 will be used.</param>
            <param name="count">The number of lines to read.</param>
            <returns>A string array containing lines from the file.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathIsEqual(System.String,System.String)">
            <summary>
            Determines if a path is equal to another path.
            </summary>
            <param name="path1">The first path. May not be null.</param>
            <param name="path2">The second path. May not be null.</param>
            <returns>
            	<c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathIsChildOrEqual(System.String,System.String)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <returns>
            	<c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathIsChild(System.String,System.String)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <returns>
            	<c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathIsChild(System.String,System.String,System.Boolean)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <param name="normalize">if set to <c>true</c> paths are normalized prior to comparison.</param>
            <returns>
              <c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.FileNotEmptyExists(System.String)">
            <summary>
            Determines if a file exists and is not empty. Eats all exceptions.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>
            	<c>true</c> if the file exists and its size is not 0; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.FileExists(System.String)">
            <summary>
            Determines if a file exists. Eats all exceptions.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>
            	<c>true</c> if the file exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.DirectoryDelete(System.String,System.Boolean)">
            <summary>
            Deletes a directory. Eats all exceptions.
            </summary>
            <param name="path">The name of the directory to remove.</param>
            <param name="recursive">if set to <c>true</c> all directories, subdirectories, and files in path will be deleted.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.DirectoryExists(System.String)">
            <summary>
            Determines if a directory exists. Eats all exceptions.
            </summary>
            <param name="path">The directory path. May not be null.</param>
            <returns>
            	<c>true</c> if the directory exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathOverwrite(System.String,System.String)">
            <summary>
            Copies a file forcing overwrite if needed.
            </summary>
            <param name="source">The source file. May not be null.</param>
            <param name="destination">The destination file. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathOverwrite(System.String,System.String,System.Boolean)">
            <summary>
            Copies a file forcing overwrite if needed.
            </summary>
            <param name="source">The source file. May not be null.</param>
            <param name="destination">The destination file. May not be null.</param>
            <param name="unprotect">if set to <c>true</c> unprotects the file if the ReadOnly attribute is set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathMove(System.String,System.String)">
            <summary>
            Moves a file forcing overwrite if needed.
            </summary>
            <param name="source">The source file. May not be null.</param>
            <param name="destination">The destination file. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathMove(System.String,System.String,System.Boolean)">
            <summary>
            Moves a file forcing overwrite if needed.
            </summary>
            <param name="source">The source file. May not be null.</param>
            <param name="destination">The destination file. May not be null.</param>
            <param name="unprotect">if set to <c>true</c> unprotects the file if the ReadOnly attribute is set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathDelete(System.String)">
            <summary>
            Deletes a file.
            </summary>
            <param name="filePath">The path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathDelete(System.String,System.Boolean)">
            <summary>
            Deletes a file.
            </summary>
            <param name="filePath">The path. May not be null.</param>
            <param name="unprotect">if set to <c>true</c> unprotects the file if the ReadOnly attribute is set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathMakeRelativeIfChild(System.String,System.String)">
            <summary>
            Determines the difference between two paths if path2 is a child of path1. This method returns path2 relatively to path1.
            </summary>
            <param name="path1">The path1. May not be null.</param>
            <param name="path2">The path2. May not be null.</param>
            <returns>The relative path. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathMakeRelative(System.String,System.String)">
            <summary>
            Determines the difference between two absolute paths. This method returns path2 relatively to path1.
            If paths are relative, the method will try to expand them using environment variables.
            </summary>
            <param name="path1">The path1. May not be null.</param>
            <param name="path2">The path2. May not be null.</param>
            <returns>The relative path. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathCreateDirectory(System.String)">
            <summary>
            Makes sure a directory exists for a given file path.
            </summary>
            <param name="filePath">The file path. Note this is not to be confused with the directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathHasInvalidChars(System.String)">
            <summary>
            Determines if the specified path has invalid chars.
            </summary>
            <param name="path">The input path. If null, true will be returned.</param>
            <returns>true if the path has invalid chars; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathToValidFilePath(System.String)">
            <summary>
            Converts a text into a valid file path.
            </summary>
            <param name="filePath">The file name.</param>
            <returns>
            A valid file name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathToValidFilePath(System.String,System.String,System.String)">
            <summary>
            Converts a text into a valid file path.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="reservedNameFormat">The reserved format to use for reserved names. If null '_{0}_' will be used.</param>
            <param name="reservedCharFormat">The reserved format to use for reserved characters. If null '_x{0}_%' will be used.</param>
            <returns>
            A valid file name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathToValidFileName(System.String)">
            <summary>
            Converts a text into a valid file name.
            </summary>
            <param name="fileName">The file name.</param>
            <returns>
            A valid file name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathToValidFileName(System.String,System.String,System.String)">
            <summary>
            Converts a text into a valid file name.
            </summary>
            <param name="fileName">The file name.</param>
            <param name="reservedNameFormat">The reserved format to use for reserved names. If null '_{0}_' will be used.</param>
            <param name="reservedCharFormat">The reserved format to use for reserved characters. If null '_x{0}_' will be used.</param>
            <returns>
            A valid file name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathIsValidFileName(System.String)">
            <summary>
            Determines whether the specified text represents a valid file name.
            </summary>
            <param name="fileName">The file name.</param>
            <returns>
            	<c>true</c> if the specified text represents a valid file name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathCheckWriteAccess(System.String)">
            <summary>
            Check write access for a given directory path.
            </summary>
            <param name="directoryPath">The directory path to check. May not be null.</param>
            <returns>
            	<c>true</c> if the given path is a writable directory path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathUnprotect(System.String)">
            <summary>
            Unprotects the given file path.
            </summary>
            <param name="path">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.UrlEncode(System.String)">
            <summary>
            Encodes a url string without a reference to the System.Web assembly.
            </summary>
            <param name="text">The input text.</param>
            <returns>A encoded string</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.UrlDecode(System.String)">
            <summary>
            Decodes a url string without a reference to the System.Web assembly.
            </summary>
            <param name="text">The input text.</param>
            <returns>A decoded string</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.UrlDirectoryFromUrl(System.String)">
            <summary>
            Computes the directory url from a given url.
            </summary>
            <param name="uriString">The uri string. May not be null.</param>
            <returns>The computed url. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.UrlDirectoryFromUrl(System.String,System.Boolean)">
            <summary>
            Computes the directory url from a given url.
            </summary>
            <param name="uriString">The uri string. May not be null.</param>
            <param name="trailingDirectorySeparator">if set to <c>true</c>, a trailing directory separator will be added.</param>
            <returns>The computed url. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.DirectoryUrlFromUrl(System.Uri)">
            <summary>
            Computes the directory <see cref="T:System.Uri"/> from a given <see cref="T:System.Uri"/> instance.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> instance to use.</param>
            <returns>The computed Uri instance. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.DirectoryUrlFromUrl(System.Uri,System.Boolean)">
            <summary>
            Computes the directory <see cref="T:System.Uri"/> from a given <see cref="T:System.Uri"/> instance.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> instance to use.</param>
            <param name="trailingDirectorySeparator">if set to <c>true</c>, a trailing directory separator will be added.</param>
            <returns>
            The computed Uri instance. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.SchemeHostPortFromUrl(System.Uri)">
            <summary>
            Computes a combined scheme+host+port url from a given Uri instance.
            </summary>
            <param name="uri">The input Uri instance. May not be null.</param>
            <returns>The computed url. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.SchemeHostPortFromUrl(System.Uri,System.Boolean)">
            <summary>
            Computes a combined scheme+host+port url from a given Uri instance.
            </summary>
            <param name="uri">The input Uri instance. May not be null.</param>
            <param name="appendAltDirectorySeparatorChar">if set to <c>true</c> append the alternate directory separator character will be appended to the resulting url.</param>
            <returns>The computed url. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.EnumerateFileSystemEntries(System.String,System.Boolean)">
            <summary>
            Enumerates all the file system entries in a directory. This method does not throw exceptions on locked files or other errors.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="recursive">if set to <c>true</c> the enumeration is recursive.</param>
            <returns>A list of find data.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetLockingProcesses(System.String)">
            <summary>
            Get a list of processes that locks a file.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetLockingProcesses(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get a list of processes that locks a list of files.
            </summary>
            <param name="filePaths">The list of file paths. May not be null.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetSharingViolationException(System.String,System.Exception)">
            <summary>
            Gets a sharing violation exception.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="innerException">The inner exception. May be null.</param>
            <returns>An exception instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetProcessesOpeningFile(System.String)">
            <summary>
            Gets a list of processes opening a given file.
            </summary>
            <param name="filePath">The searched file path. May not be null.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetProcessesOpeningFile(System.String,System.Boolean)">
            <summary>
            Gets a list of processes opening a given file.
            </summary>
            <param name="filePath">The searched file path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown; otherwise an empty list will be returned.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetOpenedFiles(System.String,System.Int32)">
            <summary>
            Gets a list of processes and the files they have opened.
            This method is based on the http://www.sysinternals.com tool named HANDLE.EXE.
            This tool must be accessible to the running program for this method to succeed.
            </summary>
            <param name="searchExpression">A search expression filter. The expected syntax is a regular expression. To filter a path, you must double the directory separator character. If null, no filter will be applied. </param>
            <param name="processId">A process identifier filter. If lower than or equal to zero, no filter will be applied.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetOpenedFiles">
            <summary>
            Gets a list of all processes and the files they have opened.
            This method is based on the http://www.sysinternals.com tool named HANDLE.EXE.
            This tool must be accessible to the running program for this method to succeed.
            </summary>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetOpenedFiles(System.String)">
            <summary>
            Gets a list of all processes and the files they have opened.
            This method is based on the http://www.sysinternals.com tool named HANDLE.EXE.
            This tool must be accessible to the running program for this method to succeed.
            </summary>
            <param name="searchExpression">A search expression filter. The expected syntax is a regular expression. To filter a path, you must double the directory separator character. If null, no filter will be applied. </param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetOpenedFiles(System.String,System.String)">
            <summary>
            Gets a list of processes and the files they have opened.
            This method is based on the http://www.sysinternals.com tool named HANDLE.EXE.
            This tool must be accessible to the running program for this method to succeed.
            </summary>
            <param name="searchExpression">A search expression filter. The expected syntax is a regular expression. To filter a path, you must double the directory separator character. If null, no filter will be applied. </param>
            <param name="processNameOrId">A process name or identifier filter. If null, no filter will be applied.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.LoadImageFromFileWithoutLock(System.String)">
            <summary>
            Loads the image from a file without keeping a lock on it. This is to circumvent a bug in GDI+: http://stackoverflow.com/questions/788335/why-does-image-fromfile-keep-a-file-handle-open-sometimes
            </summary>
            <param name="filePath">The file path.</param>
            <returns>An image instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.LoadImageFromFileWithoutLock(System.String,System.Boolean)">
            <summary>
            Loads the image from a file without keeping a lock on it. This is to circumvent a bug in GDI+: http://stackoverflow.com/questions/788335/why-does-image-fromfile-keep-a-file-handle-open-sometimes
            </summary>
            <param name="filePath">The file path.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            An image instance or null.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsCallback">
            <summary>
            Defines a sharing violation wrapper delegate.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsExceptionsCallback">
            <summary>
            Defines a sharing violation wrapper delegate for handling exception.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess">
            <summary>
            Defines a process and its opened files.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess.FileNames">
            <summary>
            Gets a list of file names opened by this process.
            </summary>
            <value>The list of file names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess.Process">
            <summary>
            Gets the process instance. May be null if the process has terminated.
            </summary>
            <value>The process instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess.Id">
            <summary>
            Gets the process identifier.
            </summary>
            <value>The process identifier.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess.Name">
            <summary>
            Gets the process name.
            </summary>
            <value>The process name.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JobObject">
            <summary>
            A utility class that represents a Windows job object. Job objects allow groups of processes to be managed as a unit.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JobObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JobObject"/> class. The associated job object will have no name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JobObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JobObject"/> class.
            </summary>
            <param name="name">The job object name. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JobObject.ReleaseHandle">
            <summary>
            When overridden in a derived class, executes the code required to free the handle.
            </summary>
            <returns>
            true if the handle is released successfully; otherwise, in the event of a catastrophic failure, false. In this case, it generates a releaseHandleFailed MDA Managed Debugging Assistant.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JobObject.Terminate">
            <summary>
            Terminates all processes currently associated with the job. If the job is nested, this function terminates all processes currently associated with the job and all of its child jobs in the hierarchy.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JobObject.Terminate(System.Int32)">
            <summary>
            Terminates all processes currently associated with the job. If the job is nested, this function terminates all processes currently associated with the job and all of its child jobs in the hierarchy.
            </summary>
            <param name="exitCode">The exit code to be used by all processes and threads in the job object.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JobObject.AssignProcess(System.IntPtr)">
            <summary>
            Assigns a process to an existing job object.
            </summary>
            <param name="processHandle">The process handle.</param>
            <returns>
            true if the function succeeds; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JobObject.AssignProcess(System.IntPtr,System.Boolean)">
            <summary>
            Assigns a process to an existing job object.
            </summary>
            <param name="processHandle">The process handle.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the function succeeds; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JobObject.SetLimits(CodeFluent.Runtime.Utilities.JobObjectLimits)">
            <summary>
            Sets limits to the jhob.
            </summary>
            <param name="limits">The limits. May not be null.</param>
            <returns>
            true if the function succeeds; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JobObject.SetLimits(CodeFluent.Runtime.Utilities.JobObjectLimits,System.Boolean)">
            <summary>
            Sets limits to the jhob.
            </summary>
            <param name="limits">The limits. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>
            true if the function succeeds; otherwise false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObject.IsInvalid">
            <summary>
            When overridden in a derived class, gets a value indicating whether the handle value is invalid.
            </summary>
            <returns>true if the handle value is invalid; otherwise, false.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JobObjectLimitFlags">
            <summary>
            Defines options for a job object.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JobObjectLimitFlags.DieOnUnhandledException">
            <summary>
            Forces a call to the SetErrorMode function with the SEM_NOGPFAULTERRORBOX flag for each process associated with the job.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JobObjectLimitFlags.BreakawayOk">
            <summary>
            If any process associated with the job creates a child process using the CREATE_BREAKAWAY_FROM_JOB flag while this limit is in effect, the child process is not associated with the job.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JobObjectLimitFlags.SilentBreakawayOk">
            <summary>
            Allows any process associated with the job to create child processes that are not associated with the job.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JobObjectLimitFlags.KillOnJobClose">
            <summary>
            Causes all processes associated with the job to terminate when the last handle to the job is closed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JobObjectLimitFlags.SubsetAffinity">
            <summary>
            Allows processes to use a subset of the processor affinity for all processes associated with the job.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JobObjectLimits">
            <summary>
            Defines a job object limits.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.Flags">
            <summary>
            Defines options for a job object.
            </summary>
            <value>
            The options for a job object.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.PerProcessUserTimeLimit">
            <summary>
            Gets or sets the per-process user-mode execution time limit, in 100-nanosecond ticks.
            </summary>
            <value>
            The per-process user-mode execution time limit, in 100-nanosecond ticks.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.PerJobUserTimeLimit">
            <summary>
            Gets or sets the per-job user-mode execution time limit, in 100-nanosecond ticks.
            </summary>
            <value>
            The per-job user-mode execution time limit, in 100-nanosecond ticks.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.MinimumWorkingSetSize">
            <summary>
            Gets or sets the minimum working set size for each process associated with the job.
            </summary>
            <value>
            The minimum working set size for each process associated with the job.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.MaximumWorkingSetSize">
            <summary>
            Gets or sets the maximum working set size for each process associated with the job.
            </summary>
            <value>
            The maximum working set size for each process associated with the job.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.ActiveProcessLimit">
            <summary>
            Gets or sets the active process limit for the job.
            </summary>
            <value>
            The active process limit for the job.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.Affinity">
            <summary>
            Gets or sets the processor affinity for all processes associated with the job.
            </summary>
            <value>
            The processor affinity for all processes associated with the job.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.PriorityClass">
            <summary>
            Gets or sets priority class for all processes associated with the job.
            </summary>
            <value>
            The priority class for all processes associated with the job.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.SchedulingClass">
            <summary>
            Gets or sets scheduling  class for all processes associated with the job.
            </summary>
            <value>
            The scheduling  class for all processes associated with the job.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.ProcessMemoryLimit">
            <summary>
            Gets or sets the limit for the virtual memory that can be committed by a process.
            </summary>
            <value>
            The limit for the virtual memory that can be committed by a process.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JobObjectLimits.JobMemoryLimit">
            <summary>
            Gets or sets limit for the virtual memory that can be committed for the job.
            </summary>
            <value>
            The limit for the virtual memory that can be committed for the job.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonSerializationOptions">
            <summary>
            Define options for JSON serialization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.None">
            <summary>
            No option.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseTypeDescriptor">
            <summary>
            Use Type Descriptor (including custom ones) when serializing custom objects.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseReflection">
            <summary>
            Use pure reflection when serializing custom objects.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseXmlIgnore">
            <summary>
            Avoid fields and properties marked with the XmlIgnore attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.DateFormatCustom">
            <summary>
            Use the format defined in the DateTimeFormat property of the JsonUtilitiesOptions class.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.SerializeFields">
            <summary>
            Serializes fields.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseISerializable">
            <summary>
            Use the ISerializable interface.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseIBinarySerialize">
            <summary>
            Use the IBinarySerialize interface.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.DateFormatJs">
            <summary>
            Use the [new Date(utc milliseconds)] format.
            Note this format is not generally supported by browsers native JSON parsers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.DateFormatIso8601">
            <summary>
            Use the ISO 8601 string format ('s' DateTime format).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseScriptIgnore">
            <summary>
            Avoid fields and properties marked with the ScriptIgnore attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.DateFormatRoundtripUtc">
            <summary>
            Use the ISO 8601 roundtrip string format ('o' DateTime format).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.EnumAsText">
            <summary>
            Serialize enum values as text.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.ContinueOnCycle">
            <summary>
            Continue serialization if a cycle was detected.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.ContinueOnValueError">
            <summary>
            Continue serialization if getting a value throws error.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.SkipNullPropertyValues">
            <summary>
            Don't serialize properties with a null value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.DateTimeOffsetFormatCustom">
            <summary>
            Use the format defined in the DateTimeOffsetFormat property of the JsonUtilitiesOptions class.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.SkipNullDateTimeValues">
            <summary>
            Don't serialize null date time values.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.AutoParseDateTime">
            <summary>
            Automatically parse date time.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.WriteKeysWithoutQuotes">
            <summary>
            Write dictionary keys without quotes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseXmlAttribute">
            <summary>
            Use the XML attribute for object apply. This attribute is obsolete.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.ByteArrayAsBase64">
            <summary>
            Serializes byte arrays as base 64 strings.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.StreamsAsBase64">
            <summary>
            Serializes streams as base 64 strings.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.SkipZeroValueTypes">
            <summary>
            Don't serialize value type with a zero value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseJsonAttribute">
            <summary>
            Use the JsonUtilities attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseJsonAttributeForApply">
            <summary>
            Use the JsonUtilities attribute for object apply.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.SkipDefaultValues">
            <summary>
            Don't serialize values equal to the default member (property, field) value, if defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.Default">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilities">
            <summary>
            A set of lightweight JSON utilities. See http://tools.ietf.org/html/rfc4627 for more information on JSON.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.Object)">
            <summary>
            Serializes the specified object. Supports anonymous and dynamic types.
            </summary>
            <param name="value">The object to serialize.</param>
            <returns>A JSON representation of the serialized object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.Object,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Serializes the specified object. Supports anonymous and dynamic types.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="options">Options to use for serialization.</param>
            <returns>
            A JSON representation of the serialized object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Serializes the specified object. Supports anonymous and dynamic types.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="options">Options to use for serialization.</param>
            <returns>
            A JSON representation of the serialized object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.IO.TextWriter,System.Object)">
            <summary>
            Serializes the specified object to the specified TextWriter. Supports anonymous and dynamic types.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="value">The object to serialize.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.IO.TextWriter,System.Object,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Serializes the specified object to the specified TextWriter. Supports anonymous and dynamic types.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="value">The object to serialize.</param>
            <param name="options">Options to use for serialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.IO.TextWriter,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Serializes the specified object to the specified TextWriter. Supports anonymous and dynamic types.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="value">The object to serialize.</param>
            <param name="options">Options to use for serialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String)">
            <summary>
            Deserializes an object from the specified text.
            </summary>
            <param name="text">The text text.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Type)">
            <summary>
            Deserializes an object from the specified text.
            </summary>
            <param name="text">The text text.</param>
            <param name="targetType">The required target type.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes an object from the specified text.
            </summary>
            <param name="text">The text text.</param>
            <param name="targetType">The required target type.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Type,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes an object from the specified text.
            </summary>
            <param name="text">The text text.</param>
            <param name="targetType">The required target type.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.IO.TextReader)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="reader">The input reader. May not be null.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Type)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="targetType">The required target type.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.IO.TextReader,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="reader">The input reader. May not be null.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.IO.TextReader,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="reader">The input reader. May not be null.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.String)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to deserialize.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.String,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to deserialize.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.String,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to deserialize.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Type,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="targetType">The required target type.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="targetType">The required target type.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Object)">
            <summary>
            Deserializes data from the specified text and populates a specified object instance.
            </summary>
            <param name="text">The text to deserialize.</param>
            <param name="target">The object instance to populate.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Object,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes data from the specified text and populates a specified object instance.
            </summary>
            <param name="text">The text to deserialize.</param>
            <param name="target">The object instance to populate.</param>
            <param name="options">Options to use for deserialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes data from the specified text and populates a specified object instance.
            </summary>
            <param name="text">The text to deserialize.</param>
            <param name="target">The object instance to populate.</param>
            <param name="options">Options to use for deserialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Object)">
            <summary>
            Deserializes data from the specified TextReader and populates a specified object instance.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="target">The object instance to populate.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Object,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes data from the specified TextReader and populates a specified object instance.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="target">The object instance to populate.</param>
            <param name="options">Options to use for deserialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes data from the specified TextReader and populates a specified object instance.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="target">The object instance to populate.</param>
            <param name="options">Options to use for deserialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Apply(System.Object,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Applies the content of an array or dictionary to a target object.
            </summary>
            <param name="input">The input object.</param>
            <param name="target">The target object.</param>
            <param name="options">Options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.GetItemType(System.Type)">
            <summary>
            Gets the type of elements in a collection type.
            </summary>
            <param name="collectionType">The collection type.</param>
            <returns>The element type or typeof(object) if it was not determined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.ChangeType(System.Object,System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="options">The options to use.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.ChangeType(System.Object,System.Object,System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="target">The target. May be null.</param>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="options">The options to use.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.TryParseDateTime(System.String)">
            <summary>
            Converts the JSON string representation of a date time to its DateTime equivalent.
            </summary>
            <param name="text">The input text.</param>
            <returns>A DateTime value if the text was converted successfully; otherwise, null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.TryParseDateTime(System.String,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the JSON string representation of a date time to its DateTime equivalent.
            </summary>
            <param name="text">The input text.</param>
            <param name="styles">The styles to use.</param>
            <returns>A DateTime value if the text was converted successfully; otherwise, null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.TryParseDateTime(System.String,System.DateTime@)">
            <summary>
            Converts the JSON string representation of a date time to its DateTime equivalent.
            </summary>
            <param name="text">The input text.</param>
            <param name="dt">When this method returns, contains the DateTime equivalent.</param>
            <returns>true if the text was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.TryParseDateTime(System.String,System.Globalization.DateTimeStyles,System.DateTime@)">
            <summary>
            Converts the JSON string representation of a date time to its DateTime equivalent.
            </summary>
            <param name="text">The input text.</param>
            <param name="styles">The styles to use.</param>
            <param name="dt">When this method returns, contains the DateTime equivalent.</param>
            <returns>
            true if the text was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteValue(System.IO.TextWriter,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a value to a JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="value">The value to writer.</param>
            <param name="objectGraph">A graph of objects to track cyclic serialization.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteBase64Stream(System.IO.TextWriter,System.IO.Stream,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a stream to a JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="stream">The stream. May not be null.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
            <returns>The number of written bytes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteArray(System.IO.TextWriter,System.Array,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes an enumerable to a JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="array">The array. May not be null.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteEnumerable(System.IO.TextWriter,System.Collections.IEnumerable,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes an enumerable to a JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="enumerable">The enumerable. May not be null.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteDictionary(System.IO.TextWriter,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a dictionary to a JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="dictionary">The dictionary. May not be null.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteObject(System.IO.TextWriter,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes an object to the JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="value">The object to serialize. May not be null.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.IsZeroValueType(System.Object)">
            <summary>
            Determines whether the specified value is a value type and is equal to zero.
            </summary>
            <param name="value">The value.</param>
            <returns>true if the specified value is a value type and is equal to zero; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteNameValue(System.IO.TextWriter,System.String,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a name/value pair to a JSON writer.
            </summary>
            <param name="writer">The input writer. May not be null.</param>
            <param name="name">The name. null values will be converted to empty values.</param>
            <param name="value">The value.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteString(System.IO.TextWriter,System.String,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a string to a JSON writer.
            </summary>
            <param name="writer">The input writer. May not be null.</param>
            <param name="text">The text.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteUnescapedString(System.IO.TextWriter,System.String,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a string to a JSON writer.
            </summary>
            <param name="writer">The input writer. May not be null.</param>
            <param name="text">The text.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.SerializeFormatted(System.Object)">
            <summary>
            Serializes an object with format. Note this is more for debugging purposes as it's not designed to be fast.
            </summary>
            <param name="value">The json object. May be null.</param>
            <returns>
            A string containing the formatted object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.SerializeFormatted(System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Serializes an object with format. Note this is more for debugging purposes as it's not designed to be fast.
            </summary>
            <param name="value">The json object. May be null.</param>
            <param name="options">The options to use. May be null.</param>
            <returns>A string containing the formatted object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.SerializeFormatted(System.IO.TextWriter,System.Object)">
            <summary>
            Serializes an object with format. Note this is more for debugging purposes as it's not designed to be fast.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="value">The json object. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.SerializeFormatted(System.IO.TextWriter,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Serializes an object with format. Note this is more for debugging purposes as it's not designed to be fast.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="value">The json object. May be null.</param>
            <param name="options">The options to use. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteFormatted(System.Object)">
            <summary>
            Writes a json deserialized object formatted.
            </summary>
            <param name="jsonObject">The json object. May be null.</param>
            <returns>A string containing the formatted object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteFormatted(System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a json deserialized object formatted.
            </summary>
            <param name="jsonObject">The json object. May be null.</param>
            <param name="options">The options to use. May be null.</param>
            <returns>A string containing the formatted object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteFormatted(System.IO.TextWriter,System.Object)">
            <summary>
            Writes a json deserialized object formatted.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="jsonObject">The json object. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteFormatted(System.IO.TextWriter,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a json deserialized object formatted.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="jsonObject">The json object. May be null.</param>
            <param name="options">The options to use. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.EscapeString(System.String)">
            <summary>
            Escapes a string using JSON representation.
            </summary>
            <param name="value">The string to escape.</param>
            <returns>A JSON-escaped string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.EscapeString(System.String,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Escapes a string using JSON representation.
            </summary>
            <param name="value">The string to escape.</param>
            <param name="options">Options to use for serialization.</param>
            <returns>A JSON-escaped string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.EscapeString(System.String,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Escapes a string using JSON representation.
            </summary>
            <param name="value">The string to escape.</param>
            <param name="options">Options to use for serialization.</param>
            <returns>A JSON-escaped string.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilities.ListObject">
            <summary>
            Defines an object that handles list deserialization.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.ListObject.Clear">
            <summary>
            Clears the list object.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.ListObject.Add(System.Object)">
            <summary>
            Adds a value to the list object.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilities.ListObject.List">
            <summary>
            Gets or sets the list object.
            </summary>
            <value>
            The list.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilities.ListObject.Context">
            <summary>
            Gets the current context.
            </summary>
            <value>
            The context. May be null.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilities.IMemberAccessor">
            <summary>
            Defines an interface for quick access to a type member.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.IMemberAccessor.Get(System.Object)">
            <summary>
            Gets a component value.
            </summary>
            <param name="component">The component.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.IMemberAccessor.Set(System.Object,System.Object)">
            <summary>
            Sets a component's value.
            </summary>
            <param name="component">The component.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition">
            <summary>
            Defines a type's member.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.GetOrCreateInstance(System.Object,System.Int32,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Gets or creates a member instance.
            </summary>
            <param name="target">The target.</param>
            <param name="elementsCount">The elements count.</param>
            <param name="options">The options.</param>
            <returns>A new or existing instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.ApplyEntry(System.Collections.IDictionary,System.Object,System.String,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Applies the dictionary entry to this member.
            </summary>
            <param name="dictionary">The input dictionary.</param>
            <param name="target">The target object.</param>
            <param name="key">The entry key.</param>
            <param name="value">The entry value.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.IsNullDateTimeValue(System.Object)">
            <summary>
            Determines whether the specified value is equal to the zero value for its type.
            </summary>
            <param name="value">The value.</param>
            <returns>true if the specified value is equal to the zero value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.IsZeroValue(System.Object)">
            <summary>
            Determines whether the specified value is equal to the zero value for its type.
            </summary>
            <param name="value">The value.</param>
            <returns>true if the specified value is equal to the zero value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.EqualsDefaultValue(System.Object)">
            <summary>
            Determines if a value equals the default value.
            </summary>
            <param name="value">The value to compare.</param>
            <returns>true if both values are equal; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.RemoveDeserializationMember(System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions,CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition)">
            <summary>
            Removes a deserialization member.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="options">The options. May be null.</param>
            <param name="member">The member. May not be null.</param>
            <returns>true if item is successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.RemoveSerializationMember(System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions,CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition)">
            <summary>
            Removes a serialization member.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="options">The options. May be null.</param>
            <param name="member">The member. May not be null.</param>
            <returns>true if item is successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.AddDeserializationMember(System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions,CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition)">
            <summary>
            Adds a deserialization member.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="options">The options. May be null.</param>
            <param name="member">The member. May not be null.</param>
            <returns>true if item is successfully added; otherwise, false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.AddSerializationMember(System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions,CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition)">
            <summary>
            Adds a serialization member.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="options">The options. May be null.</param>
            <param name="member">The member. May not be null.</param>
            <returns>true if item is successfully added; otherwise, false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.GetSerializationMembers(System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Gets the serialization members for a given type.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="options">The options. May be null.</param>
            <returns>A list of serialization members.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.GetDeserializationMembers(System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Gets the deserialization members for a given type.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="options">The options. May be null.</param>
            <returns>A list of deserialization members.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.UsingLock``1(System.Action{``0},``0)">
            <summary>
            Run a specified action, using the member definition lock.
            </summary>
            <typeparam name="T">The action input type.</typeparam>
            <param name="action">The action. May not be null.</param>
            <param name="state">The state. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.Name">
            <summary>
            Gets or sets the member name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.WireName">
            <summary>
            Gets or sets the name used for serialization and deserialiation.
            </summary>
            <value>
            The name used during serialization and deserialization.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.EscapedWireName">
            <summary>
            Gets or sets the escaped name used during serialization and deserialiation.
            </summary>
            <value>
            The escaped name used during serialization and deserialiation.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.HasDefaultValue">
            <summary>
            Gets or sets a value indicating whether this instance has default value.
            </summary>
            <value>
            <c>true</c> if this instance has default value; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            The default value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.Accessor">
            <summary>
            Gets or sets the accessor.
            </summary>
            <value>
            The accessor.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition.Type">
            <summary>
            Gets or sets the member type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute">
            <summary>
            Provides options for json utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute"/> class.
            </summary>
            <param name="name">The name to use for json serialization and deserialization.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute.Name">
            <summary>
            Gets or sets the name to use for json serialization and deserialization.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute.IgnoreWhenSerializing">
            <summary>
            Gets or sets a value indicating whether to ignore this instance's owner when serializing.
            </summary>
            <value>
            <c>true</c> if this instance's owner must be ignored when serializing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute.IgnoreWhenDeserializing">
            <summary>
            Gets or sets a value indicating whether to ignore this instance's owner when deserializing.
            </summary>
            <value>
            <c>true</c> if this instance's owner must be ignored when deserializing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            The default value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesAttribute.HasDefaultValue">
            <summary>
            Gets or sets a value indicating whether this instance has a default value. In this case, it's defined by the DefaultValue property.
            </summary>
            <value>
            <c>true</c> if this instance has default value; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilitiesCallback">
            <summary>
            Defines a callback delegate to customize JSON serialization and deserialization.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs">
            <summary>
            Provides data for a JSON utilities event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.#ctor(System.IO.TextWriter,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs"/> class.
            </summary>
            <param name="writer">The writer currently in use.</param>
            <param name="value">The value on the stack.</param>
            <param name="objectGraph">The current serialization object graph.</param>
            <param name="options">The options currently in use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.#ctor(System.IO.TextWriter,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs"/> class.
            </summary>
            <param name="writer">The writer currently in use.</param>
            <param name="value">The value on the stack.</param>
            <param name="objectGraph">The current serialization object graph.</param>
            <param name="options">The options currently in use.</param>
            <param name="name">The field or property name.</param>
            <param name="component">The component holding the value.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.EventType">
            <summary>
            Gets or sets the type of the event.
            </summary>
            <value>
            The type of the event.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs"/> is handled.
            An handled object can be skipped, not written to the stream. If the object is written, First must be set to false, otherwise it must not be changed.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.First">
            <summary>
            Gets or sets a value indicating whether the object being handled is first in the list.
            If the object is handled and written to the stream, this must be set to false after the stream is written.
            If the object is skipped, it must not be changed.
            </summary>
            <value><c>true</c> if this is the first object; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Options">
            <summary>
            Gets the options currently in use.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Writer">
            <summary>
            Gets the writer currently in use.
            </summary>
            <value>The writer.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.ObjectGraph">
            <summary>
            Gets the current serialization object graph.
            </summary>
            <value>The object graph.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Value">
            <summary>
            Gets or sets the value on the stack.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Component">
            <summary>
            Gets the component holding the value. May be null.
            </summary>
            <value>The component.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Name">
            <summary>
            Gets or sets the name on the stack. The Name can be a property or field name when serializing objects. May be null.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType">
            <summary>
            Defines a type of json utilities event.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType.Unspecified">
            <summary>
            An unspecified type of event.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType.WriteValue">
            <summary>
            The write value event type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType.BeforeWriteObject">
            <summary>
            The before write object event type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType.AfterWriteObject">
            <summary>
            The after write object event type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType.WriteNamedValueObject">
            <summary>
            The write named value object event type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType.CreateInstance">
            <summary>
            The create instance event type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType.MapEntry">
            <summary>
            The map entry event type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType.ApplyEntry">
            <summary>
            The apply entry event type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonUtilitiesEventType.GetListObject">
            <summary>
            The get list object event type.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions">
            <summary>
            Define options for JSON utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions"/> class.
            </summary>
            <param name="throwExceptions">if set to <c>true</c> exceptions can be thrown on serialization or deserialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A newly created insance of this class with all values copied.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.GetCacheKey">
            <summary>
            Gets a key that can be used for type cache.
            </summary>
            <returns>A cache key.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.FinalizeSerializationMembers(System.Type,System.Collections.Generic.IEnumerable{CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition})">
            <summary>
            Finalizes the serialization members from an initial setup of members.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="members">The members. May not be null.</param>
            <returns>A non-null list of members.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.FinalizeDeserializationMembers(System.Type,System.Collections.Generic.IEnumerable{CodeFluent.Runtime.Utilities.JsonUtilities.MemberDefinition})">
            <summary>
            Finalizes the deserialization members from an initial setup of members.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="members">The members. May not be null.</param>
            <returns>A non-null list of members.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.ThrowExceptions">
            <summary>
            Gets or sets a value indicating whether exceptions can be thrown during serialization or deserialization.
            If this is set to false, exceptions will be stored in the Exceptions collection.
            </summary>
            <value>
            <c>true</c> if exceptions can be thrown on serialization or deserialization; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.JsonPCallback">
            <summary>
            Gets or sets the JSONP callback. It will be added as wrapper around the result.
            Check this article for more: http://en.wikipedia.org/wiki/JSONP
            </summary>
            <value>
            The JSONP callback name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.GuidFormat">
            <summary>
            Gets or sets the guid format.
            </summary>
            <value>
            The guid format.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.DateTimeFormat">
            <summary>
            Gets or sets the date time format.
            </summary>
            <value>
            The date time format.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.DateTimeOffsetFormat">
            <summary>
            Gets or sets the date time offset format.
            </summary>
            <value>
            The date time offset format.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.DateTimeStyles">
            <summary>
            Gets or sets the date time styles.
            </summary>
            <value>
            The date time styles.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.StreamingBufferChunkSize">
            <summary>
            Gets or sets the size of the streaming buffer chunk.
            </summary>
            <value>
            The size of the streaming buffer chunk.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.FormattingTab">
            <summary>
            Gets or sets the formatting tab string.
            </summary>
            <value>
            The formatting tab.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.Exceptions">
            <summary>
            Gets the deseralization exceptions. Will be empty if ThrowExceptions is set to false.
            </summary>
            <value>
            The list of deseralization exceptions.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.SerializationOptions">
            <summary>
            Gets or sets the serialization options.
            </summary>
            <value>The serialization options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.WriteValueCallback">
            <summary>
            Gets or sets a write value callback.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.BeforeWriteObjectCallback">
            <summary>
            Gets or sets a callback that is called before an object (not a value) is serialized.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.AfterWriteObjectCallback">
            <summary>
            Gets or sets a callback that is called before an object (not a value) is serialized.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.WriteNamedValueObjectCallback">
            <summary>
            Gets or sets a callback that is called before an object field or property is serialized.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.CreateInstanceCallback">
            <summary>
            Gets or sets a callback that is called before an instance of an object is created.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.MapEntryCallback">
            <summary>
            Gets or sets a callback that is called during deserialization, before a dictionary entry is mapped to a target object.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.ApplyEntryCallback">
            <summary>
            Gets or sets a callback that is called during deserialization, before a dictionary entry is applied to a target object.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.GetListObjectCallback">
            <summary>
            Gets or sets a callback that is called during deserialization, to deserialize a list object.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntime">
            <summary>
            Defines a Chakra javascript runtime.
            Note in multi-threading environment, a variable of this type must be bound to a given thread, for example with a ThreadStatic attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsDll">
            <summary>
            The javascript "chakra" DLL name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntime"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.#ctor(CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntime"/> class.
            </summary>
            <param name="version">The runtime version.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.#ctor(CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntime"/> class.
            </summary>
            <param name="attributes">The runtime attributes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.#ctor(CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes,CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntime"/> class.
            </summary>
            <param name="attributes">The runtime attributes.</param>
            <param name="version">The runtime version.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.CollectGarbage">
            <summary>
            Performs a full garbage collection.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.Idle">
            <summary>
            Tells the runtime to do any idle processing it need to do.
            </summary>
            <returns>The next system tick when there will be more idle work to do. Can be null. Returns the maximum number of ticks if there no upcoming idle work to do.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.CreateContext">
            <summary>
            Creates an execution context.
            </summary>
            <returns>A newly created instance of the JsContext type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.AddGlobalObject(System.String,System.Object)">
            <summary>
            Adds an object to the global object.
            </summary>
            <param name="name">The object name. May not be null.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.Eval(System.String)">
            <summary>
            Evaluates the specified script.
            </summary>
            <param name="script">The script text. May not be null.</param>
            <returns>
            The result of the evaluation.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.RunScript(System.String)">
            <summary>
            Runs the specified script.
            </summary>
            <param name="script">The script text. May not be null.</param>
            <returns>
            The result of the evaluation.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.RunScript(System.String,System.String)">
            <summary>
            Runs the specified script.
            </summary>
            <param name="script">The script text. May not be null.</param>
            <param name="sourceUrl">The source that identifies the script origin. May be null.</param>
            <returns>
            The result of the evaluation.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.TryRunScript(System.String,System.Exception@,CodeFluent.Runtime.Utilities.JsRuntime.JsValue@)">
            <summary>
            Tries to run the specified script.
            </summary>
            <param name="script">The script text. May not be null.</param>
            <param name="error">The error that will be set if an error occurs.</param>
            <param name="value">The value that will be set if no error occurs.</param>
            <returns>
            true if the script was ran successfully; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.TryRunScript(System.String,System.String,System.Exception@,CodeFluent.Runtime.Utilities.JsRuntime.JsValue@)">
            <summary>
            Tries to run the specified script.
            </summary>
            <param name="script">The script text. May not be null.</param>
            <param name="sourceUrl">The source that identifies the script origin. May be null.</param>
            <param name="error">The error that will be set if an error occurs.</param>
            <param name="value">The value that will be set if no error occurs.</param>
            <returns>
            true if the script was ran successfully; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.ParseScript(System.String)">
            <summary>
            Parses the specified script.
            </summary>
            <param name="script">The script text. May not be null.</param>
            <returns>
            The javascript value representing the parsed script.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.ParseScript(System.String,System.String)">
            <summary>
            Parses the specified script.
            </summary>
            <param name="script">The script text. May not be null.</param>
            <param name="sourceUrl">The source that identifies the script origin. May be null.</param>
            <returns>
            The javascript value representing the parsed script.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.TryParseScript(System.String,System.Exception@,CodeFluent.Runtime.Utilities.JsRuntime.JsValue@)">
            <summary>
            Tries to parse the specified script.
            </summary>
            <param name="script">The script text. May not be null.</param>
            <param name="error">The error that will be set if an error occurs.</param>
            <param name="parsedScript">The javascript value representing the parsed script.</param>
            <returns>
            true if the script was ran successfully; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.TryParseScript(System.String,System.String,System.Exception@,CodeFluent.Runtime.Utilities.JsRuntime.JsValue@)">
            <summary>
            Tries to parse the specified script.
            </summary>
            <param name="script">The script text. May not be null.</param>
            <param name="sourceUrl">The source that identifies the script origin. May be null.</param>
            <param name="error">The error that will be set if an error occurs.</param>
            <param name="parsedScript">The javascript value representing the parsed script.</param>
            <returns>
            true if the script was ran successfully; otherwise false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.CacheParsedScripts">
            <summary>
            Gets or sets a value indicating whether to cache parsed scripts.
            Only used for RunScript and TryRunScript methods.
            Note that scripts that cannot be parsed are never cached.
            </summary>
            <value>
            <c>true</c> if parsed scripts must be cached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.ParsedScriptCache">
            <summary>
            Gets the parsed script cache. May be null if CacheParsedScripts is set to false.
            </summary>
            <value>
            The parsed script cache.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.Handle">
            <summary>
            Gets the native handle.
            </summary>
            <value>
            The handle.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.MemoryUsage">
            <summary>
            Gets the current memory usage for this runtime.
            </summary>
            <value>
            The memory usage.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.MemoryLimit">
            <summary>
            Gets or sets the current memory limit for this runtime.
            </summary>
            <value>
            The memory limit.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.GlobalObject">
            <summary>
            Gets the global object in the current script context.
            </summary>
            <value>
            The global object.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.EngineVersion">
            <summary>
            Gets the engine version. Returns null if there is no current context.
            </summary>
            <value>
            The engine version or null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.ExecutionEnabled">
            <summary>
            Gets or sets a value indicating whether script execution is enabled in this runtime.
            </summary>
            <value>
              <c>true</c> if execution is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntime.JsValue">
            <summary>
            Defines a javascript value.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntime.JsValue"/> class from a CLR object.
            </summary>
            <param name="value">The value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.IsUndefined(System.Object)">
            <summary>
            Determines whether the specified object is undefined.
            </summary>
            <param name="obj">The input object.</param>
            <returns>true if the object is undefined; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.DetachValue">
            <summary>
            Gets the equivalent CLR value and release the object for garbage collection.
            </summary>
            <returns>The value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.SetProperty(System.String,System.Object)">
            <summary>
            Sets a property value by its name.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="value">The value.</param>
            <returns>
            true if the property was set successfully; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.TrySetProperty(System.String,System.Object,System.Boolean,System.Exception@)">
            <summary>
            Tries to set a property value.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="value">The value.</param>
            <param name="useStrictRules">if set to <c>true</c> the property set should follow strict mode rules.</param>
            <param name="error">The error that will be set if an error occurs.</param>
            <returns>
            true if the property was set successfully; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.SetProperty(System.Int32,System.Object)">
            <summary>
            Set a property value by its index.
            </summary>
            <param name="index">The property index.</param>
            <param name="value">The value.</param>
            <returns>
            true if the property was set successfully; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.TrySetProperty(System.Int32,System.Object,System.Exception@)">
            <summary>
            Tries to set a property value by its index.
            </summary>
            <param name="index">The property index.</param>
            <param name="value">The value.</param>
            <param name="error">The error that will be set if an error occurs.</param>
            <returns>
            true if the property was set successfully; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.GetProperty``1(System.String,``0)">
            <summary>
            Get a property value by its name.
            </summary>
            <typeparam name="T">The return value type.</typeparam>
            <param name="name">The property name. May not be null.</param>
            <param name="defaultValue">The default value to use if an error occurs.</param>
            <returns>
            The property value or the default value if an error occured.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.TryGetProperty(System.String,System.Exception@,CodeFluent.Runtime.Utilities.JsRuntime.JsValue@)">
            <summary>
            Tries to get a property value by its name.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="error">The error that will be set if an error occurs.</param>
            <param name="value">The value that will be set if no error occurs.</param>
            <returns>
            true if the property was set successfully; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.GetProperty``1(System.Int32,``0)">
            <summary>
            Get a property value by its index.
            </summary>
            <typeparam name="T">The return value type.</typeparam>
            <param name="index">The property index.</param>
            <param name="defaultValue">The default value to use if an error occurs.</param>
            <returns>
            The property value or the default value if an error occured.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.TryGetProperty(System.Int32,System.Exception@,CodeFluent.Runtime.Utilities.JsRuntime.JsValue@)">
            <summary>
            Tries to get a property value by its index.
            </summary>
            <param name="index">The property index.</param>
            <param name="error">The error that will be set if an error occurs.</param>
            <param name="value">The value that will be set if no error occurs.</param>
            <returns>
            true if the property was set successfully; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.CallFunction``1(System.String,``0,System.Object[])">
            <summary>
            Calls a function (or property getter) on this object.
            </summary>
            <typeparam name="T">The return value type.</typeparam>
            <param name="name">The function or property name. May not be null.</param>
            <param name="defaultValue">The default value to return if an error occurs.</param>
            <param name="arguments">The optional arguments.</param>
            <returns>
            The function return value or the property value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.Call(System.Object[])">
            <summary>
            Calls the object. Only supported if the value type is a JsFunction.
            </summary>
            <param name="arguments">The arguments as a list of CLR values. May be null.</param>
            <returns>
            The result of the call.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.Call(CodeFluent.Runtime.Utilities.JsRuntime.JsValue[])">
            <summary>
            Calls the object. Only supported if the value type is a JsFunction.
            </summary>
            <param name="arguments">The arguments as a list of JsValues. May be null.</param>
            <returns>The result of the call.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.CallWithDefault``1(``0,System.Object[])">
            <summary>
            Calls the object. Only supported if the value type is a JsFunction.
            </summary>
            <typeparam name="T">The return value type.</typeparam>
            <param name="defaultValue">The default value to use if an error occurs.</param>
            <param name="arguments">The arguments as a list of CLR values. May be null.</param>
            <returns>
            The result of the call of the default value if an error occured.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.CallWithDefault``1(``0,CodeFluent.Runtime.Utilities.JsRuntime.JsValue[])">
            <summary>
            Calls the object. Only supported if the value type is a JsFunction.
            </summary>
            <typeparam name="T">The return value type.</typeparam>
            <param name="defaultValue">The default value to use if an error occurs.</param>
            <param name="arguments">The arguments as a list of JsValues. May be null.</param>
            <returns>
            The result of the call of the default value if an error occured.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.TryCall(System.Exception@,CodeFluent.Runtime.Utilities.JsRuntime.JsValue@,System.Object[])">
            <summary>
            Tries to call the object. Only supported if the value type is a JsFunction.
            </summary>
            <param name="error">The error that will be set if an error occurs.</param>
            <param name="value">The value that will be set if no error occurs.</param>
            <param name="arguments">The arguments as a list of CLR values. May be null.</param>
            <returns>
            true if the call was successful; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.TryCall(System.Exception@,CodeFluent.Runtime.Utilities.JsRuntime.JsValue@,CodeFluent.Runtime.Utilities.JsRuntime.JsValue[])">
            <summary>
            Tries to call the object. Only supported if the value type is a JsFunction.
            </summary>
            <param name="error">The error that will be set if an error occurs.</param>
            <param name="value">The value that will be set if no error occurs.</param>
            <param name="arguments">The arguments as a list of JsValues. May be null.</param>
            <returns>
            true if the call was successful; otherwise false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.MaxRefCount">
            <summary>
            Gets or sets the max reference count. Used for debugging only.
            </summary>
            <value>
            The max reference count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.Handle">
            <summary>
            Gets the native handle.
            </summary>
            <value>
            The handle.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.ValueType">
            <summary>
            Gets the value type.
            </summary>
            <value>
            The value type.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.Value">
            <summary>
            Gets the equivalent CLR value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.Prototype">
            <summary>
            Gets the prototype.
            </summary>
            <value>
            The prototype.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.PropertyValues">
            <summary>
            Gets a list of property values.
            </summary>
            <value>
            The property values.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.PropertyDescriptors">
            <summary>
            Gets a list of property descriptors.
            </summary>
            <value>
            The property descriptors.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsValue.PropertyNames">
            <summary>
            Gets a list of property names for this value.
            </summary>
            <value>
            The property names.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntime.JsContext">
            <summary>
            Defines a javascript execution context
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsContext.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsContext.Execute(CodeFluent.Runtime.Utilities.JsRuntime.JsAction)">
            <summary>
            Executes the specified action.
            </summary>
            <param name="action">The action. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntime.JsContext.Execute``1(CodeFluent.Runtime.Utilities.JsRuntime.JsAction{``0})">
            <summary>
            Executes the specified action.
            </summary>
            <typeparam name="T">The action return type.</typeparam>
            <param name="action">The action. May not be null.</param>
            <returns>The result of the action.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsContext.MaxRefCount">
            <summary>
            Gets or sets the max reference count. Used for debugging only.
            </summary>
            <value>
            The max reference count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsContext.Handle">
            <summary>
            Gets the native handle.
            </summary>
            <value>
            The handle.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsContext.Current">
            <summary>
            Gets or sets the current execution context. May be null.
            </summary>
            <value>
            The current execution context.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntime.JsContext.Runtime">
            <summary>
            Gets this context's runtime.
            </summary>
            <value>
            The runtime.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes">
            <summary>
            Attributes of a runtime.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes.JsRuntimeAttributeNone">
            <summary>
            No special attributes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes.JsRuntimeAttributeDisableBackgroundWork">
            <summary>
            The runtime will not do any work (such as garbage collection) on background threads.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes.JsRuntimeAttributeAllowScriptInterrupt">
            <summary>
            The runtime should support reliable script interruption. This increases the number of
            places where the runtime will check for a script interrupt request at the cost of a
            small amount of runtime performance.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes.JsRuntimeAttributeEnableIdleProcessing">
            <summary>
            Host will call <c>JsIdle</c>, so enable idle processing. Otherwise, the runtime will
            manage memory slightly more aggressively.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes.JsRuntimeAttributeDisableNativeCodeGeneration">
            <summary>
            Runtime will not generate native code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes.JsRuntimeAttributeDisableEval">
            <summary>
            Using <c>eval</c> or <c>function</c> constructor will throw an exception.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes.JsRuntimeAttributeEnableExperimentalFeatures">
            <summary>
                Runtime will enable all experimental features.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeAttributes.JsRuntimeAttributeDispatchSetExceptionsToDebugger">
            <summary>
                Calling <c>JsSetException</c> will also dispatch the exception to the script debugger
                (if any) giving the debugger a chance to break on the exception.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeVersion">
            <summary>
            Version of the runtime.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeVersion.JsRuntimeVersion10">
            <summary>
            Create runtime with IE10 version.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeVersion.JsRuntimeVersion11">
            <summary>
            Create runtime with IE11 version.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsRuntimeVersion.JsRuntimeVersionEdge">
            <summary>
            Create runtime with highest version present on the machine at runtime.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType">
            <summary>
            The JavaScript type of a JsValue.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType.JsUndefined">
            <summary>
            The value is the <c>undefined</c> value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType.JsNull">
            <summary>
            The value is the <c>null</c> value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType.JsNumber">
            <summary>
            The value is a JavaScript number value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType.JsString">
            <summary>
            The value is a JavaScript string value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType.JsBoolean">
            <summary>
            The value is a JavaScript Boolean value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType.JsObject">
            <summary>
            The value is a JavaScript object value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType.JsFunction">
            <summary>
            The value is a JavaScript function object value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType.JsError">
            <summary>
            The value is a JavaScript error object value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntime.JsValueType.JsArray">
            <summary>
            The value is a JavaScript array object value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntime.JsAction">
            <summary>
            Defines a script action.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntime.JsAction`1">
            <summary>
            Defines a script action that returns a value.
            </summary>
            <typeparam name="T">The action return type.</typeparam>
            <returns>The result of the action.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntimeException">
            <summary>
            The exception that is thrown when a generic JsRuntime error occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntimeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntimeException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntimeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntimeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntimeException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntimeException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsRuntimeException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsRuntimeException.GetErrorText(CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode)">
            <summary>
            Gets the error text from a given code.
            </summary>
            <param name="error">The error code.</param>
            <returns>The error text.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntimeException.Code">
            <summary>
            Gets the error code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntimeException.Line">
            <summary> 
            Gets the line number of error. 
            </summary> 
            <value>The line number.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntimeException.Column">
            <summary> 
            Gets the character position of error. 
            </summary> 
            <value>The column number.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsRuntimeException.SourceCode">
            <summary> 
            Gets the source code corresponding to the error.
            </summary> 
            <value>The source code.</value> 
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode">
            <summary>
            An error code returned from a Chakra hosting API.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsNoError">
            <summary>
            Success error code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorCategoryUsage">
            <summary>
            Category of errors that relates to incorrect usage of the API itself.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorInvalidArgument">
            <summary>
            An argument to a hosting API was invalid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorNullArgument">
            <summary>
            An argument to a hosting API was null in a context where null is not allowed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorNoCurrentContext">
            <summary>
            The hosting API requires that a context be current, but there is no current context.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorInExceptionState">
            <summary>
            The engine is in an exception state and no APIs can be called until the exception is
            cleared.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorNotImplemented">
            <summary>
            A hosting API is not yet implemented.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorWrongThread">
            <summary>
            A hosting API was called on the wrong thread.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorRuntimeInUse">
            <summary>
            A runtime that is still in use cannot be disposed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorBadSerializedScript">
            <summary>
            A bad serialized script was used, or the serialized script was serialized by a
            different version of the Chakra engine.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorInDisabledState">
            <summary>
            The runtime is in a disabled state.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorCannotDisableExecution">
            <summary>
            Runtime does not support reliable script interruption.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorHeapEnumInProgress">
            <summary>
            A heap enumeration is currently underway in the script context.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorArgumentNotObject">
            <summary>
            A hosting API that operates on object values was called with a non-object value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorInProfileCallback">
            <summary>
            A script context is in the middle of a profile callback.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorInThreadServiceCallback">
            <summary>
            A thread service callback is currently underway.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorCannotSerializeDebugScript">
            <summary>
            Scripts cannot be serialized in debug contexts.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorAlreadyDebuggingContext">
            <summary>
            The context cannot be put into a debug state because it is already in a debug state.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorAlreadyProfilingContext">
            <summary>
            The context cannot start profiling because it is already profiling.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorIdleNotEnabled">
            <summary>
            Idle notification given when the host did not enable idle processing.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorCategoryEngine">
            <summary>
            Category of errors that relates to errors occurring within the engine itself.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorOutOfMemory">
            <summary>
            The Chakra engine has run out of memory.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorCategoryScript">
            <summary>
            Category of errors that relates to errors in a script.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorScriptException">
            <summary>
            A JavaScript exception occurred while running a script.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorScriptCompile">
            <summary>
            JavaScript failed to compile.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorScriptTerminated">
            <summary>
            A script was terminated due to a request to suspend a runtime.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorScriptEvalDisabled">
            <summary>
            A script was terminated because it tried to use <c>eval</c> or <c>function</c> and eval
            was disabled.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorCategoryFatal">
            <summary>
            Category of errors that are fatal and signify failure of the engine.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsRuntimeException.JsErrorCode.JsErrorFatal">
            <summary>
            A fatal error in the engine has occurred.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.KeyChangedEventArgs`1">
            <summary>
            Provides data for a key change event.
            </summary>
            <typeparam name="Tk">The type of the key.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.KeyChangedEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.KeyChangedEventArgs`1"/> class.
            </summary>
            <param name="oldKey">The old key.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.KeyChangedEventArgs`1.OldKey">
            <summary>
            Gets the old key.
            </summary>
            <value>The old key.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LimitList`1">
            <summary>
            Defines a list that contains a maximum number of items. New items are appended to the list and old ones are removed if needed.
            </summary>
            <typeparam name="T">The item type.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LimitList`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LimitList`1"/> class.
            </summary>
            <param name="maximumCount">The maximum number of items the list can contain.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LimitList`1.Add(`0)">
            <summary>
            Adds the specified value to the end of the list. Removes first items if needed to keep the number of items in the list fixed.
            </summary>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LimitList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LimitList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LimitList`1.MaximumCount">
            <summary>
            Gets the maximum number of items the list can contain.
            </summary>
            <value>
            The maximum number of items the list can contain..
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LimitList`1.Count">
            <summary>
            Gets the number of items in the list.
            </summary>
            <value>
            The number of items in the list.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LimitList`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <value>
            The item at the specified index
            </value>
            <param name="index">The index.</param>
            <returns>
            The item at the specified index
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter">
            <summary>
            Defines a class that keeps the current line and column information over a regular StreamWriter.
            It is also capable of indenting new lines by spaces or tabs characters.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class for the specified stream, using UTF-8 encoding and the default buffer size.
            </summary>
            <param name="stream">The stream to write to.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class for the specified stream, using the specified encoding and the default buffer size.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class for the specified file on the specified path, using the default encoding and buffer size.
            </summary>
            <param name="path">The complete file path to write to.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class for the specified file on the specified path, using the default encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.
            </summary>
            <param name="path">The complete file path to write to.</param>
            <param name="append">Determines whether data is to be appended to the file. If the file exists and append is false, the file is overwritten. If the file exists and append is true, the data is appended to the file. Otherwise, a new file is created.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class  for the specified file on the specified path, using the specified encoding and default buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.
            </summary>
            <param name="path">The complete file path to write to.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class  for the specified file on the specified path, using the specified encoding and default buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.
            </summary>
            <param name="path">The complete file path to write to.</param>
            <param name="append">Determines whether data is to be appended to the file. If the file exists and append is false, the file is overwritten. If the file exists and append is true, the data is appended to the file. Otherwise, a new file is created.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.ToIndentedTextWriter(System.IO.TextWriter)">
            <summary>
            Creates an indented text writer from a specified writer.
            </summary>
            <param name="writer">The input writer. May not be null.</param>
            <returns>An instance of the IndentedTextWriter type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.ToIndentedTextWriter">
            <summary>
            Creates an indented text writer from this writer.
            </summary>
            <returns>An instance of the IndentedTextWriter type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.Write(System.Char[])">
            <summary>
            Writes a character array to the stream.
            </summary>
            <param name="buffer">A character array containing the data to write. If <paramref name="buffer"/> is null, nothing is written.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.Write(System.Char)">
            <summary>
            Writes a character to the stream.
            </summary>
            <param name="value">The character to write to the text stream.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.Write(System.String)">
            <summary>
            Writes a string to the stream.
            </summary>
            <param name="value">The string to write to the stream. If <paramref name="value"/> is null, nothing is written.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters to the stream.
            </summary>
            <param name="buffer">A character array containing the data to write.</param>
            <param name="index">The index into <paramref name="buffer"/> at which to begin writing.</param>
            <param name="count">The number of characters to read from <paramref name="buffer"/>.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.LinePosition">
            <summary>
            Gets the current line position. Includes tabs characters.
            </summary>
            <value>The line position.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.LineTabsNumber">
            <summary>
            Gets the number of tabs characters on the current line.
            </summary>
            <value>The number of tabs characters on the current line.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.SpaceIndent">
            <summary>
            Gets or sets the space indent.
            </summary>
            <value>The indent.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.TabIndent">
            <summary>
            Gets or sets the tab indent.
            </summary>
            <value>The tab indent.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter">
            <summary>
            Defines an Xml Text Writer that is aware of the current line and column information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.GetIndentationLevel(System.Xml.XmlTextWriter)">
            <summary>
            Gets the indentation level of an XmlTextWriter calss.
            </summary>
            <param name="writer">The writer instance. May not be null.</param>
            <returns>The indentation level.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.#ctor(CodeFluent.Runtime.Utilities.LineInfoStreamWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter"/> class.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.#ctor(CodeFluent.Runtime.Utilities.LineInfoStreamWriter,System.Xml.XmlWriterSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter"/> class.
            </summary>
            <param name="writer">The writer.</param>
            <param name="settings">The settings to use. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.Writer">
            <summary>
            Gets the underlying line info writer.
            </summary>
            <value>The writer instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.IndentationLevel">
            <summary>
            Gets the current indentation level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.Settings">
            <summary>
            Gets the XML Writer settings
            </summary>
            <returns>
            The XML Writer settings. May be null.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ObjectXPathNavigator">
            <summary>
            Defines a utility class to navigate an object hierarchy using XPATH.
            It also supports array and dictionary which makes it suitable for use with JsonUtilities deserializer.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ObjectXPathNavigator"/> class.
            </summary>
            <param name="instance">The object instance to navigate. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.#ctor(CodeFluent.Runtime.Utilities.ObjectXPathNavigator)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ObjectXPathNavigator"/> class.
            </summary>
            <param name="other">Another navigator instance. May not be null..</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.Clone">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned at the same node as this <see cref="T:System.Xml.XPath.XPathNavigator" />.
            </summary>
            <returns>
            A new <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned at the same node as this <see cref="T:System.Xml.XPath.XPathNavigator" />.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
            <summary>
            When overridden in a derived class, determines whether the current <see cref="T:System.Xml.XPath.XPathNavigator" /> is at the same position as the specified <see cref="T:System.Xml.XPath.XPathNavigator" />.
            </summary>
            <param name="other">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to compare to this <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
            <returns>
            Returns true if the two <see cref="T:System.Xml.XPath.XPathNavigator" /> objects have the same position; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
            <summary>
            When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the same position as the specified <see cref="T:System.Xml.XPath.XPathNavigator" />.
            </summary>
            <param name="other">The <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned on the node that you want to move to.</param>
            <returns>
            Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the same position as the specified <see cref="T:System.Xml.XPath.XPathNavigator" />; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveToFirstAttribute">
            <summary>
            When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first attribute of the current node.
            </summary>
            <returns>
            Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first attribute of the current node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveToFirstChild">
            <summary>
            When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first child node of the current node.
            </summary>
            <returns>
            Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first child node of the current node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
            <summary>
            When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first namespace node that matches the <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> specified.
            </summary>
            <param name="namespaceScope">An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value describing the namespace scope.</param>
            <returns>
            Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveToId(System.String)">
            <summary>
            When overridden in a derived class, moves to the node that has an attribute of type ID whose value matches the specified <see cref="T:System.String" />.
            </summary>
            <param name="id">A <see cref="T:System.String" /> representing the ID value of the node to which you want to move.</param>
            <returns>
            true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving; otherwise, false. If false, the position of the navigator is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveToNext">
            <summary>
            When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next sibling node of the current node.
            </summary>
            <returns>
            true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next sibling node; otherwise, false if there are no more siblings or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveToNextAttribute">
            <summary>
            When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next attribute.
            </summary>
            <returns>
            Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next attribute; false if there are no more attributes. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
            <summary>
            When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next namespace node matching the <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> specified.
            </summary>
            <param name="namespaceScope">An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value describing the namespace scope.</param>
            <returns>
            Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveToParent">
            <summary>
            When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the parent node of the current node.
            </summary>
            <returns>
            Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the parent node of the current node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.MoveToPrevious">
            <summary>
            When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the previous sibling node of the current node.
            </summary>
            <returns>
            Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the previous sibling node; otherwise, false if there is no previous sibling node or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.SelectSingleNode(System.Object,System.String)">
            <summary>
            Selects a single node from an object using an XPATH expression.
            </summary>
            <param name="root">The root object. May not be null.</param>
            <param name="xpath">The xpath expression.</param>
            <returns>An object or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.SelectNodes(System.Object,System.String)">
            <summary>
            Selects nodes from an object using an XPATH expression.
            </summary>
            <param name="root">The root object. May not be null.</param>
            <param name="xpath">The xpath expression.</param>
            <returns>An enumeration of objects.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.RootInstance">
            <summary>
            Gets the root instance to navigate from.
            </summary>
            <value>
            The root instance.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.Instance">
            <summary>
            Gets the current instance being used for navigation.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.HasAttributes">
            <summary>
            Gets a value indicating whether the current node has any attributes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.HasChildren">
            <summary>
            Gets a value indicating whether the current node has any child nodes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.BaseURI">
            <summary>
            When overridden in a derived class, gets the base URI for the current node.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.IsEmptyElement">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current node is an empty element without an end element tag.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.LocalName">
            <summary>
            When overridden in a derived class, gets the <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> of the current node without any namespace prefix.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.Name">
            <summary>
            When overridden in a derived class, gets the qualified name of the current node.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.NamespaceURI">
            <summary>
            When overridden in a derived class, gets the namespace URI of the current node.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.NameTable">
            <summary>
            When overridden in a derived class, gets the <see cref="T:System.Xml.XmlNameTable" /> of the <see cref="T:System.Xml.XPath.XPathNavigator" />.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.NodeType">
            <summary>
            When overridden in a derived class, gets the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.Prefix">
            <summary>
            When overridden in a derived class, gets the namespace prefix associated with the current node.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.Value">
            <summary>
            When overridden in a derived class, gets the string value of the item.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ObjectXPathNavigator.ValueAsDateTime">
            <summary>
            Gets the current node's value as a <see cref="T:System.DateTime" />.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Pair`2">
            <summary>
            Provides a utility class that is used to store two related objects. 
            </summary>
            <typeparam name="TFirst">The type of the first.</typeparam>
            <typeparam name="TSecond">The type of the second.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Pair`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Pair`2"/> struct.
            </summary>
            <param name="first">The first object.</param>
            <param name="second">The second object.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Pair`2.First">
            <summary>
            Gets or sets the first object of the object pair.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Pair`2.Second">
            <summary>
            Gets or sets the second object of the object pair.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ParsedScript">
            <summary>
            Defines a pre-parsed script object that can be evaluated at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParsedScript.Clone">
            <summary>
            Clones this instance. Errors may be thrown.
            </summary>
            <returns>
            An instance of the ParsedScript type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParsedScript.Clone(System.Boolean,System.Exception@)">
            <summary>
            Clones this instance.
            </summary>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <param name="error">The error if an exception occured.</param>
            <returns>An instance of the ParsedScript type.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParsedScript.CallMethod(System.String,System.Object[])">
            <summary> 
            Calls a method. 
            </summary> 
            <param name="methodName">The method name. May not be null.</param> 
            <param name="arguments">The optional arguments.</param> 
            <returns>The call result.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParsedScript.TryCallMethod(System.String,System.Object@,System.Exception@,System.Object[])">
            <summary>
            Try to call a method without throwing errors.
            </summary>
            <param name="methodName">The method name. May not be null.</param>
            <param name="returnValue">The return value.</param>
            <param name="error">The error if an exception occured.</param>
            <param name="arguments">The optional arguments.</param>
            <returns>
            true if the call succeeded; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParsedScript.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Perceived">
            <summary>
            Defines a file's perceived type based on its extension.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Perceived.AddPerceived(System.String,CodeFluent.Runtime.Utilities.PerceivedType)">
            <summary>
            Adds a perceived instance to the list.
            </summary>
            <param name="extension">The file extension. May not be null.</param>
            <param name="type">The perceived type.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Perceived.GetPerceivedType(System.String)">
            <summary>
            Gets a file's perceived type based on its extension.
            </summary>
            <param name="fileName">The file name. May not be null..</param>
            <returns>An instance of the PerceivedType type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Perceived.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Perceived.Extension">
            <summary>
            Gets the file's xtension.
            </summary>
            <value>The file's extension.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Perceived.PerceivedType">
            <summary>
            Indicates the normalized perceived type.
            </summary>
            <value>The normalized perceived type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Perceived.PerceivedTypeSource">
            <summary>
            Indicates the source of the perceived type information.
            </summary>
            <value>the source of the perceived type information.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.PerceivedType">
            <summary>
            Specifies a file's perceived type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Custom">
            <summary>
            The file's perceived type as defined in the registry is not a known type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Unspecified">
            <summary>
            The file does not have a perceived type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Folder">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Unknown">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Text">
            <summary>
            The file's perceived type is "text".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Image">
            <summary>
            The file's perceived type is "image".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Audio">
            <summary>
            The file's perceived type is "audio".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Video">
            <summary>
            The file's perceived type is "video".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Compressed">
            <summary>
            The file's perceived type is "compressed".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Document">
            <summary>
            The file's perceived type is "document".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.System">
            <summary>
            The file's perceived type is "system".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Application">
            <summary>
            The file's perceived type is "application".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.GameMedia">
            <summary>
            The file's perceived type is "gamemedia".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Contacts">
            <summary>
            The file's perceived type is "Contacts".
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.PerceivedTypeSource">
            <summary>
            Indicates the source of the perceived type information.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.Undefined">
            <summary>
            No perceived type was found.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.SoftCoded">
            <summary>
            The perceived type was determined through an association in the registry.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.HardCoded">
            <summary>
            The perceived type is inherently known to the operating system.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.NativeSupport">
            <summary>
            The perceived type was determined through a codec provided with the operating system.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.GdiPlus">
            <summary>
            The perceived type is supported by the Windows GDI+ library.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.WmSdk">
            <summary>
            The perceived type is supported by the Microsoft Windows Media software development kit (SDK).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.ZipFolder">
            <summary>
            The perceived type is supported by Windows compressed folders.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.Mime">
            <summary>
            The perceived type was determined through MIME content types in the registry.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.PersistentList`1">
            <summary>
            Represents a collection of objects that can be individually accessed by index.
            The list is persisted as a comma separated list of values.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PersistentList`1.DefaultSeparator">
            <summary>
            The default separator character. Equals to ';'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PersistentList`1.EscapeCharacter">
            <summary>
            The default escape character. Equals to '\'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PersistentList`1.Null">
            <summary>
            The null serialized representation. Equals to '\null'.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class.
            </summary>
            <param name="separator">The serialization separator character to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class using a serialized instance.
            </summary>
            <param name="serializedInstance">The serialized instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.Char,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class using a serialized instance.
            </summary>
            <param name="separator">The serialization separator character to use.</param>
            <param name="serializedInstance">The serialized instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class using a serialized instance.
            </summary>
            <param name="serializedInstance">The serialized instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.Char,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class using a serialized instance.
            </summary>
            <param name="separator">The serialization separator character to use.</param>
            <param name="serializedInstance">The serialized instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Deserialize(System.String)">
            <summary>
            Deserializes the specified object instance.
            </summary>
            <param name="serializedInstance">The serialized instance. May be null.</param>
            <returns>
            A deserialized object of the target type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Deserialize(System.Type,System.String)">
            <summary>
            Deserializes the specified object instance.
            </summary>
            <param name="type">The serialized object instance type. May not be null.</param>
            <param name="serializedInstance">The serialized instance. May be null.</param>
            <returns>
            A deserialized object of the target type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Serialize(System.Object)">
            <summary>
            Serializes the specified object instance.
            </summary>
            <param name="obj">The object instance. May be null.</param>
            <returns>
            A string representing the serialized object instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Serialize(System.Object,System.Char)">
            <summary>
            Serializes the specified object instance.
            </summary>
            <param name="obj">The object instance. May be null.</param>
            <param name="separator">The separator character.</param>
            <returns>
            A string representing the serialized object instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Serialize(CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Serializes this instance.
            </summary>
            <param name="mode">The serialization mode.</param>
            <returns>The serialized instance. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Deserialize(System.Type,CodeFluent.Runtime.PersistenceSerializationMode,System.Object)">
            <summary>
            Deserializes the specified object instance.
            </summary>
            <param name="type">The serialized object instance type. May not be null.</param>
            <param name="mode">The serialization mode.</param>
            <param name="serializedInstance">The serialized object instance. May be null.</param>
            <returns>The deserialized instance. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the ListChanged event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed.
            </summary>
            <param name="name">The property name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.PersistentList`1.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.PersistentList`1.ListChanged">
            <summary>
            Occurs when the list changed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.Separator">
            <summary>
            Gets the separator character for serialization.
            </summary>
            <value>The separator character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.RaiseListChangedEvents">
            <summary>
            Gets or sets a value indicating whether list changed events must be raised.
            </summary>
            <value>
            	<c>true</c> if list changed events must be raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.NameValueCollection">
            <summary>
            Defines a collection of values for the same key name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollection"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollection.Add(System.Object)">
            <summary>
            Adds the specified value to the collection.
            </summary>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollection.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollection.FirstValue">
            <summary>
            Gets the first value or null.
            </summary>
            <value>The first value or null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value>The object instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollection.Count">
            <summary>
            Gets the count of values.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection">
            <summary>
            Represents a collection of associated NameValueCollection objects, parsed from an input string, that can be accessed either with the key or with the index.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.DefaultSeparator">
            <summary>
            Defines the default separator character to use. Defined as ';'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.DefaultQuote">
            <summary>
            Defines the default quote character to use. Defined as '"'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.DefaultAssignment">
            <summary>
            Defines the default assignment character to use. Defined as '='.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <param name="trim">if set to <c>true</c> names are trimmed.</param>
            <param name="caseSensitive">if set to <c>true</c> the created collection are case sensitive.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String,System.Char,System.Char,System.Char,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <param name="separator">The separator character to use.</param>
            <param name="quote">The quote character to use.</param>
            <param name="assignment">The assignment character to use.</param>
            <param name="trim">if set to <c>true</c> names are trimmed.</param>
            <param name="caseSensitive">if set to <c>true</c> the created collection are case sensitive.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String,System.Char,System.Char,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <param name="separator">The separator character to use.</param>
            <param name="quote">The quote character to use.</param>
            <param name="assignment">The assignment character to use.</param>
            <param name="trim">if set to <c>true</c> names are trimmed.</param>
            <param name="caseSensitive">if set to <c>true</c> the created collection are case sensitive.</param>
            <param name="createByValueIndex">if set to <c>true</c> a by-value index is also created.</param>
            <param name="unescape">if set to <c>true</c> the input text is unescaped.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String,System.Char[],System.Char[],System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <param name="separators">The separator characters to use.</param>
            <param name="quotes">The quote characters to use.</param>
            <param name="assignment">The assignment character to use.</param>
            <param name="trim">if set to <c>true</c> names are trimmed.</param>
            <param name="caseSensitive">if set to <c>true</c> the created collection are case sensitive.</param>
            <param name="createByValueIndex">if set to <c>true</c> a by-value index is also created.</param>
            <param name="unescape">if set to <c>true</c> the input text is unescaped.</param>
            <param name="keepQuotes">if set to <c>true</c> quotes are kept.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToString(System.Collections.IDictionary)">
            <summary>
            Creates a string representation of a dictionary instance.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <returns>The output string</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToString(System.Collections.IDictionary,System.Char,System.Char,System.Char)">
            <summary>
            Creates a string representation of a dictionary instance.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="quote">The quote character.</param>
            <param name="assignment">The assignment character.</param>
            <returns>The output string</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char[],System.Char[],System.Boolean)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separators">The separator characters.</param>
            <param name="quotes">The quote characters.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char,System.Char,System.Boolean)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="quote">The quote character.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <returns>An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char[],System.Char[],System.Boolean,System.Int32)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separators">The separator characters.</param>
            <param name="quotes">The quote characters.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <param name="maxCount">The maximum number of substrings to return.</param>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char[],System.Char[],System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separators">The separator characters.</param>
            <param name="quotes">The quote characters.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <param name="maxCount">The maximum number of substrings to return.</param>
            <param name="keepQuotes">if set to <c>true</c> quotes are kept.</param>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char,System.Char,System.Boolean,System.Int32)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="quote">The quote character.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <param name="maxCount">The maximum number of substrings to return.</param>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified value to the collection.
            </summary>
            <param name="name">The name to use. may not be null.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Add(CodeFluent.Runtime.Utilities.NameValueCollection)">
            <summary>
            Adds the specified list to the collection.
            </summary>
            <param name="list">The input list. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Object)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.String)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue``1(System.String,``0)">
            <summary>
            Gets the first value at the specified index.
            </summary>
            <typeparam name="T">The value target type.</typeparam>
            <param name="name">The value name. May not be null.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue``1(System.String,System.Int32,``0)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <typeparam name="T">The value target type.</typeparam>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Boolean)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Int32,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Byte,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Int16,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Int64,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Guid)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Double,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Single,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Char)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Enum)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetNameByValue(System.String)">
            <summary>
            Gets a name by its value.
            Only available if the by-value index has been created.
            if multiple names have the same value, the results are not deterministic.
            </summary>
            <param name="value">The value.</param>
            <returns>The name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToTable">
            <summary>
            Converts to a dictionary.
            </summary>
            <returns>An instance of a Hashtable type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToDictionary">
            <summary>
            Converts to a dictionary.
            </summary>
            <returns>An instance of a IDictionary type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToDictionary``1">
            <summary>
            Converts to a dictionary.
            </summary>
            <typeparam name="T">The type of target values.</typeparam>
            <returns>An instance of a IDictionary type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToDictionary(System.Boolean)">
            <summary>
            Converts to a dictionary.
            </summary>
            <param name="ordered">if set to <c>true</c>, the target IDictionary will be ordered.</param>
            <returns>An instance of a IDictionary type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.KeepQuotes">
            <summary>
            Gets a value indicating whether quotes are kept.
            </summary>
            <value><c>true</c> if quotes are kept; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.MustTrim">
            <summary>
            Gets a value indicating whether names must be trimmed.
            </summary>
            <value><c>true</c> if names must be trimmed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.MustCreateByValueIndex">
            <summary>
            Gets a value indicating whether a by-value index must be created.
            </summary>
            <value>
            	<c>true</c> if a by-value index must be created; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.MustUnescape">
            <summary>
            Gets a value indicating whether the input text must be escaped.
            </summary>
            <value><c>true</c> if the input text must be escaped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.SeparatorChar">
            <summary>
            Gets the first separator character.
            </summary>
            <value>The separator character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.SeparatorChars">
            <summary>
            Gets the separator characters.
            </summary>
            <value>The separator characters.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.QuoteChar">
            <summary>
            Gets the quote character.
            </summary>
            <value>The quote character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.QuoteChars">
            <summary>
            Gets the quote characters.
            </summary>
            <value>The quote characters.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.AssignmentChar">
            <summary>
            Gets the assignment character.
            </summary>
            <value>The assignment character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Text">
            <summary>
            Gets the original input text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollection"/> at the specified index.
            </summary>
            <value>The collection instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollection"/> with the specified name.
            </summary>
            <value>The collection instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Count">
            <summary>
            Gets the count of collections in this collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ParentProcessUtilities">
            <summary>
            A utility class to determine a process parent.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParentProcessUtilities.GetParentProcess">
            <summary>
            Gets the parent process of the current process.
            </summary>
            <returns>An instance of the Process class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParentProcessUtilities.GetParentProcess(System.Int32)">
            <summary>
            Gets the parent process of specified process.
            </summary>
            <param name="id">The process id.</param>
            <returns>An instance of the Process class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParentProcessUtilities.GetParentProcess(System.IntPtr)">
            <summary>
            Gets the parent process of a specified process.
            </summary>
            <param name="handle">The process handle.</param>
            <returns>An instance of the Process class.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Privilege">
            <summary>
            Defines a Windows privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.AssignPrimaryToken">
            <summary>
            The SE_ASSIGNPRIMARYTOKEN_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.Audit">
            <summary>
            The SE_AUDIT_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.Backup">
            <summary>
            The SE_BACKUP_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.ChangeNotify">
            <summary>
            The SE_CHANGE_NOTIFY_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.CreateGlobal">
            <summary>
            The SE_CREATE_GLOBAL_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.CreatePageFile">
            <summary>
            The SE_CREATE_PAGEFILE_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.CreatePermanent">
            <summary>
            The SE_CREATE_PERMANENT_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.CreateSymbolicLink">
            <summary>
            The SE_CREATE_SYMBOLIC_LINK_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.CreateToken">
            <summary>
            The SE_CREATE_TOKEN_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.Debug">
            <summary>
            The SE_DEBUG_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.EnableDelegation">
            <summary>
            The SE_ENABLE_DELEGATION_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.Impersonate">
            <summary>
            The SE_IMPERSONATE_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.IncreaseBasePriority">
            <summary>
            The SE_INC_BASE_PRIORITY_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.IncreaseQuota">
            <summary>
            The SE_INCREASE_QUOTA_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.IncreaseWorkingSet">
            <summary>
            The SE_INC_WORKING_SET_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.LoadDriver">
            <summary>
            The SE_LOAD_DRIVER_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.LockMemory">
            <summary>
            The SE_LOCK_MEMORY_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.MachineAccount">
            <summary>
            The SE_MACHINE_ACCOUNT_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.ManageVolume">
            <summary>
            The SE_MANAGE_VOLUME_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.ProfileSingleProcess">
            <summary>
            The SE_PROF_SINGLE_PROCESS_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.Relabel">
            <summary>
            The SE_RELABEL_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.RemoteShutdown">
            <summary>
            The SE_REMOTE_SHUTDOWN_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.Restore">
            <summary>
            The SE_RESTORE_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.Security">
            <summary>
            The SE_SECURITY_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.Shutdown">
            <summary>
            The SE_SHUTDOWN_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.SyncAgent">
            <summary>
            The SE_SYNC_AGENT_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.SystemEnvironment">
            <summary>
            The SE_SYSTEM_ENVIRONMENT_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.SystemProfile">
            <summary>
            The SE_SYSTEM_PROFILE_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.SystemTime">
            <summary>
            The SE_SYSTEMTIME_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.TakeOwnership">
            <summary>
            The SE_TAKE_OWNERSHIP_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.TrustedComputingBase">
            <summary>
            The SE_TCB_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.TimeZone">
            <summary>
            The SE_TIME_ZONE_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.TrustedCredentialManagerAccess">
            <summary>
            The SE_TRUSTED_CREDMAN_ACCESS_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.Undock">
            <summary>
            The SE_UNDOCK_NAME privilege.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.Privilege.UnsolicitedInput">
            <summary>
            The SE_UNSOLICITED_INPUT_NAME privilege.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Privilege.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Privilege"/> class and enable the privilege.
            </summary>
            <param name="name">The privilege name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Privilege.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Privilege"/> class.
            </summary>
            <param name="name">The privilege name.</param>
            <param name="enable">if set to <c>true</c> the privilege is enabled.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Privilege.Revert">
            <summary>
            Disable this privilege from the current thread. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Privilege.Enable">
            <summary>
            Enables this privilege to the current thread. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Privilege.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Privilege.NeedToRevert">
            <summary>
            Gets a value indicating whether Revert must be called.
            </summary>
            <value>
              <c>true</c> if Revert must be called; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.RazorTemplateExecutor">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.RazorTemplateExecutor"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.WriteLiteral(System.Object)">
            <summary>
            Writes the text representation of an object to the text stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.Write">
            <summary>
            Writes nothing
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.Section(System.String)">
            <summary>
            Runs the action corresponding to the section name
            </summary>
            <param name="name">The session name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.Write(System.Object)">
            <summary>
            Writes the text representation of an object to the text stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.DefineSection(System.String,CodeFluent.Runtime.Utilities.RazorTemplateExecutor.SectionWriter)">
            <summary>
            Defines a section.
            </summary>
            <param name="name">The section name.</param>
            <param name="action">The action to perform.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.BaseWriter">
            <summary>
            Gets or sets the base text writer.
            </summary>
            <value>The base writer.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.SectionWriter">
            <summary>
            Defines a section writer delegate.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ReferenceComparer">
            <summary>
            Defines a utility class that compare objects using their references, regardless of any overloads defined on the object class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ReferenceComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="x">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <param name="y">The y.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ReferenceComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The obj.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ReferenceComparer.Current">
            <summary>
            Gets the unique ReferenceComparer instance.
            </summary>
            <value>The unique ReferenceComparer instance.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.RegistryKeyOptions">
            <summary>
            Defines options when using a registry key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyOptions.REG_OPTION_NON_VOLATILE">
            <summary>
            This key is not volatile; this is the default. The information is stored in a file and is preserved when the system is restarted.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyOptions.REG_OPTION_VOLATILE">
            <summary>
            All keys created by the function are volatile. The information is stored in memory and is not preserved when the corresponding registry hive is unloaded.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyOptions.REG_OPTION_CREATE_LINK">
            <summary>
            This key is a symbolic link. Registry symbolic links should only be used for for application compatibility when absolutely necessary.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyOptions.REG_OPTION_BACKUP_RESTORE">
            <summary>
            If this flag is set, the called function attempts to open the key with the access required to backup or restore the key.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.RegistryKeyRights">
            <summary>
            Defines specific access rights for registry key objects.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_QUERY_VALUE">
            <summary>
            Required to query the values of a registry key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_SET_VALUE">
            <summary>
            Required to create, delete, or set a registry value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_CREATE_SUB_KEY">
            <summary>
            Required to create a subkey of a registry key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_ENUMERATE_SUB_KEYS">
            <summary>
            Required to enumerate the subkeys of a registry key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_NOTIFY">
            <summary>
            Required to request change notifications for a registry key or for subkeys of a registry key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_CREATE_LINK">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_WOW64_64KEY">
            <summary>
            Indicates that an application on 64-bit Windows should operate on the 64-bit registry view. This flag is ignored by 32-bit Windows
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_WOW64_32KEY">
            <summary>
            Indicates that an application on 64-bit Windows should operate on the 32-bit registry view. This flag is ignored by 32-bit Windows
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.DELETE">
            <summary>
            The right to delete the object.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.READ_CONTROL">
            <summary>
            The right to read the information in the object's security descriptor, not including the information in the system access control list (SACL).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.WRITE_DAC">
            <summary>
            The right to modify the discretionary access control list (DACL) in the object's security descriptor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.WRITE_OWNER">
            <summary>
            The right to change the owner in the object's security descriptor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_EXECUTE">
            <summary>
            Equivalent to KEY_READ.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_READ">
            <summary>
            Combines the STANDARD_RIGHTS_READ, KEY_QUERY_VALUE, KEY_ENUMERATE_SUB_KEYS, and KEY_NOTIFY values.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_WRITE">
            <summary>
            Combines the STANDARD_RIGHTS_WRITE, KEY_SET_VALUE, and KEY_CREATE_SUB_KEY access rights.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.RegistryKeyRights.KEY_ALL_ACCESS">
            <summary>
            Combines the STANDARD_RIGHTS_REQUIRED, KEY_QUERY_VALUE, KEY_SET_VALUE, KEY_CREATE_SUB_KEY, KEY_ENUMERATE_SUB_KEYS, KEY_NOTIFY, and KEY_CREATE_LINK access rights.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.RegistryUtilities">
            <summary>
            Defines registry utility functions.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RegistryUtilities.Create(Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid,System.Boolean)">
            <summary>
            Creates a RegistryKey class instance from a native handle.
            </summary>
            <param name="handle">The native handle. May not be null.</param>
            <param name="writable">if set to <c>true</c> the key is opened in writable mode.</param>
            <returns>A newly created instance of the RegistryKey class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RegistryUtilities.GetHandle(Microsoft.Win32.RegistryKey)">
            <summary>
            Gets the native handle of a registry key.
            </summary>
            <param name="key">The registry key. May not be null.</param>
            <returns>The registry key handle.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RegistryUtilities.OpenSubKey(Microsoft.Win32.RegistryKey,System.String,CodeFluent.Runtime.Utilities.RegistryKeyOptions,CodeFluent.Runtime.Utilities.RegistryKeyRights)">
            <summary>
            Opens a registry sub key.
            </summary>
            <param name="key">The parent key. May not be null.</param>
            <param name="subKeyName">The sub key name or path.</param>
            <param name="options">The options to use.</param>
            <param name="rights">The rights to use.</param>
            <returns>A newly created instance of the RegistryKey class.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ScriptEngine">
            <summary>
            Represents a Windows Script Engine such as JScript, VBScript, etc.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ScriptEngine.MethodName">
            <summary>
            The name of the function used for simple evaluation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ScriptEngine.DefaultLanguage">
            <summary>
            The default scripting language name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ScriptEngine.JavaScriptLanguage">
            <summary>
            The JavaScript or jscript scripting language name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ScriptEngine.VBScriptLanguage">
            <summary>
            The javascript or jscript scripting language name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ScriptEngine.ChakraClsid">
            <summary>
            The chakra javascript engine CLSID. The value is {16d51579-a30b-4c8b-a276-0ff4dc41e755}.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.GetVersion(System.String)">
            <summary>
            Determines if a script engine with the input name exists.
            </summary>
            <param name="language">The language.</param>
            <returns>true if the engine exists; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.#ctor(System.String)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEngine"/> class. 
            </summary> 
            <param name="language">The scripting language. Standard Windows Script engines names are 'jscript' or 'vbscript'.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.GetProperty``1(System.Int32,``0)">
            <summary>
            Gets a script engine property.
            </summary>
            <typeparam name="T">The expected property type.</typeparam>
            <param name="index">The property index.</param>
            <param name="defaultValue">The default value if not found.</param>
            <returns>The value of the property or the default value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.TryGetProperty(System.Int32,System.Object@)">
            <summary>
            Gets a script engine property.
            </summary>
            <param name="index">The property index.</param>
            <param name="value">The value.</param>
            <returns>true if the property was successfully got; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.SetProperty(System.Int32,System.Object)">
            <summary>
            Sets a script engine property.
            </summary>
            <param name="index">The property index.</param>
            <param name="value">The value.</param>
            <returns>true if the property was successfully set; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.SetNamedItem(System.String,System.Object)">
            <summary> 
            Adds the name of a root-level item to the scripting engine's name space. 
            </summary> 
            <param name="name">The name. May not be null.</param> 
            <param name="value">The value. It must be a ComVisible object. You can pass null and hook the ResolveName event.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Eval(System.String,System.String)">
            <summary> 
            Evaluates an expression using the specified language. 
            </summary> 
            <param name="language">The language.</param> 
            <param name="expression">The expression. May not be null.</param> 
            <returns>The result of the evaluation.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Eval(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary> 
            Evaluates an expression using the specified language, with an optional array of named items. 
            </summary> 
            <param name="language">The language.</param> 
            <param name="expression">The expression. May not be null.</param> 
            <param name="namedItems">The named items array.</param> 
            <returns>The result of the evaluation.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Eval(System.String,System.String,System.Boolean,System.Exception@,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Evaluates an expression using the specified language, with an optional array of named items.
            </summary>
            <param name="language">The language.</param>
            <param name="expression">The expression. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <param name="error">The error if an error occurred. May be null.</param>
            <param name="namedItems">The named items array.</param>
            <returns>
            The result of the evaluation.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Eval(System.String)">
            <summary>
            Evaluates an expression.
            </summary>
            <param name="expression">The expression. May not be null.</param>
            <returns>
            The result of the evaluation.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Eval(System.String,System.Boolean,System.Exception@)">
            <summary>
            Evaluates an expression.
            </summary>
            <param name="expression">The expression. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <param name="error">The error if an error occurred. May be null.</param>
            <returns>
            The result of the evaluation.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Parse(System.String)">
            <summary>
            Parses the specified text and returns an object that can be used for evaluation. 
            </summary> 
            <param name="text">The text to parse.</param> 
            <returns>An instance of the ParsedScript class.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Parse(System.String,System.Boolean,System.Exception@)">
            <summary> 
            Parses the specified text and returns an object that can be used for evaluation. 
            </summary> 
            <param name="text">The text to parse.</param> 
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <param name="error">The error if an error occurred. May be null.</param>
            <returns>An instance of the ParsedScript type.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.ScriptEngine.ResolveName">
            <summary>
            Occurs when a script named item must be resolved.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEngine.Version">
            <summary>
            Gets the engine version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEngine.Tag">
            <summary>
            Gets or sets the object that contains data about the engine.
            </summary>
            <value>
            An object that contains data about the engine. The default is null.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEngine.Name">
            <summary>
            Gets the engine name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ScriptEngineCache">
            <summary>
            Represents a cache of Windows Script Engine expressions.
            Note a variable of this type must absolutely be bound to a given thread, for example with a ThreadStatic attribute, or just as a method local variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEngineCache"/> class.
            </summary>
            <param name="language">The language.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.ClearCache">
            <summary>
            Clears the cache.
            </summary>
            <returns>The number of parsed scripts that were in the cache.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.Remove(System.String)">
            <summary>
            Removes the specified code or expression from the cache.
            </summary>
            <param name="code">The code or expression. May not be null.</param>
            <returns>true if the code or expression is successfully found and removed; otherwise, false</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.SetNamedItem(System.String,System.Object)">
            <summary>
            Add a named item to the script engine execution context. If null is passed for the value, you must attach to the ResolveItemName event.
            </summary>
            <param name="name">The name. May not be null.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.Eval``1(System.String,``0)">
            <summary>
            Evaluates the specified javascript expression. Only supports javascript. Can throw parsing or execution errors.
            </summary>
            <param name="expression">The expression. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The object returned by the evaluated expression.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.Eval``1(System.String,``0,System.Boolean,System.Exception@)">
            <summary>
            Evaluates the specified javascript expression. Only supports javascript. Can throw parsing or execution errors.
            </summary>
            <param name="expression">The expression. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be throw on parsing or execution.</param>
            <param name="error">The error. May be null if no error was detected</param>
            <returns>
            The object returned by the evaluated expression.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.Eval(System.String)">
            <summary>
            Evaluates the specified javascript expression. Only supports javascript. Can throw parsing or execution errors.
            </summary>
            <param name="expression">The expression. May not be null.</param>
            <returns>
            The object returned by the evaluated expression.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.Eval(System.String,System.Boolean,System.Exception@)">
            <summary>
            Evaluates the specified javascript expression. Only supports javascript.
            </summary>
            <param name="expression">The expression. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be throw on parsing or execution.</param>
            <param name="error">The error. May be null if no error was detected</param>
            <returns>The object returned by the evaluated expression.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineCache.ParseMethod(System.String,System.Boolean,System.Exception@)">
            <summary>
            Parses a method. The code must be a full function definition with a return type (and optional arguments), for example: 'function My(){return something;}'.
            </summary>
            <param name="code">The code. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be throw on parsing.</param>
            <param name="error">The error. May be null if no error was detected</param>
            <returns>An instance of a parsed script.</returns>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.ScriptEngineCache.ResolveName">
            <summary>
            Occurs when a script named item must be resolved.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEngineCache.Engine">
            <summary>
            Gets the engine instance.
            </summary>
            <value>
            The engine instance or null if this object was diposed.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEngineCache.Version">
            <summary>
            Gets the engine version.
            </summary>
            <value>
            The engine version.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEngineCache.Count">
            <summary>
            Gets the number of parsed scripts in the cache.
            </summary>
            <value>
            The the number of parsed scripts in the cache.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ScriptEngineResolveNameEventArgs">
            <summary>
            Provides data for a resolve name event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngineResolveNameEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEngineResolveNameEventArgs"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEngineResolveNameEventArgs.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEngineResolveNameEventArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ScriptEvaluator">
            <summary>
            A utility class to evaluate a Script (VBScript, JavaScript or other scripting engines) expression.
            This class is obsolete. Please use the ScriptEngine class instead.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ScriptEvaluator.MethodName">
            <summary>
            Defines the name of the method to append to the scripts.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ScriptEvaluator.DefaultLanguage">
            <summary>
            Defines the default scripting language. Currently defined as "javascript".
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEvaluator"/> class.
            </summary>
            <param name="code">The script text.</param>
            <param name="isProcedure">if set to <c>true</c> the text defines a procedure, otherwise a function.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.#ctor(System.String,System.Boolean,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEvaluator"/> class.
            </summary>
            <param name="code">The script text.</param>
            <param name="isProcedure">if set to <c>true</c> the text defines a procedure, otherwise a function.</param>
            <param name="argumentNames">A list of predefined optional argument names.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.#ctor(System.String,System.Boolean,System.String,System.Boolean,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEvaluator"/> class.
            </summary>
            <param name="code">The script text.</param>
            <param name="isProcedure">if set to <c>true</c> the text defines a procedure, otherwise a function.</param>
            <param name="language">The script language. May be null.</param>
            <param name="allowUI">if set to <c>true</c> User Interface actions are allowed.</param>
            <param name="argumentNames">A list of predefined optional argument names.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.#ctor(System.String,System.Boolean,System.String,System.Boolean,System.Int32,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEvaluator"/> class.
            </summary>
            <param name="code">The script text.</param>
            <param name="isProcedure">if set to <c>true</c> the text defines a procedure, otherwise a function.</param>
            <param name="language">The script language. May be null.</param>
            <param name="allowUI">if set to <c>true</c> User Interface actions are allowed.</param>
            <param name="timeout">Specifies the maximum number of milliseconds the script will run before an error will be generated.</param>
            <param name="argumentNames">A list of predefined optional argument names.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate">
            <summary>
            Evaluates this instance.
            </summary>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate(System.String,System.Object)">
            <summary>
            Evaluates this instance.
            </summary>
            <param name="argument0Name">Name of the first argument. May not be null.</param>
            <param name="argument0Value">The first argument value.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate(System.String,System.Object,System.String,System.Object)">
            <summary>
            Evaluates this instance.
            </summary>
            <param name="argument0Name">Name of the first argument. May not be null.</param>
            <param name="argument0Value">The first argument value.</param>
            <param name="argument1Name">Name of the second argument.</param>
            <param name="argument1Value">The second argument value.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate(System.String,System.Object,System.String,System.Object,System.String,System.Object)">
            <summary>
            Evaluates this instance.
            </summary>
            <param name="argument0Name">Name of the first argument. May not be null.</param>
            <param name="argument0Value">The first argument value.</param>
            <param name="argument1Name">Name of the second argument.</param>
            <param name="argument1Value">The second argument value.</param>
            <param name="argument2Name">Name of the third argument.</param>
            <param name="argument2Value">The third argument value.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate``1(System.Collections.IDictionary,``0)">
            <summary>
            Evaluates this instance and converts the result.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="arguments">The named arguments.</param>
            <param name="defaultValue">The default value if conversion fails.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate(System.Collections.IDictionary)">
            <summary>
            Evaluates this instance and converts the result.
            </summary>
            <param name="arguments">The named arguments.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate(System.String)">
            <summary>
            Evaluates the input script.
            </summary>
            <param name="code">The script text.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate(System.String,System.Collections.IDictionary)">
            <summary>
            Evaluates the input script.
            </summary>
            <param name="code">The script text.</param>
            <param name="arguments">The optional named arguments.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate(System.String,System.String,System.Boolean)">
            <summary>
            Evaluates the input script.
            </summary>
            <param name="code">The script text.</param>
            <param name="language">The script language. May be null.</param>
            <param name="allowUI">if set to <c>true</c> User Interface actions are allowed.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate(System.String,System.String,System.Boolean,System.Collections.IDictionary)">
            <summary>
            Evaluates the input script.
            </summary>
            <param name="code">The script text.</param>
            <param name="language">The script language. May be null.</param>
            <param name="allowUI">if set to <c>true</c> User Interface actions are allowed.</param>
            <param name="arguments">The optional named arguments.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluator.Evaluate(System.String,System.String,System.Boolean,System.Int32,System.Collections.IDictionary)">
            <summary>
            Evaluates the input script.
            </summary>
            <param name="code">The script text.</param>
            <param name="language">The script language. May be null.</param>
            <param name="allowUI">if set to <c>true</c> User Interface actions are allowed.</param>
            <param name="timeout">Specifies the maximum number of milliseconds the script will run before an error will be generated.</param>
            <param name="arguments">The optional named arguments.</param>
            <returns>The result.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluator.IsProcedure">
            <summary>
            Gets a value indicating whether this instance is a procedure or a function.
            </summary>
            <value>
            	<c>true</c> if this instance is a procedure or a function; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluator.IsFunction">
            <summary>
            Gets a value indicating whether this instance is a function or a procedure.
            </summary>
            <value>
            	<c>true</c> if this instance is a function or a procedure; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluator.Code">
            <summary>
            Gets the script text.
            </summary>
            <value>The script text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluator.Language">
            <summary>
            Gets the script language.
            </summary>
            <value>The script language.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluator.AllowUI">
            <summary>
            Gets a value indicating whether User Interface actions are allowed.
            </summary>
            <value><c>true</c> if User Interface actions are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ScriptEvaluatorException">
            <summary>
            The exception that is thrown when a script error occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEvaluatorException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEvaluatorException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEvaluatorException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEvaluatorException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEvaluatorException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.Description">
            <summary>
            Gets the error description.
            </summary>
            <value>The error description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.Line">
            <summary>
            Gets the error line.
            </summary>
            <value>The error line.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.Column">
            <summary>
            Gets the error column.
            </summary>
            <value>The error column.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.Number">
            <summary>
            Gets the error number.
            </summary>
            <value>The error number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptEvaluatorException.Text">
            <summary>
            Gets the error text.
            </summary>
            <value>The error text.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ScriptException">
            <summary> 
            Defines a Windows Script Engine exception. 
            </summary> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor(System.String)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
            <param name="message">The message.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor(System.Exception)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
            <param name="innerException">The inner exception.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor(System.String,System.Exception)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
            <param name="message">The message.</param> 
            <param name="innerException">The inner exception.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param> 
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Description">
            <summary> 
            Gets the error description intended for the customer. 
            </summary> 
            <value>The description text.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Line">
            <summary> 
            Gets the line number of error. 
            </summary> 
            <value>The line number.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Column">
            <summary> 
            Gets the character position of error. 
            </summary> 
            <value>The column number.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Number">
            <summary> 
            Gets a value describing the error. 
            </summary> 
            <value>The error number.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Text">
            <summary> 
            Gets the text line in the source file where an error occurred. 
            </summary> 
            <value>The text.</value> 
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SearchAndReplace">
            <summary>
            Defines a utility class to search for pattern in input text and replace.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SearchAndReplace"/> class.
            </summary>
            <param name="pattern">The pattern to use. May not be null.</param>
            <param name="replacements">A comma separated list of replacement strings. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SearchAndReplace"/> class.
            </summary>
            <param name="pattern">The pattern to use. May not be null.</param>
            <param name="replacements">A comma separated list of replacement strings. May not be null.</param>
            <param name="regexOptions">The regex options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.Char,System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SearchAndReplace"/> class.
            </summary>
            <param name="pattern">The pattern to use. May not be null.</param>
            <param name="replacements">A comma separated list of replacement strings. May not be null.</param>
            <param name="regexOptions">The regex options.</param>
            <param name="separator">The separator character.</param>
            <param name="quote">The quote character.</param>
            <param name="assignment">The assignment character.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.Replace(System.String)">
            <summary>
            Replaces the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>The replaced text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.Evaluator(System.Text.RegularExpressions.Match)">
            <summary>
            Evaluates the specified match.
            </summary>
            <param name="match">The match. May not be null.</param>
            <returns>The replaced string.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SecurityUtilities">
            <summary>
            Defines a set of security utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.LogonUser(System.String,System.String,System.String)">
            <summary>
            Logons the user.
            </summary>
            <param name="userName">The user name. May not be null.</param>
            <param name="domainName">The domain name.</param>
            <param name="password">The password. May not be null.</param>
            <returns>A token handle.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.ImpersonateAndDo(System.String,System.String,System.String,CodeFluent.Runtime.Utilities.SecurityUtilities.DoCallback)">
            <summary>
            Do something using specified credentials.
            </summary>
            <param name="userName">The user name. May not be null.</param>
            <param name="domainName">The domain name.</param>
            <param name="password">The password. May not be null.</param>
            <param name="action">The action. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.IsRepeatableHashAlgorithm(System.String)">
            <summary>
            Determines whether the specified algorithm computes a repeatable hash result.
            </summary>
            <param name="hashAlgorithmType">The hash algorithm type. May not be null.</param>
            <returns>
            	<c>true</c> if the specified algorithm computes a repeatable hash result; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.ProtectData(System.String,System.Boolean)">
            <summary>
            Encrypts the specified plain text and returns a BASE 64 string.
            </summary>
            <param name="plainText">The plain text.</param>
            <param name="localMachine">if set to <c>true</c> the local machine store is used, otherwise the user store is used.</param>
            <returns>The cypher text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.UnprotectData(System.String,System.Boolean)">
            <summary>
            Decrypts the specified cypher text.
            </summary>
            <param name="cipherText">The cypher text in a BASE64 format.</param>
            <param name="localMachine">if set to <c>true</c> the local machine store is used, otherwise the user store is used.</param>
            <returns>The plain text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.ProtectData(System.Byte[],System.Boolean)">
            <summary>
            Encrypts the specified plain text.
            </summary>
            <param name="plainText">The plain text.</param>
            <param name="localMachine">if set to <c>true</c> the local machine store is used, otherwise the user store is used.</param>
            <returns>The cypher text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.UnprotectData(System.Byte[],System.Boolean)">
            <summary>
            Decrypts the specified cypher text.
            </summary>
            <param name="cipherText">The cypher text.</param>
            <param name="localMachine">if set to <c>true</c> the local machine store is used, otherwise the user store is used.</param>
            <returns>The plain text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.Encrypt(System.Security.SecureString,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Encrypts the specified string and returns a byte array that contains the encrypted data.
            </summary>
            <param name="text">A string that contains data to encrypt.</param>
            <param name="scope">One of the enumeration values that specifies the scope of encryption.</param>
            <returns>A byte array representing the encrypted string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.Decrypt(System.Byte[],System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Decrypts the data in a specified byte array and returns a string that contains the decrypted data.
            </summary>
            <param name="data">A byte array containing data encrypted using the Encrypt method.</param>
            <param name="scope">One of the enumeration values that specifies the scope of data protection that was used to encrypt the data.</param>
            <returns>A string representing the decrypted data or null if something failed.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.ToInsecureString(System.Security.SecureString)">
            <summary>
            Converts a SecureString to a string.
            </summary>
            <param name="text">The input secure string.</param>
            <returns>A string instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.ToSecureString(System.String)">
            <summary>
            Converts a string to a the secure string.
            </summary>
            <param name="text">The input string.</param>
            <returns>A SecureString instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.GeneratePassword(System.Int32,System.Int32)">
            <summary>
            Generates a password.
            </summary>
            <param name="length">The password length.</param>
            <param name="numberOfNonAlphanumericCharacters">The number of non alphanumeric characters.</param>
            <returns>A generated password string</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SecurityUtilities.DoCallback">
            <summary>
            Defines a callback delegate.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Serializable`1">
            <summary>
            Defines a utility class to ease Xml serialization.
            </summary>
            <typeparam name="T">The type of objects to serialize and deserialize.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Validate(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Validates this instances.
            </summary>
            <param name="errors">An error collection that will be filled with validation errors.</param>
            <param name="memberName">The name of the member being validated or null if the whole instance is validated.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Validate(System.String)">
            <summary>
            Validates this instances.
            </summary>
            <param name="memberName">The name of the member being validated or null if the whole instance is validated.</param>
            <returns>null if this instance is valid or a string describing the validation errors.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.DeserializeFromConfiguration">
            <summary>
            Deserializes an instance from user configuration.
            </summary>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.String)">
            <summary>
            Deserializes an instance from a given file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.String,`0)">
            <summary>
            Deserializes an instance from a given file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="defaultValue">The default value in case of an error.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.TextReader,`0,System.Boolean)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.Xml.XmlReader,`0,System.Boolean)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.String,`0,System.Boolean)">
            <summary>
            Deserializes an instance from a given file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="defaultValue">The default value in case of an error.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes an instance from a given stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.Stream,`0)">
            <summary>
            Deserializes an instance from a given stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.Stream,`0,System.Boolean)">
            <summary>
            Deserializes an instance from a given stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.TextReader)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.TextReader,`0)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.Xml.XmlReader)">
            <summary>
            Deserializes an instance from a given xml reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.Xml.XmlReader,`0)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.SerializeToConfiguration">
            <summary>
            Serializes this instance to user configuration.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Serialize(System.Xml.XmlWriter)">
            <summary>
            Serializes this instance to an xml writer.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Serialize(System.IO.TextWriter)">
            <summary>
            Serializes this instance to a text writer.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Serialize(System.IO.Stream)">
            <summary>
            Serializes this instance to a stream.
            </summary>
            <param name="stream">The output stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Serialize(System.String)">
            <summary>
            Serializes this instance to a file.
            </summary>
            <param name="filePath">The output file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.CopyTo(System.Object)">
            <summary>
            Copies this instance to another target instance.
            </summary>
            <param name="target">The target. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Serializable`1.System#ComponentModel#IDataErrorInfo#Error">
            <summary>
            Gets an error message indicating what is wrong with this object.
            </summary>
            <value></value>
            <returns>
            An error message indicating what is wrong with this object. The default is an empty string ("").
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Serializable`1.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified column name.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Serializable`1.ConfigurationFilePath">
            <summary>
            Gets the user configuration file path for the given T type.
            </summary>
            <value>The configuration file path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ShortNameUtilities">
            <summary>
            A utility class to compute unique short names for a given collection of names.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ShortNameUtilities.BuildShortNames(System.Collections.ArrayList,System.Int32)">
            <summary>
            Builds a short names collection.
            </summary>
            <param name="names">The input collection of names to shorten. May not be null.</param>
            <param name="maxLength">Maximum length of computed short names.</param>
            <returns>A dictionary of shorten names</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ShortNameUtilities.CreateShortName(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.String)">
            <summary>
            Create a short name, making sure it does not collide with an existing collection of short names.
            </summary>
            <param name="shortNames">The list of existing short names.</param>
            <param name="maxLength">Maximum length of computed short name.</param>
            <param name="name">The shorten name.</param>
            <returns>A string representing the short name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ShortNameUtilities.BuildShortNames(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Builds a short names collection.
            </summary>
            <param name="names">The input collection of names to shorten. May not be null.</param>
            <param name="maxLength">Maximum length of computed short names.</param>
            <returns>A dictionary of shorten names</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ShortNameUtilities.BuildShortNames(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Builds a short names collection.
            </summary>
            <param name="names">The input collection of names to shorten. May not be null.</param>
            <param name="maxLength">Maximum length of computed short names.</param>
            <param name="replacements">A replacement dictionary. May be null.</param>
            <returns>
            A dictionary of shorten names
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1">
            <summary>
            Provides a class for a collection whose keys are the same as values.
            It is used for computing distinct values from a collection.
            </summary>
            <typeparam name="T">The value and key type</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="collection">An existing collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.</param>
            <param name="collection">An existing collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.</param>
            <param name="dictionaryCreationThreshold">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="collection">An existing collection.</param>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.</param>
            <param name="dictionaryCreationThreshold">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.GetKeyForItem(`0)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection.
            </summary>
            <param name="collection">The collection of elements to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes the elements from the specified collection.
            </summary>
            <param name="collection">The collection of elements to remove. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.Add(`0)">
            <summary>
            Adds an element to the end of the Collection if the element was not already added.
            </summary>
            <param name="item">The object to be added to the end of the collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.AddOrReplace(`0)">
            <summary>
            Adds an element to the end of the Collection if the element was not already added.
            </summary>
            <param name="item">The object to be added to the end of the collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.ToList">
            <summary>
            Copies the elements of the dictionary to a new list.
            </summary>
            <returns>A list of elements in the dictionary.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.ToArray">
            <summary>
            Copies the elements of the dictionary to a new array.
            </summary>
            <returns>An array of elements in the dictionary.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.GetDistinctValues(System.Collections.Generic.ICollection{`0})">
            <summary>
            Gets the distinct values for a given collection.
            </summary>
            <param name="collection">An existing collection. May not be null.</param>
            <returns>The list of distinct values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <param name="key">The <see cref="T:System.Object"/> to use as the key of the element to add.</param>
            <param name="value">The <see cref="T:System.Object"/> to use as the value of the element to add.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IDictionary"/> object contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary"/> object.</param>
            <returns>
            true if the <see cref="T:System.Collections.IDictionary"/> contains an element with the key; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> object for the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IDictionaryEnumerator"/> object for the <see cref="T:System.Collections.IDictionary"/> object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"/> has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> object containing the keys of the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.ICollection"/> object containing the keys of the <see cref="T:System.Collections.IDictionary"/> object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> object containing the values in the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.ICollection"/> object containing the values in the <see cref="T:System.Collections.IDictionary"/> object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Item(System.Object)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SilverlightUtilities">
            <summary>
            Defines a set of utilities for Silverlight.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.GetCodeFluentRuntimePath(CodeFluent.Runtime.Utilities.SilverlightVersion)">
            <summary>
            Gets the CodeFluent Entities runtime path for a given Silverlight version.
            </summary>
            <param name="slVersion">The Silverlight version.</param>
            <returns>A file path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.GetSdks">
            <summary>
            Gets a list of Silverlight SDKs.
            </summary>
            <returns>A list of Silverlight SDKs.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.GetSdkForReferencePath(System.String)">
            <summary>
            Gets the Silverlight SDK instance for a specific path.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>An instance of the SilverlightSdk class or null if it was not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.GetSdk(CodeFluent.Runtime.Utilities.SilverlightVersion)">
            <summary>
            Gets the Silverlight SDK instance for a specific Silverlight version. Silverlight 1 is not supported.
            </summary>
            <param name="version">The Silverlight version.</param>
            <returns>An instance of the SilverlightSdk class or null if it was not found.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk">
            <summary>
            Defines a Silverlight SDK.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.CompareTo(CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.Version">
            <summary>
            Gets the corresponding installed runtime version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.SilverlightVersion">
            <summary>
            Gets the silverlight version.
            </summary>
            <value>The silverlight version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.Name">
            <summary>
            Gets the Silverlight name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.DisplayVersion">
            <summary>
            Gets the Silverlight display version.
            </summary>
            <value>The display version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.RuntimeInstallationPath">
            <summary>
            Gets the runtime installation path.
            </summary>
            <value>The installation path. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.InstallationPath">
            <summary>
            Gets the SDK installation path.
            </summary>
            <value>The installation path. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.ClientLibrariesPath">
            <summary>
            Gets the SDK client libraries path.
            </summary>
            <value>The client libraries path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SilverlightVersion">
            <summary>
            Defines the Silverlight CLR versions.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Unspecified">
            <summary>
            The CLR is not Silverlight.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Silverlight1">
            <summary>
            Silverlight 1. Not supported by CodeFluent Entities.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Silverlight2">
            <summary>
            Silverlight 2.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Silverlight3">
            <summary>
            Silverlight 3.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Silverlight4">
            <summary>
            Silverlight 3.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.WindowsPhone70">
            <summary>
            Silverlight for Windows Phone 7.0
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.WindowsPhone71">
            <summary>
            Silverlight for Windows Phone 7.1
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SingleInstance">
            <summary>
            Defines a utility class to create single instance Windows applications.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SingleInstance"/> class.
            </summary>
            <param name="uniqueName">A unique name to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.RunFirstInstance(CodeFluent.Runtime.Utilities.SingleInstance.RunAction)">
            <summary>
            Runs the first instance of an application.
            </summary>
            <param name="action">The action to execute. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.RunFirstInstance(CodeFluent.Runtime.Utilities.SingleInstance.RunAction,System.IntPtr,System.IntPtr)">
            <summary>
            Runs the first instance of an application.
            </summary>
            <param name="action">The action to execute. May not be null.</param>
            <param name="wParam">The wParam value.</param>
            <param name="lParam">The lParam value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.ActivateWindow(System.IntPtr)">
            <summary>
            Try to activate a window using its handle.
            </summary>
            <param name="hwnd">The window handle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.OnWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean,System.Boolean)">
            <summary>
            A function that must be called during the standard Windows callback message processing.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="message">The Windows message.</param>
            <param name="wParam">The wParam value.</param>
            <param name="lParam">The lParam value.</param>
            <param name="restorePlacement">if set to <c>true</c> restore the window placement.</param>
            <param name="activate">if set to <c>true</c> activate the window.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.OnWndProc(System.Windows.Forms.Form,System.Int32,System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            A function that must be called during the standard Windows callback message processing.
            </summary>
            <param name="form">The form. May not be null.</param>
            <param name="message">The Windows message.</param>
            <param name="wParam">The wParam value.</param>
            <param name="lParam">The lParam value.</param>
            <param name="activate">if set to <c>true</c> activate the window.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.OnWndProc(System.Windows.Forms.Form,System.Windows.Forms.Message,System.Boolean)">
            <summary>
            A function that must be called during the standard Windows callback message processing.
            </summary>
            <param name="form">The form. May not be null.</param>
            <param name="message">The Windows message structure.</param>
            <param name="activate">if set to <c>true</c> activate the window.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.ReleaseMutex">
            <summary>
            Releases the mutex.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.WaitForMutext(System.Boolean,System.IntPtr,System.IntPtr)">
            <summary>
            Waits for mutext acquisition.
            </summary>
            <param name="force">if set to <c>true</c> consider the mutex as acquired.</param>
            <param name="wParam">The wParam value.</param>
            <param name="lParam">The lParam value.</param>
            <returns>true if the mutex was acquired; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SingleInstance.WaitForMutext(System.IntPtr,System.IntPtr)">
            <summary>
            Waits for mutext acquisition.
            </summary>
            <param name="wParam">The wParam value.</param>
            <param name="lParam">The lParam value.</param>
            <returns>true if the mutex was acquired; otherwise false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SingleInstance.Mutex">
            <summary>
            Gets the mutex.
            </summary>
            <value>
            The mutex.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SingleInstance.Message">
            <summary>
            Gets the Windows message value.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SingleInstance.RunAction">
            <summary>
            Defines an action.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Slug">
            <summary>
            Defines a set of utilities for creating slug urls.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Slug.Create(System.String)">
            <summary>
            Creates a slug from the specified text.
            </summary>
            <param name="text">The text. If null if specified, null will be returned.</param>
            <returns>
            A slugged text.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Slug.Create(System.String,CodeFluent.Runtime.Utilities.SlugOptions)">
            <summary>
            Creates a slug from the specified text.
            </summary>
            <param name="text">The text. If null if specified, null will be returned.</param>
            <param name="options">The options. May be null.</param>
            <returns>A slugged text.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SlugOptions">
            <summary>
            Defines options for the Slug utility class.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SlugOptions.DefaultMaximumLength">
            <summary>
            Defines the default maximum length. Currently equal to 80.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SlugOptions.DefaultSeparator">
            <summary>
            Defines the default maximum length. Currently equal to "-".
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SlugOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SlugOptions"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SlugOptions.IsAllowed(System.Char)">
            <summary>
            Determines whether the specified character is allowed.
            </summary>
            <param name="character">The character.</param>
            <returns>true if the character is allowed; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SlugOptions.Replace(System.Char)">
            <summary>
            Replaces the specified character by a given string.
            </summary>
            <param name="character">The character to replace.</param>
            <returns>a string.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SlugOptions.AllowedUnicodeCategories">
            <summary>
            Gets the allowed unicode categories list.
            </summary>
            <value>
            The allowed unicode categories list.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SlugOptions.AllowedRanges">
            <summary>
            Gets the allowed ranges list.
            </summary>
            <value>
            The allowed ranges list.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SlugOptions.MaximumLength">
            <summary>
            Gets or sets the maximum length.
            </summary>
            <value>
            The maximum length.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SlugOptions.Separator">
            <summary>
            Gets or sets the separator.
            </summary>
            <value>
            The separator.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SlugOptions.Culture">
            <summary>
            Gets or sets the culture for case conversion.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SlugOptions.CanEndWithSeparator">
            <summary>
            Gets or sets a value indicating whether the string can end with a separator string.
            </summary>
            <value>
              <c>true</c> if the string can end with a separator string; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SlugOptions.EarlyTruncate">
            <summary>
            Gets or sets a value indicating whether the string is truncated before normalization.
            </summary>
            <value>
              <c>true</c> if the string is truncated before normalization; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SlugOptions.ToLower">
            <summary>
            Gets or sets a value indicating whether to lowercase the resulting string.
            </summary>
            <value>
              <c>true</c> if the resulting string must be lowercased; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SlugOptions.ToUpper">
            <summary>
            Gets or sets a value indicating whether to uppercase the resulting string.
            </summary>
            <value>
              <c>true</c> if the resulting string must be uppercased; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2">
            <summary>
            Provides a generic collection that supports data binding and sorting.
            </summary>
            <typeparam name="Te">The type of items in the collection.</typeparam>
            <typeparam name="Tk">The type of keys of items in the collection.</typeparam>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SortableBindingList`1">
            <summary>
            Provides a generic collection that supports data binding and sorting.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SortableBindingList`1.ListChangedTypeDeleting">
            <summary>
            Defines a deleting list changed event type.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingList`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingList`1"/> class.
            </summary>
            <param name="list">An <see cref="T:System.Collections.Generic.IList`1"/> of items to be contained in the <see cref="T:System.ComponentModel.BindingList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.CreateInstance(System.Type)">
            <summary>
            Creates an instance of the SortableBindingList for the specified type.
            </summary>
            <param name="type">The argument type.</param>
            <returns>
            An instance of the SortableBindingList with the specified type argument.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.CreateInstance">
            <summary>
            Creates an instance of the SortableBindingList.
            </summary>
            <returns>
            An instance of the SortableBindingList.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort">
            <summary>
            Sorts the elements in the entire list using the default comparer. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire list using the default comparer. 
            </summary>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Collections.Generic.IComparer{`0},System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the elements in the entire list using the specified comparer.
            </summary>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire list using the specified comparer.
            </summary>
            <param name="index">The length of the range to sort.</param>
            <param name="count">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0},System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the elements in the entire list using the specified comparer.
            </summary>
            <param name="index">The length of the range to sort.</param>
            <param name="count">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire list using the specified comparison.
            </summary>
            <param name="comparison">The Comparison to use when comparing elements.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.String)">
            <summary>
            Sorts the elements in the entire list by a property, using the default comparer.
            </summary>
            <param name="property">The property name. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the elements in the entire list by a property, using the default comparer and the specified direction.
            </summary>
            <param name="property">The property name. May be null.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the items.
            </summary>
            <param name="property">The property to sort by. May be null.</param>
            <param name="direction">The direction to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ApplySortCore(System.String,System.ComponentModel.ListSortDirection,System.Nullable{System.StringComparison})">
            <summary>
            Sorts the items.
            </summary>
            <param name="property">The property to sort by. May be null.</param>
            <param name="direction">The direction to use.</param>
            <param name="fallbackComparison">The fallback string comparison to use if the objects cannot be compared using IComparable, or null to throw error in this case.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.RemoveSortCore">
            <summary>
            Removes any sort applied with <see cref="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)"/> if sorting is implemented in a derived class; otherwise, raises <see cref="T:System.NotSupportedException"/>.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties on each item used to bind data.
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects to find in the collection as bindable. This can be null.</param>
            <returns>
            The <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties on each item used to bind data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Returns the name of the list.
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects, for which the list name is returned. This can be null.</param>
            <returns>The name of the list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the list.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes the elements from the specified collection.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Clone">
            <summary>
            Clones the specified list.
            </summary>
            <returns>A new instance of the list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Clone(System.Boolean)">
            <summary>
            Clones the specified list.
            </summary>
            <param name="deep">if set to <c>true</c> the objects contained in the list will be cloned as well if they implement the System.ICloneable interface.</param>
            <returns>A new instance of the list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.CreateNew">
            <summary>
            Creates a new instance of this type.
            </summary>
            <returns>A new instance of this type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToSortedList">
            <summary>
            Clones this list and sort it using the default comparer.
            </summary>
            <returns>A sorted clone of this type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToSortedList(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Clones this list and sort it by a property, using the default comparer and the specified direction.
            </summary>
            <param name="property">The property.</param>
            <param name="direction">The direction.</param>
            <returns>
            A sorted clone of this type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToSortedList(System.String)">
            <summary>
            Clones this list and sort it by a property, using the default comparer.
            </summary>
            <param name="property">The property.</param>
            <returns>
            A sorted clone of this type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToSortedList(System.Comparison{`0})">
            <summary>
            Clones this list and sort it using the specified comparison.
            </summary>
            <param name="comparison">The comparison.</param>
            <returns>
            A sorted clone of this type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToSortedList(System.Collections.Generic.IComparer{`0})">
            <summary>
            Clones this list and sort it using the specified comparer.
            </summary>
            <param name="comparer">The comparer.</param>
            <returns>
            A sorted clone of this type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToSortedList(System.Collections.Generic.IComparer{`0},System.ComponentModel.ListSortDirection)">
            <summary>
            Clones this list and sort it using the specified comparer and the specified direction.
            </summary>
            <param name="comparer">The comparer.</param>
            <param name="direction">The direction.</param>
            <returns>
            A sorted clone of this type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToSortedList(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Clones this list and sort it using the specified comparer.
            </summary>
            <param name="index">The length of the range to sort.</param>
            <param name="count">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
            <returns>
            A sorted clone of this type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToSortedList(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0},System.ComponentModel.ListSortDirection)">
            <summary>
            Clones this list and sort it using the specified comparer and the specified direction.
            </summary>
            <param name="index">The length of the range to sort.</param>
            <param name="count">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
            <param name="direction">The direction.</param>
            <returns>
            A sorted clone of this type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToArray">
            <summary>
            Copies the elements of the list to a new array.
            </summary>
            <returns>An array of elements in the list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.-or- null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.</param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.-or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.SortProperty">
            <summary>
            Gets the property that is being used for sorting.
            </summary>
            <value></value>
            <returns>The property that is being used for sorting.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.SortDirection">
            <summary>
            Gets the direction of the sort.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.ComponentModel.ListSortDirection"/> values.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.SortFallbackComparison">
            <summary>
            Gets or sets the fallback string comparison to use for sorting operations.
            </summary>
            <value>
            The fallback comparison.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.SupportsSortingCore">
            <summary>
            Gets a value indicating whether the list supports sorting.
            </summary>
            <value></value>
            <returns>true if the list supports sorting; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.SortDirectionCore">
            <summary>
            Gets the direction the list is sorted.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.ComponentModel.ListSortDirection"/> values. The default is <see cref="F:System.ComponentModel.ListSortDirection.Ascending"/>. </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.Last">
            <summary>
            Gets the last item in the list.
            </summary>
            <value>The last item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.First">
            <summary>
            Gets the first item in the list.
            </summary>
            <value>The first item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.IsSortedCore">
            <summary>
            Gets a value indicating whether the list is sorted.
            </summary>
            <value></value>
            <returns>true if the list is sorted; otherwise, false. The default is false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2"/> class.
            </summary>
            <param name="keyComparer">The key comparer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2"/> class.
            </summary>
            <param name="list">An <see cref="T:System.Collections.Generic.IList`1"/> of items to be contained in the <see cref="T:System.ComponentModel.BindingList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.#ctor(System.Collections.Generic.IList{`0},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2"/> class.
            </summary>
            <param name="list">An <see cref="T:System.Collections.Generic.IList`1"/> of items to be contained in the <see cref="T:System.ComponentModel.BindingList`1"/>.</param>
            <param name="keyComparer">The key comparer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.ClearItems">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.InsertItem(System.Int32,`0)">
            <summary>
            Inserts the specified item in the collection at the specified index.
            </summary>
            <param name="index">The zero-based index where the item is to be inserted.</param>
            <param name="item">The item to insert in the collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.SetItem(System.Int32,`0)">
            <summary>
            Replaces the item at the specified index with the specified item.
            </summary>
            <param name="index">The zero-based index of the item to replace.</param>
            <param name="item">The new value for the item at the specified index. The value can be null for reference types.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.RemoveKey(`1)">
            <summary>
            Removes the specified item by its key.
            </summary>
            <param name="key">The item key. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.Remove(`0)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item to remove. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.ContainsKey(`1)">
            <summary>
            Determines whether the collection contains an item with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the collection contains an item with the specified key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.IndexOf(`1)">
            <summary>
            Determines the index of a specific item in the collection
            </summary>
            <param name="key">The key of the object to locate.</param>
            <returns>The index of item if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.ContainsValue(`0)">
            <summary>
            Determines whether the collection contains the specified item.
            </summary>
            <param name="item">The item to test.</param>
            <returns>
            	<c>true</c> if the collection contains the specified value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.BindingList`1.ListChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.OnNodeKeyChanged(System.Object,CodeFluent.Runtime.Utilities.KeyChangedEventArgs{`1})">
            <summary>
            Called when an item's key changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.CloneEmptyCollection">
            <summary>
            Clones the collection without the elements.
            </summary>
            <returns>A new instance of the collection.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.Clone(System.Boolean)">
            <summary>
            Clones the specified collection.
            </summary>
            <param name="deep">if set to <c>true</c> the objects contained in the collection will be cloned as well if they implement the System.ICloneable interface.</param>
            <returns>A new instance of the collection that can be safely cast to a SortableBindingCollection.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.Dictionary">
            <summary>
            Gets the underlying dictionary instance.
            </summary>
            <value>The dictionary instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.AllowReplaceOnInsert">
            <summary>
            Gets a value indicating whether items must be replaced if they already exist.
            </summary>
            <value><c>true</c> if items must be replaced if they already exist; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.Item(`1)">
            <summary>
            Gets or sets the item with the specified key.
            </summary>
            <value>The item instance.</value>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentLightWeightPersistence">
            <summary>
            Represents the object to relational mapping helpers of CodeFluent light weight runtime components.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.#ctor(System.Data.IDataReader,System.String,CodeFluent.Runtime.Utilities.Pair{System.String,System.String}[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentLightWeightPersistence"/> class.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="transposeFormat">The transpose format.</param>
            <param name="mappings">The mappings. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.ReadList(System.Data.IDataReader,System.Collections.IList,System.Type,CodeFluent.Runtime.Utilities.Pair{System.String,System.String}[])">
            <summary>
            Reads a list of instances from a database reader.
            </summary>
            <param name="reader">The input reader. May be null.</param>
            <param name="list">The list to fill. May not be null.</param>
            <param name="type">The instance type. May not be null.</param>
            <param name="properties">A list of properties and column names. Only used if the type is not ICodeFluentEntity nor ICodeFluentLightEntity. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.ReadRecord(System.Data.IDataReader,CodeFluent.Runtime.ICodeFluentLightEntity,System.String,CodeFluent.Runtime.Utilities.Pair{System.String,System.String}[])">
            <summary>
            Reads a CodeFluent light weight entity from a database record.
            </summary>
            <param name="reader">The original data reader. May not be null.</param>
            <param name="entity">An instance of a CodeFluent light weight entity. May not be null.</param>
            <param name="transposeFormat">The transpose format.</param>
            <param name="mappings">The mappings. May be null.</param>
            <returns>The passed-in entity instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.ReadRecord(System.Data.IDataReader,CodeFluent.Runtime.ICodeFluentEntity,System.String,CodeFluent.Runtime.Utilities.Pair{System.String,System.String}[])">
            <summary>
            Reads a CodeFluent entity from a database record.
            </summary>
            <param name="reader">The original data reader. May not be null.</param>
            <param name="entity">An instance of a CodeFluent light weight entity. May not be null.</param>
            <param name="transposeFormat">The transpose format.</param>
            <param name="mappings">The mappings. May be null.</param>
            <returns>The passed-in entity instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.Close">
            <summary>
            Closes the <see cref="T:System.Data.IDataReader"/> Object.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetSchemaTable">
            <summary>
            Returns a <see cref="T:System.Data.DataTable"/> that describes the column metadata of the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <returns>
            A <see cref="T:System.Data.DataTable"/> that describes the column metadata.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.NextResult">
            <summary>
            Advances the data reader to the next result, when reading the results of batch SQL statements.
            </summary>
            <returns>
            true if there are more rows; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.Read">
            <summary>
            Advances the <see cref="T:System.Data.IDataReader"/> to the next record.
            </summary>
            <returns>
            true if there are more rows; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetByte(System.Int32)">
            <summary>
            Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>
            The 8-bit unsigned integer value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index within the field from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for <paramref name="buffer"/> to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetChar(System.Int32)">
            <summary>
            Gets the character value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>
            The character value of the specified column.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldoffset">The index within the row from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for <paramref name="buffer"/> to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of characters read.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetData(System.Int32)">
            <summary>
            Returns an <see cref="T:System.Data.IDataReader"/> for the specified column ordinal.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            An <see cref="T:System.Data.IDataReader"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetDataTypeName(System.Int32)">
            <summary>
            Gets the data type information for the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The data type information for the specified field.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetDateTime(System.Int32)">
            <summary>
            Gets the date and time data value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The date and time data value of the specified field.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetDecimal(System.Int32)">
            <summary>
            Gets the fixed-position numeric value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The fixed-position numeric value of the specified field.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetDouble(System.Int32)">
            <summary>
            Gets the double-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The double-precision floating point number of the specified field.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetFieldType(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Type"/> information corresponding to the type of <see cref="T:System.Object"/> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"/>.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The <see cref="T:System.Type"/> information corresponding to the type of <see cref="T:System.Object"/> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetFloat(System.Int32)">
            <summary>
            Gets the single-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The single-precision floating point number of the specified field.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetGuid(System.Int32)">
            <summary>
            Returns the GUID value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The GUID value of the specified field.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetInt16(System.Int32)">
            <summary>
            Gets the 16-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The 16-bit signed integer value of the specified field.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetInt32(System.Int32)">
            <summary>
            Gets the 32-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The 32-bit signed integer value of the specified field.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetInt64(System.Int32)">
            <summary>
            Gets the 64-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The 64-bit signed integer value of the specified field.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetName(System.Int32)">
            <summary>
            Gets the name for the field to find.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The name of the field or the empty string (""), if there is no value to return.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetOrdinal(System.String)">
            <summary>
            Return the index of the named field using mappings and transpose format.
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>The index of the named field.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetString(System.Int32)">
            <summary>
            Gets the string value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The string value of the specified field.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetValue(System.Int32)">
            <summary>
            Return the value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The <see cref="T:System.Object"/> which will contain the field value upon return.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.GetValues(System.Object[])">
            <summary>
            Gets all the attribute fields in the collection for the current record.
            </summary>
            <param name="values">An array of <see cref="T:System.Object"/> to copy the attribute fields into.</param>
            <returns>
            The number of instances of <see cref="T:System.Object"/> in the array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentLightWeightPersistence.IsDBNull(System.Int32)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            true if the specified field is set to null; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLightWeightPersistence.BaseReader">
            <summary>
            Gets the base reader.
            </summary>
            <value>The base reader.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLightWeightPersistence.TransposeFormat">
            <summary>
            Gets the transpose format.
            </summary>
            <value>The transpose format.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLightWeightPersistence.Mappings">
            <summary>
            Gets the mappings.
            </summary>
            <value>The mappings.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLightWeightPersistence.Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row.
            </summary>
            <value></value>
            <returns>The level of nesting.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLightWeightPersistence.IsClosed">
            <summary>
            Gets a value indicating whether the data reader is closed.
            </summary>
            <value></value>
            <returns>true if the data reader is closed; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLightWeightPersistence.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
            <value></value>
            <returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLightWeightPersistence.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
            <value></value>
            <returns>When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLightWeightPersistence.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified name, using mappings and transpose format.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentLightWeightPersistence.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified i.
            </summary>
            <value></value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SystemUtilities">
            <summary>
            Defines a set of system utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SystemUtilities.GetTokenElevationType">
            <summary>
            Gets the token elevation type for the current process.
            </summary>
            <returns>The token elevation type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SystemUtilities.GetDpiSettings">
            <summary>
            Gets the current DPI settings.
            </summary>
            <returns>The DPI settings</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SystemUtilities.GetComputerName(CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat)">
            <summary>
            Retrieves a NetBIOS or DNS name associated with the local computer. The names are established at system startup, when the system reads them from the registry.
            </summary>
            <param name="format">The name format.</param>
            <returns>The requested name or null if an error occurred.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SystemUtilities.GetComputerName(CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat,System.Boolean)">
            <summary>
            Retrieves a NetBIOS or DNS name associated with the local computer. The names are established at system startup, when the system reads them from the registry.
            </summary>
            <param name="format">The name format.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The requested name or null if an error occurred.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SystemUtilities.GetVirtualMachineInformation">
            <summary>
            Gets virtual machine information.
            </summary>
            <returns>A string describing virtual environement or null if not found.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.BitnessDescription">
            <summary>
            Gets a descriptive string of the current process bitness mode.
            </summary>
            <value>The bitness description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.IsWow64">
            <summary>
            Gets a value indicating whether the specified process is running under WOW64.
            </summary>
            <value><c>true</c> if the specified process is running under WOW64; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.Is64BitsProcess">
            <summary>
            Gets a value indicating whether this process is a 64 bits process.
            </summary>
            <value><c>true</c> if this process is a 64 bits process; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.ProcessorArchitecture">
            <summary>
            Gets the current computer system processor architecture.
            </summary>
            <value>The processor architecture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.X86ProgramFiles">
            <summary>
            Gets the X86 program files directory.
            </summary>
            <returns>The X86 program files directory.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.TimeSinceStartup">
            <summary>
            Gets the time since system startup.
            </summary>
            <value>
            The time since startup.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.TickCount">
            <summary>
            Gets the unbiased tick count, if possible.
            </summary>
            <value>
            The tick count.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat">
            <summary>
            Defines a computer name format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat.NetBIOS">
            <summary>
            The NetBIOS name of the local computer. If the local computer is a node in a cluster, the NetBIOS name of the cluster virtual server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat.DnsHostname">
            <summary>
            The DNS host name of the local computer. If the local computer is a node in a cluster, the DNS host name of the cluster virtual server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat.DnsDomain">
            <summary>
            The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, the DNS domain name of the cluster virtual server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat.DnsFullyQualified">
            <summary>
            The fully qualified DNS name that uniquely identifies the local computer. This name is a combination of the DNS host name and the DNS domain name, using the form HostName.DomainName. If the local computer is a node in a cluster, the fully qualified DNS name of the cluster virtual server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat.PhysicalNetBIOS">
            <summary>
            The NetBIOS name of the local computer. If the local computer is a node in a cluster, the NetBIOS name of the local computer, not the name of the cluster virtual server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat.PhysicalDnsHostname">
            <summary>
            The DNS host name of the local computer. If the local computer is a node in a cluster, the DNS host name of the local computer, not the name of the cluster virtual server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat.PhysicalDnsDomain">
            <summary>
            The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, the DNS domain name of the local computer, not the name of the cluster virtual server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SystemUtilities.ComputerNameFormat.PhysicalDnsFullyQualified">
            <summary>
            The fully qualified DNS name that uniquely identifies the computer. If the local computer is a node in a cluster, the fully qualified DNS name of the local computer, not the name of the cluster virtual server. The fully qualified DNS name is a combination of the DNS host name and the DNS domain name, using the form HostName.DomainName.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.TokenElevationType">
            <summary>
            Defines the token elevation type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.TokenElevationType.Unknown">
            <summary>
            The token elevation type cannot be determined or the running Windows version does not support token elevation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.TokenElevationType.Default">
            <summary>
            The token does not have a linked token.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.TokenElevationType.Full">
            <summary>
            The token is linked to an elevated token. You are running as an administrator without UAC disabled.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.TokenElevationType.Limited">
            <summary>
            The token is linked to a limited token. You are running as an administrator with UAC enabled.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Triplet`3">
            <summary>
            Provides a utility class that is used to store three related objects. 
            </summary>
            <typeparam name="TFirst">The type of the first object.</typeparam>
            <typeparam name="TSecond">The type of the second object.</typeparam>
            <typeparam name="TThird">The type of the third object.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Triplet`3.#ctor(`0,`1,`2)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Triplet`3"/> struct.
            </summary>
            <param name="first">The first object.</param>
            <param name="second">The second object.</param>
            <param name="third">The third object.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Triplet`3.First">
            <summary>
            Gets or sets the first object of the object triplet.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Triplet`3.Second">
            <summary>
            Gets or sets the second object of the object triplet.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Triplet`3.Third">
            <summary>
            Gets or sets the third object of the object triplet.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.VersionInfo">
            <summary>
            Represents a set of utilities to read Win32 version information from a file.
            This class should not be use. Replace it with System.Diagnostics.FileVersionInfo which provides equivalent features.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VersionInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.VersionInfo"/> class.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.LCID">
            <summary>
            Gets the LCID.
            </summary>
            <value>The LCID.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.CodePage">
            <summary>
            Gets the code page.
            </summary>
            <value>The code page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersion">
            <summary>
            Gets the file version.
            </summary>
            <value>The file version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersionMajor">
            <summary>
            Gets the file version major.
            </summary>
            <value>The file version major.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersionMinor">
            <summary>
            Gets the file version minor.
            </summary>
            <value>The file version minor.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersionRevision">
            <summary>
            Gets the file version revision.
            </summary>
            <value>The file version revision.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersionBuild">
            <summary>
            Gets the file version build.
            </summary>
            <value>The file version build.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersion">
            <summary>
            Gets the product version.
            </summary>
            <value>The product version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersionMajor">
            <summary>
            Gets the product version major.
            </summary>
            <value>The product version major.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersionMinor">
            <summary>
            Gets the product version minor.
            </summary>
            <value>The product version minor.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersionRevision">
            <summary>
            Gets the product version revision.
            </summary>
            <value>The product version revision.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersionBuild">
            <summary>
            Gets the product version build.
            </summary>
            <value>The product version build.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.Comments">
            <summary>
            Gets the comments.
            </summary>
            <value>The comments.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.InternalName">
            <summary>
            Gets the internal name.
            </summary>
            <value>The internal name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductName">
            <summary>
            Gets product name.
            </summary>
            <value>The product name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.CompanyName">
            <summary>
            Gets the company name.
            </summary>
            <value>The company name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.LegalCopyright">
            <summary>
            Gets the legal copyright.
            </summary>
            <value>The legal copyright.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileDescription">
            <summary>
            Gets the file description.
            </summary>
            <value>The file description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.LegalTrademarks">
            <summary> Gets the legal trademarks.</summary>
            <returns>The legal trademarks.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.PrivateBuild">
            <summary>
            Gets the private build.
            </summary>
            <value>The private build.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.OriginalFileName">
            <summary>
            Gets the original file name.
            </summary>
            <value>The original file name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.SpecialBuild">
            <summary>
            Gets the special build.
            </summary>
            <value>The special build.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FilePath">
            <summary>
            Gets the file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Win32FindData">
            <summary>
            Defines a file system entry.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Win32FindData.FromPath(System.String)">
            <summary>
            Creates a Win32FindData from a path
            </summary>
            <param name="path">The path. May not be null.</param>
            <returns>An instance of the Win32FindData class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Win32FindData.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.FullName">
            <summary>
            Gets the full path of the file or directory.
            </summary>
            <value>
            A string containing the full path.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.Attributes">
            <summary>
            Gets the attributes for the current file or directory.
            </summary>
            <value>
            The file or directory attributes.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.CreationTimeUtc">
            <summary>
            Gets the creation time of the current file or directory in UTC coordinates.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.LastAccessTimeUtc">
            <summary>
            Gets the time the current file or directory was last accessed in UTC coordinates.
            </summary>
            <value>
            The last access time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.LastWriteTimeUtc">
            <summary>
            Gets the time when the current file or directory was last written to in UTC coordinates.
            </summary>
            <value>
            The last write time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.LastWriteTime">
            <summary>
            Gets the time when the current file or directory was last written to.
            </summary>
            <value>
            The last write time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.CreationTime">
            <summary>
            Gets the creation time of the current file or directory.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.LastAccessTime">
            <summary>
            Gets the time the current file or directory was last accessed.
            </summary>
            <value>
            The last access time.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.Length">
            <summary>
            Gets the size, in bytes, of the current file.
            </summary>
            <value>
            The size of the current file in bytes.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.Extension">
            <summary>
            Gets the full path's extension.
            </summary>
            <value>
            A string containing the full path's extension.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Win32FindData.IsDirectory">
            <summary>
            Gets a value indicating whether this instance is a directory.
            </summary>
            <value>
            <c>true</c> if this instance is a directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute">
            <summary>
            Defines an XmlAttribute that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute"/> class.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="localname">The localname.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection">
            <summary>
            Defines an XmlCDataSection that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoComment">
            <summary>
            Defines an XmlComment that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoComment.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoComment"/> class.
            </summary>
            <param name="comment">The content of the comment element.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoComment.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoComment.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoComment.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoComment.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration">
            <summary>
            Defines an XmlDeclaration that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration"/> class.
            </summary>
            <param name="version">The XML version; see the <see cref="P:System.Xml.XmlDeclaration.Version"/> property.</param>
            <param name="encoding">The encoding scheme; see the <see cref="P:System.Xml.XmlDeclaration.Encoding"/> property.</param>
            <param name="standalone">Indicates whether the XML document depends on an external DTD; see the <see cref="P:System.Xml.XmlDeclaration.Standalone"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoDocument">
            <summary>
            Defines an XmlDocument that stores line information for elements.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.Load(System.Xml.XmlReader)">
            <summary>
            Loads the XML document from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The XmlReader used to feed the XML data into the document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Imports a node from another document to the current document.
            </summary>
            <param name="node">The node being imported.</param>
            <param name="deep">true to perform a deep clone; otherwise, false.</param>
            <returns>
            The imported <see cref="T:System.Xml.XmlNode"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.GetFilePath(System.Xml.XmlNode)">
            <summary>
            Gets the source file path for a given node loaded by the XmlLineInfoDocument class.
            </summary>
            <param name="node">The input node.</param>
            <returns>A local absolute file path</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateElement(System.String,System.String,System.String)">
            <summary>
            Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix"/>, <see cref="P:System.Xml.XmlDocument.LocalName"/>, and <see cref="P:System.Xml.XmlNode.NamespaceURI"/>.
            </summary>
            <param name="prefix">The prefix of the new element (if any). String.Empty and null are equivalent.</param>
            <param name="localName">The local name of the new element.</param>
            <param name="namespaceURI">The namespace URI of the new element (if any). String.Empty and null are equivalent.</param>
            <returns>
            The new <see cref="T:System.Xml.XmlElement"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlAttribute"/> with the specified <see cref="P:System.Xml.XmlNode.Prefix"/>, <see cref="P:System.Xml.XmlDocument.LocalName"/>, and <see cref="P:System.Xml.XmlNode.NamespaceURI"/>.
            </summary>
            <param name="prefix">The prefix of the attribute (if any). String.Empty and null are equivalent.</param>
            <param name="localName">The local name of the attribute.</param>
            <param name="namespaceURI">The namespace URI of the attribute (if any). String.Empty and null are equivalent. If <paramref name="prefix"/> is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown.</param>
            <returns>The new XmlAttribute.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateCDataSection(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlCDataSection"/> containing the specified data.
            </summary>
            <param name="data">The content of the new XmlCDataSection.</param>
            <returns>The new XmlCDataSection.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateComment(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlComment"/> containing the specified data.
            </summary>
            <param name="data">The content of the new XmlComment.</param>
            <returns>The new XmlComment.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a new <see cref="T:System.Xml.XmlDocumentType"/> object.
            </summary>
            <param name="name">Name of the document type.</param>
            <param name="publicId">The public identifier of the document type or null. You can specify a public URI and also a system identifier to identify the location of the external DTD subset.</param>
            <param name="systemId">The system identifier of the document type or null. Specifies the URL of the file location for the external DTD subset.</param>
            <param name="internalSubset">The DTD internal subset of the document type or null.</param>
            <returns>The new XmlDocumentType.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateEntityReference(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlEntityReference"/> with the specified name.
            </summary>
            <param name="name">The name of the entity reference.</param>
            <returns>The new XmlEntityReference.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateProcessingInstruction(System.String,System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlProcessingInstruction"/> with the specified name and data.
            </summary>
            <param name="target">The name of the processing instruction.</param>
            <param name="data">The data for the processing instruction.</param>
            <returns>The new XmlProcessingInstruction.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateSignificantWhitespace(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlSignificantWhitespace"/> node.
            </summary>
            <param name="text">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</param>
            <returns>A new XmlSignificantWhitespace node.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateTextNode(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlText"/> with the specified text.
            </summary>
            <param name="text">The text for the Text node.</param>
            <returns>The new XmlText node.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateWhitespace(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlWhitespace"/> node.
            </summary>
            <param name="text">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</param>
            <returns>A new XmlWhitespace node.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlDeclaration"/> node with the specified values.
            </summary>
            <param name="version">The version must be "1.0".</param>
            <param name="encoding">The value of the encoding attribute. This is the encoding that is used when you save the <see cref="T:System.Xml.XmlDocument"/> to a file or a stream; therefore, it must be set to a string supported by the <see cref="T:System.Text.Encoding"/> class, otherwise <see cref="M:System.Xml.XmlDocument.Save(System.String)"/> fails. If this is null or String.Empty, the Save method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.
            Note: If the XmlDocument is saved to either a <see cref="T:System.IO.TextWriter"/> or an <see cref="T:System.Xml.XmlTextWriter"/>, this encoding value is discarded. Instead, the encoding of the TextWriter or the XmlTextWriter is used. This ensures that the XML written out can be read back using the correct encoding.</param>
            <param name="standalone">The value must be either "yes" or "no". If this is null or String.Empty, the Save method does not write a standalone attribute on the XML declaration.</param>
            <returns>The new XmlDeclaration node.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.SourceUri">
            <summary>
            Gets the source URI.
            </summary>
            <value>The source URI.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType">
            <summary>
            Defines an XmlDocumentType that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType"/> class.
            </summary>
            <param name="name">The qualified name; see the <see cref="P:System.Xml.XmlDocumentType.Name"/> property.</param>
            <param name="publicId">The public identifier; see the <see cref="P:System.Xml.XmlDocumentType.PublicId"/> property.</param>
            <param name="systemId">The system identifier; see the <see cref="P:System.Xml.XmlDocumentType.SystemId"/> property.</param>
            <param name="internalSubset">The DTD internal subset; see the <see cref="P:System.Xml.XmlDocumentType.InternalSubset"/> property.</param>
            <param name="doc">The parent document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoElement">
            <summary>
            Defines an XmlElement that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoElement"/> class.
            </summary>
            <param name="prefix">The namespace prefix; see the <see cref="P:System.Xml.XmlElement.Prefix"/> property.</param>
            <param name="localName">The local name; see the <see cref="P:System.Xml.XmlElement.LocalName"/> property.</param>
            <param name="namespaceURI">The namespace URI; see the <see cref="P:System.Xml.XmlElement.NamespaceURI"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoElement.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoElement.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoElement.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoElement.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference">
            <summary>
            Defines an XmlLineInfoEntityReference that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference"/> class.
            </summary>
            <param name="name">The name of the entity reference; see the <see cref="P:System.Xml.XmlEntityReference.Name"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction">
            <summary>
            Defines an XmlLineInfoProcessingInstruction that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction"/> class.
            </summary>
            <param name="target">The target of the processing instruction; see the <see cref="P:System.Xml.XmlProcessingInstruction.Target"/> property.</param>
            <param name="data">The content of the instruction; see the <see cref="P:System.Xml.XmlProcessingInstruction.Data"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace">
            <summary>
            Defines an XmlLineInfoSignificantWhitespace that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace"/> class.
            </summary>
            <param name="strData">The white space characters of the node.</param>
            <param name="doc">The <see cref="T:System.Xml.XmlDocument"/> object.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoText">
            <summary>
            Defines an XmlLineInfoText that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoText.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoText"/> class.
            </summary>
            <param name="strData">The content of the node; see the <see cref="P:System.Xml.XmlText.Value"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoText.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoText.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoText.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoText.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace">
            <summary>
            Defines an XmlLineInfoWhitespace that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace"/> class.
            </summary>
            <param name="strData">The white space characters of the node.</param>
            <param name="doc">The <see cref="T:System.Xml.XmlDocument"/> object.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlUtilities">
            <summary>
            Represents a set of Xml utilities
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.XmlUtilities.XmlNamespaceUri">
            <summary>
            Defines the Xml Namespace uri: 'http://www.w3.org/2000/xmlns/'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.XmlUtilities.XmlNamespacePrefix">
            <summary>
            Defines the Xml Namespace prefix: 'xmlns'.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2005SchemasDirectory">
            <summary>
            Gets the Visual Studio 2005 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2008SchemasDirectory">
            <summary>
            Gets the Visual Studio 2008 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2010SchemasDirectory">
            <summary>
            Gets the Visual Studio 2010 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2012SchemasDirectory">
            <summary>
            Gets the Visual Studio 2012 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2013SchemasDirectory">
            <summary>
            Gets the Visual Studio 2013 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2015SchemasDirectory">
            <summary>
            Gets the Visual Studio 2015 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2017SchemasDirectory">
            <summary>
            Gets the Visual Studio 2017 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.Indent(System.Xml.XmlDocument)">
            <summary>
            Indents the specified Xml document.
            </summary>
            <param name="doc">The document instance. If null, null will be returned.</param>
            <returns>A string representing the output indented document.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.Indent(System.Xml.XmlNode)">
            <summary>
            Indents the specified Xml node.
            </summary>
            <param name="node">The node instance. If null, null will be returned.</param>
            <returns>A string representing the output indented document.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.IndentContent(System.Xml.XmlNode)">
            <summary>
            Indents the specified Xml node content.
            </summary>
            <param name="node">The node instance. If null, null will be returned.</param>
            <returns>A string representing the output indented document.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.IsNamespaceAttribute(System.Xml.XmlAttribute)">
            <summary>
            Determines whether the specified attribute is an xml namespace declaration attribute.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns>
            	<c>true</c> if the specified attribute is an xml namespace declaration attribute; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.HaveSameAttributes(System.Xml.XmlNode,System.Xml.XmlNode,System.Boolean,System.Object[])">
            <summary>
            Determines if two Xml nodes have the same set of attributes.
            </summary>
            <param name="left">The left node. May not be null.</param>
            <param name="right">The right node. May not be null.</param>
            <param name="ignoreCase">if set to <c>true</c> case will be ignored when comparing attributes values.</param>
            <param name="names">The names of attributes to check. May not be null.</param>
            <returns><c>true</c> if the nodes have the attributes and their values are the sames;<c>false</c> otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.MergeAttributes(System.Xml.XmlNode,System.Xml.XmlNode,System.String[])">
            <summary>
            Merges the attributes of two nodes.
            </summary>
            <param name="sourceNode">The source node. May not be null.</param>
            <param name="targetNode">The target node. May not be null.</param>
            <param name="skipNames">A list of names that can be skipped. May be null or empty.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.SetAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Sets an attribute on a node. If the attribute already exists, its value will be overwritten.
            The function can also delete an attribute.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The attribute name. May not be null.</param>
            <param name="value">The value to set. If null, the attribute will be deleted.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.SetAttribute(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Sets an attribute on a node. If the attribute already exists, its value will be overwritten.
            The function can also delete an attribute.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name. May not be null.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="value">The value to set. If null, the attribute will be deleted.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Gets a node attribute value. If the attribute does not exists, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.String)">
            <summary>
            Gets a node attribute value. If the attribute does not exists, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Gets a node attribute value. If the attribute does not exists, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Gets a node attribute value. If the attribute does not exists, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Guid)">
            <summary>
            Gets a node attribute value as a System.Guid. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Guid)">
            <summary>
            Gets a node attribute value as a System.Guid. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Guid)">
            <summary>
            Gets a node attribute value as a System.Guid. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Guid)">
            <summary>
            Gets a node attribute value as a System.Guid. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            Gets a node attribute value as a System.Boolean. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets a node attribute value as a System.Boolean. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean)">
            <summary>
            Gets a node attribute value as a System.Boolean. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets a node attribute value as a System.Boolean. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Char)">
            <summary>
            Gets a node attribute value as a System.Char. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Char)">
            <summary>
            Gets a node attribute value as a System.Char. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Char)">
            <summary>
            Gets a node attribute value as a System.Char. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Char)">
            <summary>
            Gets a node attribute value as a System.Char. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Decimal. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Decimal. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Decimal. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Decimal. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Double,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Double. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Double,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Double. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.DateTime. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.DateTime. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Double,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Double. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Double,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Double. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Single,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Single. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Single,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Single. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Single,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Single. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Single,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Single. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Int16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Int16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.UInt32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.UInt32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.UInt32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.UInt32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.UInt64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.UInt64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.UInt64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.UInt64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.UInt16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.UInt16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.UInt16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.UInt16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.SByte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.SByte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.SByte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.SByte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.SByte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.SByte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.SByte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.SByte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Byte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Byte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Byte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Byte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Byte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Byte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Byte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Byte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Int16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Int16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Int64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Int64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Int64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Int64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Int32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Int32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Int32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Int32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.DateTime. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.DateTime. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Enum)">
            <summary>
            Gets a node attribute value as an enum. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Enum)">
            <summary>
            Gets a node attribute value as an enum. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Enum)">
            <summary>
            Gets a node attribute value as an enum. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Enum,System.Boolean)">
            <summary>
            Gets a node attribute value as an enum. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,``0,System.IFormatProvider)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,``0)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Collections.Generic.IEnumerable{System.Xml.XmlNode},System.String,System.Boolean,``0,System.IFormatProvider)">
            <summary>
            Gets an attribute value from a list of node. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="nodes">The nodes. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,System.Boolean,``0,System.IFormatProvider)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,System.String,``0,System.IFormatProvider)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,System.String,System.Boolean,``0,System.IFormatProvider)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetOwnerElement(System.Xml.XmlNode)">
            <summary>
            Gets the owner element of a node or the node itself if the node is an element.
            </summary>
            <param name="node">The node. May not be null.</param>
            <returns>The parent element instance or null if the node has no parent.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.AddNamespaceAttributeToDocument(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Adds the xmlns attribute with a prefix to an existing document, corresponding to a given Xml namespace uri.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="prefix">The prefix. May not be null.</param>
            <param name="namespaceUri">The namespace URI. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.AddNamespaceAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Adds the xmlns attribute with a prefix to an existing node, corresponding to a given Xml namespace uri.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="prefix">The prefix. May not be null.</param>
            <param name="namespaceUri">The namespace URI. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAllNamespaces(System.Xml.XmlDocument)">
            <summary>
            Gets all namespaces in an Xml document.
            </summary>
            <param name="document">The input document. May not be null.</param>
            <returns>A namespace manager instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.IsGeneratedNamespaceDeclaration(System.String,System.String)">
            <summary>
            Determines whether the specified prefix and local name correspond to an XmlWriter generated namespace.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="localName">The local name.</param>
            <returns>true if the specified prefix and local name correspond to an XmlWriter generated namespace; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAllNamespaces(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Gets all namespaces in an Xml node.
            </summary>
            <param name="node">The node to get namespaces from.</param>
            <param name="recursive">if set to <c>true</c> the search is recursive.</param>
            <returns>
            A list of namespace URIs.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.Reconfigure(System.Object,System.Xml.XmlElement)">
            <summary>
            Reconfigures the specified object if it implements the IConfigurable interface.
            </summary>
            <param name="obj">The object to reconfigure. May be null.</param>
            <param name="element">The Xml element. May be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlXPathDocument">
            <summary>
            Defines an XmlDocument that has a corresponding XPATH expression for each element.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.XmlXPathDocument.XmlTransformNamespaceUri">
            <summary>
            Defines the Xml transform namespace URI.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.XmlXPathDocument.XmlTransformNamespacePrefix">
            <summary>
            Defines the Xml transform namespace default prefix.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.InjectXml(System.Xml.XmlDocument)">
            <summary>
            Injects transformations into another Xml document.
            </summary>
            <param name="target">The target document. May not be null.</param>
            <returns>true if something has changed in the target document; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathDocument"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.#ctor(System.Xml.XmlNameTable)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathDocument"/> class with a specified name table.
            </summary>
            <param name="nameTable">The name table.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.#ctor(System.Xml.XmlImplementation)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathDocument"/> class with a specified implementation.
            </summary>
            <param name="implementation">The implementation.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.Construct">
            <summary>
            Constructs this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.CreateElement(System.String,System.String,System.String)">
            <summary>
            Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix"/>, <see cref="P:System.Xml.XmlDocument.LocalName"/>, and <see cref="P:System.Xml.XmlNode.NamespaceURI"/>.
            </summary>
            <param name="prefix">The prefix of the new element (if any). String.Empty and null are equivalent.</param>
            <param name="localName">The local name of the new element.</param>
            <param name="namespaceURI">The namespace URI of the new element (if any). String.Empty and null are equivalent.</param>
            <returns>
            The new <see cref="T:System.Xml.XmlElement"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.CreateCDataSection(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlCDataSection" /> containing the specified data.
            </summary>
            <param name="data">The content of the new XmlCDataSection.</param>
            <returns>
            The new XmlCDataSection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.CreateTextNode(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlText" /> with the specified text.
            </summary>
            <param name="text">The text for the Text node.</param>
            <returns>
            The new XmlText node.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.AddDiscriminantAttribute(System.String,System.String)">
            <summary>
            Adds a discriminant attribute.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="namespaceURI">The namespace URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.AddFilteredAttribute(System.String,System.String)">
            <summary>
            Adds a filtered attribute.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="namespaceURI">The namespace URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.IsDiscriminant(System.Xml.XmlAttribute)">
            <summary>
            Determines whether the specified attribute is discriminant for building XPATH expressions.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns>
            	<c>true</c> if the specified attribute is filtered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.IsFiltered(System.Xml.XmlAttribute)">
            <summary>
            Determines whether the specified attribute is filtered.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns>
            	<c>true</c> if the specified attribute is filtered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.FindDifferentAttributes(System.Xml.XmlNode,System.Xml.XmlNode,System.Collections.Generic.IList{System.Xml.XmlAttribute},System.Collections.Generic.IList{System.Xml.XmlAttribute},System.Collections.Generic.IList{System.Xml.XmlAttribute})">
            <summary>
            Finds attributes differences between two Xml nodes.
            </summary>
            <param name="node1">The first node. May not be null.</param>
            <param name="node2">The second node. May not be null.</param>
            <param name="onlyInNode1">The list of attributes only in the first node. May not be null.</param>
            <param name="onlyInNode2">The list of attributes only in the second node. May not be null.</param>
            <param name="different">The list of attributes in both nodes with different values. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathDocument.XmlTransformNamespaceManager">
            <summary>
            Gets the Xml transform namespace manager.
            </summary>
            <value>The Xml transform namespace manager.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathDocument.XPathNamespaceManager">
            <summary>
            Gets the corresponding Xml namespace manager.
            </summary>
            <value>The Xml namespace manager.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlXPathElement">
            <summary>
            Defines an XmlElement for the XmlXPathDocument.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathElement.#ctor(System.String,System.String,System.String,CodeFluent.Runtime.Utilities.XmlXPathDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathElement"/> class.
            </summary>
            <param name="prefix">The namespace prefix; see the <see cref="P:System.Xml.XmlElement.Prefix"/> property.</param>
            <param name="localName">The local name; see the <see cref="P:System.Xml.XmlElement.LocalName"/> property.</param>
            <param name="namespaceURI">The namespace URI; see the <see cref="P:System.Xml.XmlElement.NamespaceURI"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathElement.OwnerDocument">
            <summary>
            Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathElement.XPathExpression">
            <summary>
            Gets the XPath expression for this instance.
            </summary>
            <value>
            The XPath information.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.BooleanConverter">
            <summary>
            Provides a type converter to convert any object into a boolean value if the object is equal to the parameter.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.BooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.BooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.BooleanConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.BooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.InvertBooleanConverter">
            <summary>
            Provides a type converter to convert any object into the invert boolean value. If parameter is provided, it will test if value is diferrent from to parameter.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.InvertBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.InvertBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.InvertBooleanConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.InvertBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.UniversalConverter">
            <summary>
            Provides a converter to convert any object into another object, using a switch/case paradigm.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverter.DefaultValue">
            <summary>
            Gets or sets the default value to use if no case matches.
            </summary>
            <value>
            The default value to use if no case matches.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverter.Switch">
            <summary>
            Gets the list of cases.
            </summary>
            <value>
            The list of cases.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.UniversalConverterCase">
            <summary>
            Defines a case for the UniversalConverter class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverterCase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Windows.UniversalConverterCase"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverterCase.Matches(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks Value with the specified input value.
            </summary>
            <param name="value">The value to test.</param>
            <param name="parameter">The parameter passed from the value converter.</param>
            <param name="culture">The culture passed from the value converter.</param>
            <returns>true if Value is equals to the specified value.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterCase.Value">
            <summary>
            Gets or sets the value to test.
            </summary>
            <value>
            The value to test.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterCase.ConvertedValue">
            <summary>
            Gets or sets the converted value to return if there is a match.
            </summary>
            <value>
            The converted value to return.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterCase.MinimumValue">
            <summary>
            Gets or sets the minimum value to use for range comparison.
            </summary>
            <value>
            The minimum value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterCase.MaximumValue">
            <summary>
            Gets or sets the maximum value to use for range comparison.
            </summary>
            <value>
            The maximum value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterCase.Options">
            <summary>
            Gets or sets the options to use to determine if there is a match.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterCase.Operator">
            <summary>
            Gets or sets the operator to use to determine if there is a match. The default value is Equal.
            </summary>
            <value>
            The operator.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterCase.StringComparison">
            <summary>
            Gets or sets a value indicating how to compare strings.
            </summary>
            <value>
            The string comparison.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterCase.Reverse">
            <summary>
            Gets or sets a value indicating whether the result must be reversed.
            </summary>
            <value>true if the result must be reversed; false otherwise.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.UniversalConverterInput">
            <summary>
            Defines input for a comparison test.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverterInput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Windows.UniversalConverterInput"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverterInput.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverterInput.Matches">
            <summary>
            Determine if the input values matches, depending on the input operator and options.
            </summary>
            <returns>true if the values matches; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.UniversalConverterInput.Matches(System.IFormatProvider)">
            <summary>
            Determine if the input values matches, depending on the input operator and options.
            </summary>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>true if the values matches; false otherwise.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterInput.Value">
            <summary>
            Gets or sets the value to test.
            </summary>
            <value>
            The value to test.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterInput.ValueToCompare">
            <summary>
            Gets or sets the value to use for general comparison.
            </summary>
            <value>
            The value to test.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterInput.MinimumValue">
            <summary>
            Gets or sets the minimum value to use for range comparison.
            </summary>
            <value>
            The minimum value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterInput.MaximumValue">
            <summary>
            Gets or sets the maximum value to use for range comparison.
            </summary>
            <value>
            The maximum value.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterInput.ConverterParameter">
            <summary>
            Gets or sets the converted parameter.
            </summary>
            <value>
            The parameter.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterInput.Options">
            <summary>
            Gets or sets the options to use to determine if there is a match.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterInput.Operator">
            <summary>
            Gets or sets the operator to use to determine if there is a match. The default value is Equal.
            </summary>
            <value>
            The operator.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterInput.Reverse">
            <summary>
            Gets or sets a value indicating whether the result must be reversed.
            </summary>
            <value>true if the result must be reversed; false otherwise.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.UniversalConverterInput.StringComparison">
            <summary>
            Gets or sets a value indicating how to compare strings.
            </summary>
            <value>
            The string comparison.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.UniversalConverterOperator">
            <summary>
            Specifies the comparison operators used by the UniversalConverter.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.Equal">
            <summary>
            A comparison for equality.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.NotEqual">
            <summary>
            A comparison for inequality.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.GreaterThan">
            <summary>
            A comparison for greater than.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.GreaterThanOrEqual">
            <summary>
            A comparison for greater than or equal to.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.LesserThan">
            <summary>
            A comparison for lesser than.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.LesserThanOrEqual">
            <summary>
            A comparison for lesser than or equal to.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.Between">
            <summary>
            A range comparison, inclusive on minimum value, exclusive on maximum value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.StartsWith">
            <summary>
            A comparison between the beginning of this instance and the specified string. This instance is converted to a string if needed before comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.EndsWith">
            <summary>
            A comparison between the beginning of this instance and the specified string. This instance is converted to a string if needed before comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.Contains">
            <summary>
            A comparison between this instance content and the specified string. This instance is converted to a string if needed before comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.IsType">
            <summary>
            A comparison for type equality.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.IsOfType">
            <summary>
            A comparison for type assignability.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOperator.Javascript">
            <summary>
            A custom comparison defined using Javascript. The code must return a boolean value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.UniversalConverterOptions">
            <summary>
            Defines validation options for the UniversalConverter.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOptions.Trim">
            <summary>
            Determines if string values must be trimmed before comparisons.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOptions.Convert">
            <summary>
            Determines if values must be converted before final comparisons.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOptions.Nullify">
            <summary>
            Determines if string values must be nullified before comparisons.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOptions.NullMatchesType">
            <summary>
            Determines if a null value matches a type check (if the type is a reference type).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOptions.DontThrowJavascriptErrors">
            <summary>
            Determines if javascript expression may throw errors.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.UniversalConverterOptions.ConvertedValueIsConverterParameter">
            <summary>
            Use the converter parameter as the converted value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.ValidationRule">
            <summary>
            Defines a WPF validation rule that checks for ICodeFluentValidtor and IDataErrorInfo interfaces.
            If you are targeting a .NET Framework 3.5 or higher support, you should preferrably use the System.Windows.Controls.DataErrorValidationRule class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ValidationRule.#ctor(System.Windows.Data.Binding,System.Windows.Data.BindingExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Windows.ValidationRule"/> class.
            </summary>
            <param name="binding">The binding.</param>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.ErrorProvider">
            <summary>
            Defines a WPF decorator class for validation of complete XAML fragment.
            Freely inspired from http://paulstovell.net/Articles/WPFValidation.aspx
            If you are targeting a .NET Framework 3.5 or higher support, you should preferrably use the System.Windows.Controls.DataErrorValidationRule class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ErrorProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Windows.ErrorProvider"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ErrorProvider.Validate">
            <summary>
            Validates all properties on the current data source.
            </summary>
            <returns>
            True if there are no errors displayed; otherwise false.
            </returns>
            <remarks>
            Note that only errors on properties that are displayed are included.
            Other errors, such as errors for properties that are not displayed, will not be validated by this method.
            </remarks>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ErrorProvider.OnValidation(CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs)">
            <summary>
            Called when validation occurs on a specified binding.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ErrorProvider.Clear">
            <summary>
            Clears any error messages.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ErrorProvider.ClearBindingsCache">
            <summary>
            Clears the binding cache.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Windows.ErrorProvider.Validation">
            <summary>
            Occurs when validation happens.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.ErrorProvider.ValidateOnLoad">
            <summary>
            Gets or sets a value indicating whether validation must occurs on data context changes.
            </summary>
            <value>
            	<c>true</c> if validation must occurs on data context changes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.ErrorProvider.CacheBindings">
            <summary>
            Gets or sets a value indicating whether bindings are cached.
            </summary>
            <value><c>true</c> if bindings are cached; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.ErrorProvider.FirstInvalidElement">
            <summary>
            Gets the first element that this error provider has labelled as invalid.
            This is useful to set the users focus on the first visible error field on a page.
            </summary>
            <value>The first invalid element.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs">
            <summary>
            Provides data for a validation event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs.#ctor(System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Windows.Data.Binding,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="property">The property.</param>
            <param name="binding">The binding.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs.Element">
            <summary>
            Gets the element.
            </summary>
            <value>The element.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs.Property">
            <summary>
            Gets the property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs.Binding">
            <summary>
            Gets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Windows.ErrorProvider.ValidationEventArgs"/> should be canceled.
            </summary>
            <value><c>true</c> if canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.ValidationBinding">
            <summary>
            Defines a custom WPF binding for automatic rule validation.
            If you are targeting a .NET Framework 3.5 or higher support, you should preferrably use the System.Windows.Controls.DataErrorValidationRule class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ValidationBinding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Windows.ValidationBinding"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.ValidationBinding.ProvideValue(System.IServiceProvider)">
            <summary>
            When implemented in a derived class, returns an object that is set as the value of the target property for this markup extension.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.WindowPlacement">
            <summary>
            A utility structure that represents a Window placement.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowPlacement.SetPlacement(System.IntPtr)">
            <summary>
            Sets the placement of a given window using its handle.
            </summary>
            <param name="windowHandle">The window handle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowPlacement.GetPlacement(System.IntPtr,System.Boolean)">
            <summary>
            Gets the placement of a given window using its handle.
            </summary>
            <param name="windowHandle">The window handle.</param>
            <param name="throwOnError">if set to <c>true</c> the method can throw errors.</param>
            <returns>The window placement.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.Flags">
            <summary>
            Gets or sets the flags.
            </summary>
            <value>
            The flags.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.ShowCmd">
            <summary>
            Gets or sets the window show command.
            </summary>
            <value>
            The show command.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.MinPositionX">
            <summary>
            Gets or sets the minimum position on the X axis.
            </summary>
            <value>
            The minimum position.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.MinPositionY">
            <summary>
            Gets or sets the minimum position on the Y axis.
            </summary>
            <value>
            The minimum position.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.MaxPositionX">
            <summary>
            Gets or sets the maximum position on the X axis.
            </summary>
            <value>
            The maximum position.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.MaxPositionY">
            <summary>
            Gets or sets the maximum position on the Y axis.
            </summary>
            <value>
            The maximum position.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.NormalPositionLeft">
            <summary>
            Gets or sets the normal left position.
            </summary>
            <value>
            The normal left position.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.NormalPositionTop">
            <summary>
            Gets or sets the normal top position.
            </summary>
            <value>
            The normal top position.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.NormalPositionRight">
            <summary>
            Gets or sets the normal right position.
            </summary>
            <value>
            The normal right position.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.NormalPositionBottom">
            <summary>
            Gets or sets the normal bottom position.
            </summary>
            <value>
            The normal bottom position.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.IsMinimized">
            <summary>
            Gets a value indicating whether the window is minimized.
            </summary>
            <value>
            <c>true</c> if the window is minimized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowPlacement.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.WindowsUtilities">
            <summary>
            Represents a set of Windows utilities
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.GetCurrentTheme">
            <summary>
            Gets the current Windows theme.
            </summary>
            <returns>An instance of the WindowsTheme class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.OpenDefaultBrowser(System.String)">
            <summary>
            Opens the default browser on a specific url.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.OpenInternetExplorer(System.String)">
            <summary>
            Opens the internet explorer on a specific file.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.OpenExplorer(System.String)">
            <summary>
            Opens the windows explorer on a specific directory.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.MailTo(System.String,System.String)">
            <summary>
            Prepare an mail using the currently registered email application.
            </summary>
            <param name="to">The target recipient. May be null.</param>
            <param name="subject">The subject. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.MailTo(System.String,System.String,System.String)">
            <summary>
            Prepare an mail using the currently registered email application.
            </summary>
            <param name="to">The target recipient. May be null.</param>
            <param name="subject">The subject. May be null.</param>
            <param name="body">The body. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.MailTo(System.String,System.String,System.String,System.String)">
            <summary>
            Prepare an mail using the currently registered email application.
            </summary>
            <param name="to">The target recipient. May be null.</param>
            <param name="subject">The subject. May be null.</param>
            <param name="body">The body. May be null.</param>
            <param name="cc">The CC recipients. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.MailTo(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Prepare an mail using the currently registered email application.
            </summary>
            <param name="to">The target recipient. May be null.</param>
            <param name="subject">The subject. May be null.</param>
            <param name="body">The body. May be null.</param>
            <param name="cc">The CC recipients. May be null.</param>
            <param name="bcc">The BCC recipients. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.ActivateWindow(System.IntPtr)">
            <summary>
            Activates a window using its handle.
            </summary>
            <param name="hwnd">The window handle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.GetModalWindow(System.IntPtr)">
            <summary>
            Gets the current modal window handle.
            </summary>
            <param name="owner">The owner window handle.</param>
            <returns>A window handle.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.GetStockBitmap(System.String)">
            <summary>
            Gets a winforms stock bitmap.
            </summary>
            <param name="name">The bitmap name.</param>
            <returns>A bitmap instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.GetStockBitmap(System.String,System.Drawing.Color)">
            <summary>
            Gets a winforms stock bitmap.
            </summary>
            <param name="name">The bitmap name.</param>
            <param name="transparentColor">The transparent color.</param>
            <returns>
            A bitmap instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.AddToStockImages(System.Windows.Forms.ImageList)">
            <summary>
            Adds the list of images to the current stock images.
            </summary>
            <param name="images">The images list. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.GetShieldImage(CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI)">
            <summary>
            Gets the shield (UAC) icon image.
            </summary>
            <param name="flags">The icon flags.</param>
            <returns>
            An image instance of null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.GetShieldIcon(CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI)">
            <summary>
            Gets the shield (UAC) icon.
            </summary>
            <param name="flags">The icon flags.</param>
            <returns>
            An icon instance of null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.GetStockImage(CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId)">
            <summary>
            Gets a stock icon image.
            </summary>
            <param name="id">The icon id.</param>
            <returns>
            An image instance of null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.GetStockImage(CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId,CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI)">
            <summary>
            Gets a stock icon image.
            </summary>
            <param name="id">The icon id.</param>
            <param name="flags">The icon flags.</param>
            <returns>
            An image instance of null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.GetStockIcon(CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId,CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI)">
            <summary>
            Gets a stock icon.
            </summary>
            <param name="id">The icon id.</param>
            <param name="flags">The icon flags.</param>
            <returns>
            An icon instance of null if it was not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.CenterWindow(System.IntPtr)">
            <summary>
            Centers a window using its handle.
            </summary>
            <param name="handle">The window handle. May not be IntPtr.Zero.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.CenterWindow(System.IntPtr,System.IntPtr)">
            <summary>
            Centers a window using its handle.
            </summary>
            <param name="handle">The window handle. May not be IntPtr.Zero.</param>
            <param name="alternateOwner">The alternate owner.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowsUtilities.IsThemeActive">
            <summary>
            Gets a value indicating whether a theme is active.
            </summary>
            <value>
            	<c>true</c> if a theme is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowsUtilities.IsApplicationThemed">
            <summary>
            Gets a value indicating whether this application is themed.
            </summary>
            <value>
            	<c>true</c> if this application is themed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowsUtilities.StockImagesCount">
            <summary>
            Gets the stock images count.
            </summary>
            <value>
            The stock images count.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowsUtilities.StockImages">
            <summary>
            Gets the stock images.
            </summary>
            <value>
            The stock images list.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.WindowsUtilities.WindowsTheme">
            <summary>
            Represents Windows Theme information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Windows.WindowsUtilities.WindowsTheme.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowsUtilities.WindowsTheme.FileName">
            <summary>
            Gets the theme file name.
            </summary>
            <value>The file name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowsUtilities.WindowsTheme.Name">
            <summary>
            Gets the theme name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowsUtilities.WindowsTheme.ColorScheme">
            <summary>
            Gets the theme color scheme.
            </summary>
            <value>The color scheme.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Windows.WindowsUtilities.WindowsTheme.SizeName">
            <summary>
            Gets the theme size name.
            </summary>
            <value>The size name.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId">
            <summary>
            Specifies Windows stock icon identifiers. See http://msdn.microsoft.com/en-US/windows/bb762542 for more details.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DOCNOASSOC">
            <summary>
            Document of a type with no associated application.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DOCASSOC">
            <summary>
            Document of a type with an associated application.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.APPLICATION">
            <summary>
            Generic application with no custom icon.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.FOLDER">
            <summary>
            Folder (generic, unspecified state).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.FOLDEROPEN">
            <summary>
            Folder (open).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVE525">
            <summary>
            5.25-inch disk drive.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVE35">
            <summary>
            3.5-inch disk drive.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVEREMOVE">
            <summary>
            Removable drive.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVEFIXED">
            <summary>
            Fixed drive (hard disk).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVENET">
            <summary>
            Network drive (connected).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVENETDISABLED">
            <summary>
            Network drive (disconnected).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVECD">
            <summary>
            CD drive.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVERAM">
            <summary>
            RAM disk drive.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.WORLD">
            <summary>
            The entire network.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.SERVER">
            <summary>
            A computer on the network.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.PRINTER">
            <summary>
            A local printer or print destination.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MYNETWORK">
            <summary>
            The Network virtual folder.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.FIND">
            <summary>
            The Search feature.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.HELP">
            <summary>
            The Help and Support feature.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.SHARE">
            <summary>
            Overlay for a shared item.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.LINK">
            <summary>
            Overlay for a shortcut.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.SLOWFILE">
            <summary>
            Overlay for items that are expected to be slow to access.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.RECYCLER">
            <summary>
            The Recycle Bin (empty).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.RECYCLERFULL">
            <summary>
            The Recycle Bin (not empty).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIACDAUDIO">
            <summary>
            Audio CD media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.LOCK">
            <summary>
            Security lock.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.AUTOLIST">
            <summary>
            A virtual folder that contains the results of a search.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.PRINTERNET">
            <summary>
            A network printer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.SERVERSHARE">
            <summary>
            A server shared on a network.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.PRINTERFAX">
            <summary>
            A local fax printer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.PRINTERFAXNET">
            <summary>
            A network fax printer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.PRINTERFILE">
            <summary>
            A file that receives the output of a Print to file operation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.STACK">
            <summary>
            A category that results from a Stack by command to organize the contents of a folder.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIASVCD">
            <summary>
            Super Video CD (SVCD) media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.STUFFEDFOLDER">
            <summary>
            A folder that contains only subfolders as child items.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVEUNKNOWN">
            <summary>
            Unknown drive type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVEDVD">
            <summary>
            DVD drive.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIADVD">
            <summary>
            DVD media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIADVDRAM">
            <summary>
            DVD-RAM media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIADVDRW">
            <summary>
            DVD-RW media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIADVDR">
            <summary>
            DVD-R media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIADVDROM">
            <summary>
            DVD-ROM media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIACDAUDIOPLUS">
            <summary>
            CD+ (enhanced audio CD) media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIACDRW">
            <summary>
            CD-RW media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIACDR">
            <summary>
            CD-R media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIACDBURN">
            <summary>
            A writeable CD in the process of being burned.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIABLANKCD">
            <summary>
            Blank writable CD media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIACDROM">
            <summary>
            CD-ROM media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.AUDIOFILES">
            <summary>
            An audio file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.IMAGEFILES">
            <summary>
            An image file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.VIDEOFILES">
            <summary>
            A video file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MIXEDFILES">
            <summary>
            A mixed file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.FOLDERBACK">
            <summary>
            Folder back.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.FOLDERFRONT">
            <summary>
            Folder front.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.SHIELD">
            <summary>
            Security shield. Use for UAC prompts only.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.WARNING">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.INFO">
            <summary>
            Informational.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.ERROR">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.KEY">
            <summary>
            Key.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.SOFTWARE">
            <summary>
            Software.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.RENAME">
            <summary>
            A UI item, such as a button, that issues a rename command.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DELETE">
            <summary>
            A UI item, such as a button, that issues a delete command.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIAAUDIODVD">
            <summary>
            Audio DVD media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIAMOVIEDVD">
            <summary>
            Movie DVD media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIAENHANCEDCD">
            <summary>
            Enhanced CD media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIAENHANCEDDVD">
            <summary>
            Enhanced DVD media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIAHDDVD">
            <summary>
            High definition DVD media in the HD DVD format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIABLURAY">
            <summary>
            High definition DVD media in the Blu-ray Disc™ format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIAVCD">
            <summary>
            Video CD (VCD) media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIADVDPLUSR">
            <summary>
            DVD+R media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIADVDPLUSRW">
            <summary>
            DVD+RW media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DESKTOPPC">
            <summary>
            A desktop computer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MOBILEPC">
            <summary>
            A mobile computer (laptop).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.USERS">
            <summary>
            The User Accounts Control Panel item.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIASMARTMEDIA">
            <summary>
            Smart media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIACOMPACTFLASH">
            <summary>
            CompactFlash media.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DEVICECELLPHONE">
            <summary>
            A cell phone.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DEVICECAMERA">
            <summary>
            A digital camera.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DEVICEVIDEOCAMERA">
            <summary>
            A digital video camera.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DEVICEAUDIOPLAYER">
            <summary>
            An audio player.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.NETWORKCONNECT">
            <summary>
            Connect to network.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.INTERNET">
            <summary>
            The Network and Internet Control Panel item.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.ZIPFILE">
            <summary>
            A compressed file with a .zip file name extension.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.SETTINGS">
            <summary>
            The Additional Options Control Panel item.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVEHDDVD">
            <summary>
            Windows Vista with Service Pack 1 (SP1) and later. High definition DVD drive (any type - HD DVD-ROM, HD DVD-R, HD-DVD-RAM) that uses the HD DVD format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.DRIVEBD">
            <summary>
            Windows Vista with SP1 and later. High definition DVD drive (any type - BD-ROM, BD-R, BD-RE) that uses the Blu-ray Disc format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIAHDDVDROM">
            <summary>
            Windows Vista with SP1 and later. High definition DVD-ROM media in the HD DVD-ROM format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIAHDDVDR">
            <summary>
            Windows Vista with SP1 and later. High definition DVD-R media in the HD DVD-R format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIAHDDVDRAM">
            <summary>
            Windows Vista with SP1 and later. High definition DVD-RAM media in the HD DVD-RAM format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIABDROM">
            <summary>
            Windows Vista with SP1 and later. High definition DVD-ROM media in the Blu-ray Disc BD-ROM format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIABDR">
            <summary>
            Windows Vista with SP1 and later. High definition write-once media in the Blu-ray Disc BD-R format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MEDIABDRE">
            <summary>
            Windows Vista with SP1 and later. High definition read/write media in the Blu-ray Disc BD-RE format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.CLUSTEREDDRIVE">
            <summary>
            Windows Vista with SP1 and later. A cluster disk array.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.StockIconId.MAX_ICONS">
            <summary>
            The highest valid value in the enumeration. Values over 160 are Windows 7-only icons.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI">
            <summary>
            A combination of zero or more of the following flags that specify which icon information is requested.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI.SHGSI_LARGEICON">
            <summary>
            Retrieves the large version of the icon, as specified by the SM_CXICON and SM_CYICON system metrics.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI.SHGSI_LINKOVERLAY">
            <summary>
            Adds the link overlay to the file's icon.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI.SHGSI_SELECTED">
            <summary>
            Blends the icon with the system highlight color.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI.SHGSI_SHELLICONSIZE">
            <summary>
            Retrieves the Shell-sized icons rather than the sizes specified by the system metrics.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Windows.WindowsUtilities.SHGSI.SHGSI_SMALLICON">
            <summary>
            Retrieves the small version of the icon, as specified by the SM_CXSMICON and SM_CYSMICON system metrics.
            </summary>
        </member>
    </members>
</doc>
